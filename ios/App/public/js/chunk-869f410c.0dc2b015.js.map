{"version":3,"sources":["webpack:///./node_modules/rxjs/scheduler/AsapScheduler.js","webpack:///./node_modules/rxjs/add/operator/mergeMapTo.js","webpack:///./node_modules/rxjs/operator/concatAll.js","webpack:///./node_modules/rxjs/operator/expand.js","webpack:///./node_modules/rxjs/add/operator/let.js","webpack:///./node_modules/rxjs/add/observable/race.js","webpack:///./node_modules/rxjs/operators/concatMapTo.js","webpack:///./node_modules/rxjs/add/operator/race.js","webpack:///./node_modules/rxjs/add/operator/elementAt.js","webpack:///./node_modules/rxjs/operators/concat.js","webpack:///./node_modules/rxjs/operator/skipLast.js","webpack:///./node_modules/rxjs/operators/throttleTime.js","webpack:///./node_modules/core-js/internals/object-get-own-property-descriptor.js","webpack:///./node_modules/rxjs/util/isNumeric.js","webpack:///./node_modules/rxjs/operators/scan.js","webpack:///./node_modules/rxjs/operators/exhaust.js","webpack:///./node_modules/rxjs/operators/shareReplay.js","webpack:///./node_modules/rxjs/operator/timeoutWith.js","webpack:///./node_modules/rxjs/operators/partition.js","webpack:///./node_modules/rxjs/scheduler/Action.js","webpack:///./node_modules/rxjs/operator/find.js","webpack:///./node_modules/rxjs/add/operator/auditTime.js","webpack:///./node_modules/rxjs/observable/pairs.js","webpack:///./node_modules/rxjs/add/operator/concatMapTo.js","webpack:///./node_modules/rxjs/operator/shareReplay.js","webpack:///./node_modules/rxjs/operators/publishReplay.js","webpack:///./node_modules/rxjs/operators/concatMap.js","webpack:///./node_modules/rxjs/add/operator/debounceTime.js","webpack:///./node_modules/rxjs/operator/combineLatest.js","webpack:///./node_modules/rxjs/add/observable/throw.js","webpack:///./node_modules/rxjs/operators/exhaustMap.js","webpack:///./node_modules/rxjs/operator/concatMap.js","webpack:///./node_modules/rxjs/add/operator/zipAll.js","webpack:///./node_modules/rxjs/util/noop.js","webpack:///./node_modules/rxjs/operators/takeWhile.js","webpack:///./node_modules/rxjs/observable/fromEvent.js","webpack:///./node_modules/rxjs/operators/timeoutWith.js","webpack:///./node_modules/rxjs/observable/bindCallback.js","webpack:///./node_modules/rxjs/add/operator/timestamp.js","webpack:///./node_modules/rxjs/add/observable/bindCallback.js","webpack:///./node_modules/rxjs/scheduler/AsapAction.js","webpack:///./node_modules/rxjs/operator/takeLast.js","webpack:///./node_modules/rxjs/add/operator/repeatWhen.js","webpack:///./node_modules/rxjs/scheduler/AnimationFrameAction.js","webpack:///./node_modules/rxjs/operators/skipWhile.js","webpack:///./node_modules/rxjs/add/observable/generate.js","webpack:///./node_modules/rxjs/add/operator/single.js","webpack:///./node_modules/rxjs/add/operator/publishLast.js","webpack:///./node_modules/rxjs/operator/audit.js","webpack:///./node_modules/rxjs/operators/elementAt.js","webpack:///./node_modules/rxjs/operator/switch.js","webpack:///./node_modules/rxjs/operator/bufferTime.js","webpack:///./node_modules/rxjs/operator/exhaustMap.js","webpack:///./node_modules/rxjs/add/operator/pairwise.js","webpack:///./node_modules/rxjs/operator/sampleTime.js","webpack:///./node_modules/rxjs/operator/mergeMap.js","webpack:///./node_modules/rxjs/observable/of.js","webpack:///./node_modules/rxjs/operator/concat.js","webpack:///./node_modules/rxjs/add/operator/publish.js","webpack:///./node_modules/core-js/internals/html.js","webpack:///./node_modules/rxjs/ReplaySubject.js","webpack:///./node_modules/@ionic-native/core/bootstrap.js","webpack:///./node_modules/rxjs/operators/mergeMapTo.js","webpack:///./node_modules/core-js/internals/require-object-coercible.js","webpack:///./node_modules/rxjs/operators/repeatWhen.js","webpack:///./node_modules/rxjs/add/operator/switch.js","webpack:///./node_modules/rxjs/observable/concat.js","webpack:///./node_modules/rxjs/add/operator/sampleTime.js","webpack:///./node_modules/rxjs/operators/defaultIfEmpty.js","webpack:///./node_modules/rxjs/operator/onErrorResumeNext.js","webpack:///./node_modules/rxjs/observable/from.js","webpack:///./node_modules/rxjs/add/operator/timeInterval.js","webpack:///./node_modules/core-js/internals/to-absolute-index.js","webpack:///./node_modules/core-js/internals/export.js","webpack:///./node_modules/core-js/internals/object-get-own-property-names.js","webpack:///./node_modules/core-js/modules/es.string.includes.js","webpack:///./node_modules/rxjs/operator/every.js","webpack:///./node_modules/rxjs/operators/repeat.js","webpack:///./node_modules/rxjs/add/operator/mergeAll.js","webpack:///./node_modules/rxjs/operators/expand.js","webpack:///./node_modules/rxjs/add/observable/combineLatest.js","webpack:///./node_modules/rxjs/add/operator/find.js","webpack:///./node_modules/rxjs/operators/retry.js","webpack:///./node_modules/@ionic-native/core/decorators/common.js","webpack:///./node_modules/rxjs/add/operator/bufferToggle.js","webpack:///./node_modules/rxjs/operator/retry.js","webpack:///./node_modules/rxjs/operator/sequenceEqual.js","webpack:///./node_modules/rxjs/add/observable/fromPromise.js","webpack:///./node_modules/rxjs/add/operator/findIndex.js","webpack:///./node_modules/rxjs/add/operator/pluck.js","webpack:///./node_modules/rxjs/operator/timeout.js","webpack:///./node_modules/rxjs/observable/empty.js","webpack:///./node_modules/rxjs/operator/combineAll.js","webpack:///./node_modules/rxjs/add/operator/finally.js","webpack:///./node_modules/rxjs/observable/forkJoin.js","webpack:///./node_modules/rxjs/operators/merge.js","webpack:///./node_modules/@ionic-native/core/util.js","webpack:///./node_modules/@ionic-native/core/ionic-native-plugin.js","webpack:///./node_modules/rxjs/add/operator/debounce.js","webpack:///./node_modules/rxjs/operators/single.js","webpack:///./node_modules/rxjs/add/operator/switchMap.js","webpack:///./node_modules/rxjs/add/operator/startWith.js","webpack:///./node_modules/rxjs/operators/ignoreElements.js","webpack:///./node_modules/rxjs/add/operator/skipWhile.js","webpack:///./node_modules/rxjs/operators/windowToggle.js","webpack:///./node_modules/rxjs/operator/isEmpty.js","webpack:///./node_modules/rxjs/Rx.js","webpack:///./node_modules/rxjs/add/operator/scan.js","webpack:///./node_modules/rxjs/Subscription.js","webpack:///./node_modules/rxjs/operators/map.js","webpack:///./node_modules/rxjs/scheduler/AnimationFrameScheduler.js","webpack:///./node_modules/rxjs/operators/observeOn.js","webpack:///./node_modules/rxjs/operator/withLatestFrom.js","webpack:///./node_modules/rxjs/add/observable/range.js","webpack:///./node_modules/rxjs/observable/PairsObservable.js","webpack:///./node_modules/core-js/internals/object-define-properties.js","webpack:///./node_modules/rxjs/observable/merge.js","webpack:///./node_modules/rxjs/add/operator/mergeMap.js","webpack:///./src/components/ChessBoard.vue?ea5e","webpack:///./node_modules/rxjs/operator/scan.js","webpack:///./node_modules/rxjs/add/operator/audit.js","webpack:///./node_modules/rxjs/util/TimeoutError.js","webpack:///./node_modules/core-js/internals/a-possible-prototype.js","webpack:///./node_modules/rxjs/util/tryCatch.js","webpack:///./node_modules/rxjs/observable/ScalarObservable.js","webpack:///./node_modules/rxjs/add/observable/concat.js","webpack:///./node_modules/rxjs/operators/bufferWhen.js","webpack:///./node_modules/rxjs/add/operator/bufferTime.js","webpack:///./node_modules/rxjs/operators/windowWhen.js","webpack:///./node_modules/rxjs/add/operator/mergeScan.js","webpack:///./node_modules/rxjs/add/observable/using.js","webpack:///./node_modules/rxjs/add/operator/throttle.js","webpack:///./node_modules/rxjs/add/operator/takeLast.js","webpack:///./node_modules/core-js/internals/path.js","webpack:///./node_modules/rxjs/observable/zip.js","webpack:///./node_modules/rxjs/Observer.js","webpack:///./node_modules/rxjs/util/applyMixins.js","webpack:///./node_modules/rxjs/observable/ErrorObservable.js","webpack:///./node_modules/core-js/internals/indexed-object.js","webpack:///./node_modules/core-js/internals/add-to-unscopables.js","webpack:///./node_modules/rxjs/add/operator/sample.js","webpack:///./node_modules/core-js/internals/is-regexp.js","webpack:///./node_modules/rxjs/observable/never.js","webpack:///./node_modules/rxjs/operators/concatAll.js","webpack:///./node_modules/rxjs/util/Set.js","webpack:///./node_modules/rxjs/observable/PromiseObservable.js","webpack:///./node_modules/@ionic-native/core/decorators/cordova-instance.js","webpack:///./node_modules/rxjs/operator/exhaust.js","webpack:///./node_modules/rxjs/operator/debounceTime.js","webpack:///./node_modules/rxjs/operators/delay.js","webpack:///./node_modules/rxjs/operator/single.js","webpack:///./node_modules/rxjs/observable/EmptyObservable.js","webpack:///./node_modules/rxjs/add/observable/dom/webSocket.js","webpack:///./node_modules/rxjs/operator/delayWhen.js","webpack:///./node_modules/rxjs/operators/audit.js","webpack:///./node_modules/rxjs/add/operator/skipUntil.js","webpack:///./node_modules/rxjs/util/FastMap.js","webpack:///./node_modules/rxjs/operator/defaultIfEmpty.js","webpack:///./node_modules/rxjs/add/operator/catch.js","webpack:///./node_modules/rxjs/add/observable/interval.js","webpack:///./node_modules/core-js/internals/array-includes.js","webpack:///./node_modules/rxjs/add/operator/last.js","webpack:///./node_modules/rxjs/operators/skipUntil.js","webpack:///./src/views/Tab1.vue","webpack:///./node_modules/@ionic-native/screen-orientation/index.js","webpack:///./src/components/ChessBoard.vue","webpack:///./src/components/ChessBoard.vue?6fe8","webpack:///./src/views/Tab1.vue?14d2","webpack:///./src/views/Tab1.vue?5c24","webpack:///./node_modules/rxjs/util/Map.js","webpack:///./node_modules/rxjs/add/observable/merge.js","webpack:///./node_modules/rxjs/add/operator/ignoreElements.js","webpack:///./node_modules/rxjs/operator/takeWhile.js","webpack:///./node_modules/rxjs/testing/ColdObservable.js","webpack:///./node_modules/rxjs/operators/bufferCount.js","webpack:///./node_modules/rxjs/add/operator/retryWhen.js","webpack:///./node_modules/core-js/internals/to-length.js","webpack:///./node_modules/rxjs/util/Immediate.js","webpack:///./node_modules/rxjs/operator/repeat.js","webpack:///./node_modules/rxjs/operator/skipWhile.js","webpack:///./node_modules/rxjs/operators/windowCount.js","webpack:///./node_modules/rxjs/scheduler/animationFrame.js","webpack:///./node_modules/rxjs/add/observable/zip.js","webpack:///./node_modules/rxjs/operators/count.js","webpack:///./node_modules/rxjs/add/operator/take.js","webpack:///./node_modules/rxjs/util/ObjectUnsubscribedError.js","webpack:///./node_modules/core-js/internals/own-keys.js","webpack:///./node_modules/rxjs/operators/takeLast.js","webpack:///./node_modules/core-js/internals/whitespaces.js","webpack:///./node_modules/core-js/internals/string-trim.js","webpack:///./node_modules/rxjs/operator/min.js","webpack:///./node_modules/rxjs/observable/TimerObservable.js","webpack:///./node_modules/core-js/internals/not-a-regexp.js","webpack:///./node_modules/rxjs/add/operator/mapTo.js","webpack:///./node_modules/rxjs/operators/findIndex.js","webpack:///./node_modules/rxjs/operators/share.js","webpack:///./node_modules/rxjs/operators/pluck.js","webpack:///./node_modules/rxjs/util/AnimationFrame.js","webpack:///./node_modules/rxjs/operator/race.js","webpack:///./node_modules/rxjs/operators/race.js","webpack:///./node_modules/rxjs/operator/filter.js","webpack:///./node_modules/rxjs/operator/publishLast.js","webpack:///./node_modules/rxjs/operators/mergeAll.js","webpack:///./node_modules/rxjs/operators/withLatestFrom.js","webpack:///./node_modules/rxjs/add/operator/every.js","webpack:///./node_modules/rxjs/operators/take.js","webpack:///./node_modules/rxjs/operators/sampleTime.js","webpack:///./node_modules/rxjs/operators/reduce.js","webpack:///./node_modules/rxjs/add/operator/exhaust.js","webpack:///./node_modules/rxjs/util/not.js","webpack:///./node_modules/rxjs/add/operator/reduce.js","webpack:///./node_modules/rxjs/operator/distinct.js","webpack:///./node_modules/rxjs/add/observable/empty.js","webpack:///./node_modules/rxjs/scheduler/asap.js","webpack:///./node_modules/rxjs/operators/materialize.js","webpack:///./node_modules/rxjs/operator/takeUntil.js","webpack:///./node_modules/rxjs/operator/bufferCount.js","webpack:///./node_modules/rxjs/operator/findIndex.js","webpack:///./node_modules/rxjs/operators/windowTime.js","webpack:///./node_modules/rxjs/add/operator/min.js","webpack:///./node_modules/rxjs/observable/using.js","webpack:///./node_modules/rxjs/operators/finalize.js","webpack:///./node_modules/rxjs/add/operator/windowCount.js","webpack:///./node_modules/@ionic-native/core/index.js","webpack:///./node_modules/rxjs/add/operator/publishBehavior.js","webpack:///./node_modules/rxjs/operator/windowCount.js","webpack:///./node_modules/rxjs/add/operator/max.js","webpack:///./node_modules/rxjs/operator/repeatWhen.js","webpack:///./node_modules/rxjs/testing/TestScheduler.js","webpack:///./node_modules/rxjs/operator/windowToggle.js","webpack:///./node_modules/rxjs/observable/GenerateObservable.js","webpack:///./node_modules/rxjs/operators/skip.js","webpack:///./node_modules/core-js/internals/inherit-if-required.js","webpack:///./node_modules/rxjs/operators/last.js","webpack:///./node_modules/rxjs/operators/sample.js","webpack:///./node_modules/rxjs/operators/mergeMap.js","webpack:///./node_modules/rxjs/operators/debounceTime.js","webpack:///./node_modules/rxjs/operators/switchMap.js","webpack:///./node_modules/rxjs/add/operator/partition.js","webpack:///./node_modules/core-js/internals/object-get-own-property-symbols.js","webpack:///./node_modules/rxjs/operators/catchError.js","webpack:///./node_modules/rxjs/operators/every.js","webpack:///./node_modules/rxjs/add/operator/multicast.js","webpack:///./node_modules/rxjs/operators/isEmpty.js","webpack:///./node_modules/rxjs/observable/IteratorObservable.js","webpack:///./node_modules/core-js/internals/enum-bug-keys.js","webpack:///./node_modules/rxjs/add/operator/bufferWhen.js","webpack:///./node_modules/rxjs/add/operator/share.js","webpack:///./node_modules/rxjs/operators/throttle.js","webpack:///./node_modules/rxjs/operator/ignoreElements.js","webpack:///./node_modules/rxjs/operator/last.js","webpack:///./node_modules/rxjs/add/operator/dematerialize.js","webpack:///./node_modules/rxjs/util/MapPolyfill.js","webpack:///./node_modules/rxjs/operators/takeUntil.js","webpack:///./node_modules/core-js/internals/object-create.js","webpack:///./node_modules/rxjs/operator/publishReplay.js","webpack:///./node_modules/rxjs/operator/max.js","webpack:///./node_modules/rxjs/add/operator/filter.js","webpack:///./node_modules/rxjs/operator/catch.js","webpack:///./node_modules/rxjs/add/operator/takeWhile.js","webpack:///./node_modules/rxjs/operator/elementAt.js","webpack:///./node_modules/rxjs/operator/timeInterval.js","webpack:///./node_modules/rxjs/operators/bufferToggle.js","webpack:///./node_modules/rxjs/operator/mergeAll.js","webpack:///./node_modules/rxjs/operators/dematerialize.js","webpack:///./node_modules/rxjs/operator/reduce.js","webpack:///./node_modules/rxjs/observable/defer.js","webpack:///./node_modules/rxjs/operator/publish.js","webpack:///./node_modules/rxjs/add/operator/defaultIfEmpty.js","webpack:///./node_modules/rxjs/add/operator/first.js","webpack:///./node_modules/rxjs/operator/pluck.js","webpack:///./node_modules/rxjs/AsyncSubject.js","webpack:///./node_modules/rxjs/add/operator/timeout.js","webpack:///./node_modules/rxjs/add/operator/switchMapTo.js","webpack:///./node_modules/rxjs/operators/combineLatest.js","webpack:///./node_modules/@ionic-native/core/decorators/cordova-function-override.js","webpack:///./node_modules/rxjs/operators/pairwise.js","webpack:///./node_modules/rxjs/operators/switchAll.js","webpack:///./node_modules/rxjs/util/subscribeToResult.js","webpack:///./node_modules/rxjs/operator/bufferWhen.js","webpack:///./node_modules/rxjs/add/operator/concatMap.js","webpack:///./src/views/Tab1.vue?6270","webpack:///./node_modules/rxjs/operator/observeOn.js","webpack:///./node_modules/rxjs/add/operator/concat.js","webpack:///./node_modules/rxjs/observable/ArrayLikeObservable.js","webpack:///./node_modules/rxjs/operators/skipLast.js","webpack:///./node_modules/rxjs/Notification.js","webpack:///./node_modules/rxjs/observable/if.js","webpack:///./node_modules/rxjs/operator/startWith.js","webpack:///./node_modules/rxjs/add/observable/defer.js","webpack:///./node_modules/rxjs/operators/distinct.js","webpack:///./node_modules/rxjs/add/operator/observeOn.js","webpack:///./node_modules/rxjs/operator/mergeScan.js","webpack:///./node_modules/rxjs/util/assign.js","webpack:///./node_modules/rxjs/operators/find.js","webpack:///./node_modules/rxjs/add/operator/merge.js","webpack:///./node_modules/rxjs/add/operator/expand.js","webpack:///./node_modules/rxjs/operator/let.js","webpack:///./node_modules/rxjs/operator/first.js","webpack:///./node_modules/rxjs/add/operator/buffer.js","webpack:///./node_modules/core-js/internals/is-forced.js","webpack:///./node_modules/rxjs/add/operator/toArray.js","webpack:///./node_modules/rxjs/add/operator/repeat.js","webpack:///./node_modules/rxjs/util/isArray.js","webpack:///./node_modules/rxjs/operators/subscribeOn.js","webpack:///./node_modules/rxjs/operator/switchMap.js","webpack:///./node_modules/rxjs/operators/buffer.js","webpack:///./node_modules/rxjs/operator/finally.js","webpack:///./node_modules/rxjs/operators/switchMapTo.js","webpack:///./node_modules/rxjs/add/operator/publishReplay.js","webpack:///./node_modules/rxjs/operator/subscribeOn.js","webpack:///./node_modules/rxjs/testing/HotObservable.js","webpack:///./node_modules/rxjs/operator/multicast.js","webpack:///./node_modules/rxjs/operator/concatMapTo.js","webpack:///./node_modules/rxjs/operator/materialize.js","webpack:///./node_modules/rxjs/add/operator/isEmpty.js","webpack:///./node_modules/rxjs/operator/dematerialize.js","webpack:///./node_modules/rxjs/Scheduler.js","webpack:///./node_modules/rxjs/observable/dom/AjaxObservable.js","webpack:///./node_modules/rxjs/add/operator/combineLatest.js","webpack:///./node_modules/rxjs/util/toSubscriber.js","webpack:///./node_modules/rxjs/BehaviorSubject.js","webpack:///./node_modules/rxjs/InnerSubscriber.js","webpack:///./node_modules/rxjs/operator/distinctUntilChanged.js","webpack:///./node_modules/rxjs/add/observable/of.js","webpack:///./node_modules/rxjs/operator/auditTime.js","webpack:///./node_modules/rxjs/operator/bufferToggle.js","webpack:///./node_modules/rxjs/add/operator/zip.js","webpack:///./node_modules/rxjs/observable/BoundCallbackObservable.js","webpack:///./node_modules/rxjs/observable/NeverObservable.js","webpack:///./node_modules/rxjs/observable/combineLatest.js","webpack:///./node_modules/rxjs/operator/take.js","webpack:///./node_modules/rxjs/operator/retryWhen.js","webpack:///./node_modules/rxjs/operators/toArray.js","webpack:///./node_modules/rxjs/observable/FromObservable.js","webpack:///./node_modules/rxjs/operators/window.js","webpack:///./node_modules/rxjs/operator/toArray.js","webpack:///./node_modules/rxjs/operator/sample.js","webpack:///./node_modules/rxjs/operator/timestamp.js","webpack:///./node_modules/rxjs/observable/generate.js","webpack:///./node_modules/core-js/internals/to-integer.js","webpack:///./node_modules/rxjs/operator/publishBehavior.js","webpack:///./node_modules/rxjs/add/operator/skipLast.js","webpack:///./node_modules/@ionic-native/core/decorators/cordova-property.js","webpack:///./node_modules/rxjs/symbol/iterator.js","webpack:///./node_modules/rxjs/operator/distinctUntilKeyChanged.js","webpack:///./node_modules/rxjs/symbol/rxSubscriber.js","webpack:///./node_modules/core-js/modules/es.number.constructor.js","webpack:///./node_modules/core-js/internals/correct-is-regexp-logic.js","webpack:///./node_modules/rxjs/operators/max.js","webpack:///./node_modules/rxjs/add/operator/sequenceEqual.js","webpack:///./node_modules/rxjs/observable/ArrayObservable.js","webpack:///./node_modules/rxjs/operator/throttle.js","webpack:///./node_modules/rxjs/Subscriber.js","webpack:///./node_modules/core-js/internals/array-method-uses-to-length.js","webpack:///./node_modules/rxjs/util/isObject.js","webpack:///./node_modules/rxjs/add/operator/count.js","webpack:///./node_modules/rxjs/operator/share.js","webpack:///./node_modules/rxjs/observable/DeferObservable.js","webpack:///./node_modules/rxjs/observable/dom/ajax.js","webpack:///./node_modules/rxjs/operator/windowTime.js","webpack:///./node_modules/rxjs/operators/distinctUntilChanged.js","webpack:///./node_modules/rxjs/observable/FromEventPatternObservable.js","webpack:///./node_modules/rxjs/add/observable/fromEvent.js","webpack:///./node_modules/rxjs/util/errorObject.js","webpack:///./node_modules/rxjs/observable/dom/webSocket.js","webpack:///./node_modules/rxjs/operators/groupBy.js","webpack:///./node_modules/rxjs/util/root.js","webpack:///./node_modules/rxjs/operator/skipUntil.js","webpack:///./node_modules/rxjs/add/operator/window.js","webpack:///./node_modules/rxjs/add/observable/if.js","webpack:///./node_modules/rxjs/util/EmptyError.js","webpack:///./node_modules/rxjs/operator/windowWhen.js","webpack:///./node_modules/rxjs/observable/race.js","webpack:///./node_modules/rxjs/operator/window.js","webpack:///./node_modules/rxjs/add/observable/onErrorResumeNext.js","webpack:///./node_modules/rxjs/observable/throw.js","webpack:///./node_modules/rxjs/add/observable/timer.js","webpack:///./node_modules/rxjs/add/operator/windowTime.js","webpack:///./node_modules/rxjs/observable/fromEventPattern.js","webpack:///./node_modules/rxjs/add/observable/bindNodeCallback.js","webpack:///./node_modules/rxjs/add/operator/materialize.js","webpack:///./node_modules/rxjs/util/isArrayLike.js","webpack:///./node_modules/rxjs/add/operator/windowToggle.js","webpack:///./node_modules/rxjs/operator/debounce.js","webpack:///./node_modules/rxjs/operators/refCount.js","webpack:///./node_modules/rxjs/operator/mapTo.js","webpack:///./node_modules/rxjs/operator/delay.js","webpack:///./node_modules/rxjs/observable/UsingObservable.js","webpack:///./node_modules/rxjs/add/operator/skip.js","webpack:///./node_modules/rxjs/add/operator/concatAll.js","webpack:///./node_modules/rxjs/observable/IntervalObservable.js","webpack:///./node_modules/rxjs/add/observable/pairs.js","webpack:///./node_modules/rxjs/add/operator/bufferCount.js","webpack:///./node_modules/rxjs/scheduler/AsyncScheduler.js","webpack:///./node_modules/rxjs/add/observable/fromEventPattern.js","webpack:///./node_modules/rxjs/operators/multicast.js","webpack:///./node_modules/rxjs/add/operator/distinctUntilKeyChanged.js","webpack:///./node_modules/rxjs/operator/zipAll.js","webpack:///./node_modules/@ionic-native/core/decorators/cordova.js","webpack:///./node_modules/rxjs/util/isFunction.js","webpack:///./node_modules/rxjs/add/operator/timeoutWith.js","webpack:///./node_modules/rxjs/scheduler/VirtualTimeScheduler.js","webpack:///./node_modules/rxjs/operators/retryWhen.js","webpack:///./node_modules/rxjs/operators/bufferTime.js","webpack:///./node_modules/rxjs/add/operator/combineAll.js","webpack:///./node_modules/rxjs/observable/RangeObservable.js","webpack:///./node_modules/rxjs/add/operator/delay.js","webpack:///./node_modules/rxjs/observable/FromEventObservable.js","webpack:///./node_modules/rxjs/add/operator/shareReplay.js","webpack:///./node_modules/core-js/internals/object-keys-internal.js","webpack:///./node_modules/rxjs/observable/dom/WebSocketSubject.js","webpack:///./node_modules/core-js/modules/es.array.includes.js","webpack:///./node_modules/rxjs/operators/publishBehavior.js","webpack:///./node_modules/rxjs/operators/min.js","webpack:///./node_modules/rxjs/operator/mergeMapTo.js","webpack:///./node_modules/rxjs/operators/auditTime.js","webpack:///./node_modules/rxjs/observable/onErrorResumeNext.js","webpack:///./node_modules/rxjs/util/isScheduler.js","webpack:///./node_modules/core-js/internals/get-built-in.js","webpack:///./node_modules/rxjs/observable/interval.js","webpack:///./node_modules/rxjs/operators/filter.js","webpack:///./node_modules/core-js/internals/object-property-is-enumerable.js","webpack:///./node_modules/core-js/internals/object-set-prototype-of.js","webpack:///./node_modules/rxjs/observable/BoundNodeCallbackObservable.js","webpack:///./node_modules/rxjs/add/operator/onErrorResumeNext.js","webpack:///./node_modules/rxjs/operator/throttleTime.js","webpack:///./node_modules/rxjs/operator/pairwise.js","webpack:///./node_modules/rxjs/operator/partition.js","webpack:///./node_modules/rxjs/scheduler/AsyncAction.js","webpack:///./node_modules/rxjs/util/UnsubscriptionError.js","webpack:///./node_modules/rxjs/operator/merge.js","webpack:///./node_modules/rxjs/scheduler/queue.js","webpack:///./node_modules/rxjs/scheduler/QueueAction.js","webpack:///./node_modules/rxjs/operators/timestamp.js","webpack:///./node_modules/rxjs/observable/bindNodeCallback.js","webpack:///./node_modules/rxjs/util/identity.js","webpack:///./node_modules/rxjs/add/operator/subscribeOn.js","webpack:///./node_modules/rxjs/observable/fromPromise.js","webpack:///./node_modules/rxjs/observable/ConnectableObservable.js","webpack:///./node_modules/rxjs/operators/timeout.js","webpack:///./node_modules/rxjs/operators/delayWhen.js","webpack:///./node_modules/core-js/internals/object-keys.js","webpack:///./node_modules/rxjs/OuterSubscriber.js","webpack:///./node_modules/rxjs/util/isDate.js","webpack:///./node_modules/rxjs/operators/mapTo.js","webpack:///./node_modules/rxjs/util/pipe.js","webpack:///./node_modules/rxjs/operators/onErrorResumeNext.js","webpack:///./node_modules/rxjs/observable/range.js","webpack:///./node_modules/rxjs/add/operator/throttleTime.js","webpack:///./node_modules/rxjs/add/operator/map.js","webpack:///./node_modules/rxjs/add/observable/dom/ajax.js","webpack:///./node_modules/rxjs/Observable.js","webpack:///./node_modules/rxjs/add/operator/delayWhen.js","webpack:///./node_modules/rxjs/operators/zip.js","webpack:///./node_modules/rxjs/add/operator/exhaustMap.js","webpack:///./node_modules/rxjs/operators/publish.js","webpack:///./node_modules/rxjs/util/ArgumentOutOfRangeError.js","webpack:///./node_modules/rxjs/observable/IfObservable.js","webpack:///./node_modules/rxjs/add/observable/forkJoin.js","webpack:///./node_modules/rxjs/operators/mergeScan.js","webpack:///./node_modules/rxjs/operators/sequenceEqual.js","webpack:///./node_modules/rxjs/add/operator/distinct.js","webpack:///./node_modules/core-js/internals/copy-constructor-properties.js","webpack:///./node_modules/rxjs/add/operator/takeUntil.js","webpack:///./node_modules/rxjs/operator/zip.js","webpack:///./node_modules/rxjs/add/operator/retry.js","webpack:///./node_modules/rxjs/testing/SubscriptionLoggable.js","webpack:///./node_modules/rxjs/operators/publishLast.js","webpack:///./node_modules/rxjs/operator/buffer.js","webpack:///./node_modules/rxjs/observable/timer.js","webpack:///./node_modules/rxjs/add/observable/from.js","webpack:///./node_modules/rxjs/symbol/observable.js","webpack:///./node_modules/rxjs/operator/switchMapTo.js","webpack:///./node_modules/rxjs/add/operator/windowWhen.js","webpack:///./node_modules/rxjs/SubjectSubscription.js","webpack:///./node_modules/rxjs/Subject.js","webpack:///./node_modules/rxjs/operators/debounce.js","webpack:///./node_modules/rxjs/operators/first.js","webpack:///./node_modules/rxjs/scheduler/async.js","webpack:///./node_modules/rxjs/operator/skip.js","webpack:///./node_modules/rxjs/add/operator/groupBy.js","webpack:///./node_modules/rxjs/scheduler/QueueScheduler.js","webpack:///./node_modules/rxjs/add/operator/do.js","webpack:///./node_modules/rxjs/add/operator/withLatestFrom.js","webpack:///./node_modules/rxjs/observable/SubscribeOnObservable.js","webpack:///./node_modules/rxjs/add/operator/distinctUntilChanged.js","webpack:///./node_modules/rxjs/operator/groupBy.js","webpack:///./node_modules/rxjs/operators/startWith.js","webpack:///./node_modules/rxjs/operator/map.js","webpack:///./node_modules/rxjs/operators/zipAll.js","webpack:///./node_modules/rxjs/operator/do.js","webpack:///./node_modules/rxjs/testing/SubscriptionLog.js","webpack:///./node_modules/rxjs/operators/combineAll.js","webpack:///./node_modules/core-js/internals/to-indexed-object.js","webpack:///./node_modules/rxjs/operators/tap.js","webpack:///./node_modules/rxjs/util/isPromise.js","webpack:///./node_modules/rxjs/operator/count.js","webpack:///./node_modules/rxjs/operators/distinctUntilKeyChanged.js","webpack:///./node_modules/rxjs/operators/timeInterval.js","webpack:///./node_modules/rxjs/operators.js","webpack:///./node_modules/rxjs/add/observable/never.js","webpack:///./node_modules/rxjs/observable/ForkJoinObservable.js"],"names":["__extends","this","d","b","p","hasOwnProperty","__","constructor","prototype","Object","create","AsyncScheduler_1","AsapScheduler","_super","apply","arguments","flush","action","active","scheduled","undefined","error","actions","index","count","length","shift","execute","state","delay","unsubscribe","AsyncScheduler","exports","Observable_1","mergeMapTo_1","Observable","flatMapTo","mergeMapTo","concatAll_1","concatAll","expand_1","expand","project","concurrent","scheduler","Number","POSITIVE_INFINITY","let_1","let","letProto","letBind","race_1","race","concatMap_1","concatMapTo","innerObservable","resultSelector","concatMap","elementAt_1","elementAt","concat_1","concat_2","concat","observables","_i","source","lift","call","concatStatic","skipLast_1","skipLast","Subscriber_1","async_1","throttle_1","throttleTime","duration","config","async","defaultThrottleConfig","ThrottleTimeOperator","leading","trailing","subscriber","subscribe","ThrottleTimeSubscriber","destination","_hasTrailingValue","_trailingValue","_next","value","throttled","add","schedule","dispatchNext","next","clearThrottle","remove","Subscriber","arg","DESCRIPTORS","propertyIsEnumerableModule","createPropertyDescriptor","toIndexedObject","toPrimitive","has","IE8_DOM_DEFINE","nativeGetOwnPropertyDescriptor","getOwnPropertyDescriptor","f","O","P","isArray_1","isNumeric","val","isArray","parseFloat","scan","accumulator","seed","hasSeed","ScanOperator","ScanSubscriber","_seed","defineProperty","get","set","enumerable","configurable","_tryNext","result","err","OuterSubscriber_1","subscribeToResult_1","exhaust","SwitchFirstOperator","SwitchFirstSubscriber","hasCompleted","hasSubscription","subscribeToResult","_complete","complete","notifyComplete","innerSub","OuterSubscriber","ReplaySubject_1","shareReplay","bufferSize","windowTime","shareReplayOperator","subject","subscription","refCount","hasError","isComplete","ReplaySubject","timeoutWith_1","timeoutWith","due","withObservable","not_1","filter_1","partition","predicate","thisArg","filter","not","Subscription_1","Action","work","Subscription","find_1","find","auditTime_1","auditTime","PairsObservable_1","pairs","PairsObservable","concatMapTo_1","shareReplay_1","multicast_1","publishReplay","selectorOrScheduler","selector","multicast","mergeMap_1","mergeMap","debounceTime_1","debounceTime","combineLatest_1","combineLatest","throw_1","throw","_throw","exhaustMap","SwitchFirstMapOperator","SwitchFirstMapSubscriber","tryNext","notifyNext","outerValue","innerValue","outerIndex","innerIndex","_a","trySelectResult","notifyError","zipAll_1","zipAll","noop","takeWhile","TakeWhileOperator","TakeWhileSubscriber","nextOrComplete","predicateResult","Boolean","FromEventObservable_1","fromEvent","FromEventObservable","isDate_1","absoluteTimeout","isDate","waitFor","now","Math","abs","TimeoutWithOperator","TimeoutWithSubscriber","scheduleTimeout","dispatchTimeout","_unsubscribeAndRecycle","_unsubscribe","BoundCallbackObservable_1","bindCallback","BoundCallbackObservable","timestamp_1","timestamp","bindCallback_1","Immediate_1","AsyncAction_1","AsapAction","requestAsyncId","id","push","Immediate","setImmediate","bind","recycleAsyncId","clearImmediate","AsyncAction","takeLast_1","takeLast","repeatWhen_1","repeatWhen","AnimationFrame_1","AnimationFrameAction","AnimationFrame","requestAnimationFrame","cancelAnimationFrame","skipWhile","SkipWhileOperator","SkipWhileSubscriber","skipping","tryCallPredicate","generate_1","generate","single_1","single","publishLast_1","publishLast","audit_1","audit","durationSelector","ArgumentOutOfRangeError_1","defaultValue","ElementAtOperator","ArgumentOutOfRangeError","ElementAtSubscriber","x","switchAll_1","_switch","switchAll","isScheduler_1","bufferTime_1","bufferTime","bufferTimeSpan","isScheduler","bufferCreationInterval","maxBufferSize","exhaustMap_1","pairwise_1","pairwise","sampleTime_1","sampleTime","period","ArrayObservable_1","of","ArrayObservable","publish_1","publish","getBuiltIn","module","Subject_1","queue_1","observeOn_1","ObjectUnsubscribedError_1","SubjectSubscription_1","_events","_bufferSize","_windowTime","_getNow","ReplayEvent","_trimBufferThenGetEvents","_subscribe","closed","ObjectUnsubscribedError","isStopped","EMPTY","observers","SubjectSubscription","ObserveOnSubscriber","len","i","thrownError","queue","eventsCount","spliceCount","time","max","splice","Subject","checkReady","process","win_1","window","DEVICE_READY_TIMEOUT_1","before_1","Date","didFireReady_1","document","addEventListener","console","log","setTimeout","cordova","warn","MergeMapToOperator","ish","observer","MergeMapToSubscriber","buffer","_innerSub","it","TypeError","tryCatch_1","errorObject_1","notifier","RepeatWhenOperator","RepeatWhenSubscriber","sourceIsBeingSubscribedTo","retries","subscribeToRetries","retriesSubscription","notifications","tryCatch","errorObject","switch_1","switch","of_1","from_1","from","defaultIfEmpty","DefaultIfEmptyOperator","DefaultIfEmptySubscriber","isEmpty","onErrorResumeNext_1","onErrorResumeNext","nextSources","FromObservable_1","FromObservable","timeInterval_1","timeInterval","toInteger","min","integer","global","createNonEnumerableProperty","redefine","setGlobal","copyConstructorProperties","isForced","options","FORCED","target","key","targetProperty","sourceProperty","descriptor","TARGET","GLOBAL","STATIC","stat","noTargetGet","forced","sham","internalObjectKeys","enumBugKeys","hiddenKeys","getOwnPropertyNames","$","notARegExp","requireObjectCoercible","correctIsRegExpLogic","proto","includes","searchString","String","indexOf","every_1","every","EmptyObservable_1","repeat","EmptyObservable","RepeatOperator","RepeatSubscriber","mergeAll_1","mergeAll","ExpandOperator","ExpandSubscriber","dispatch","subscribeToProjection","e","retry","RetryOperator","RetrySubscriber","ERR_CORDOVA_NOT_AVAILABLE","ERR_PLUGIN_NOT_INSTALLED","getPromise","callback","tryNativePromise","Promise","resolve","reject","angular","doc","injector","element","querySelector","body","$q","wrapPromise","pluginObj","methodName","args","opts","pluginResult","rej","destruct","callCordovaPlugin","catch","wrapOtherPromise","then","wrapObservable","clearFunction","clearWithArgs","getPluginName","wrapEventObservable","event","checkAvailability","plugin","pluginName","pluginRef","pluginInstance","pluginPackage","getPluginRef","getPluginInstallName","getPlugin","pluginWarn","cordovaWarn","instanceAvailability","_objectInstance","setIndex","sync","callbackOrder","unshift","callbackStyle","successName","errorName","obj","successIndex","errorIndex","setSuccessIndex","setErrorIndex","availabilityCheck","callInstance","path","paths","split","method","wrap","observable","eventObservable","otherPromise","wrapInstance","pluginResult_1","rej_1","bufferToggle_1","bufferToggle","retry_1","sequenceEqual_1","sequenceEqual","compareTo","comparor","fromPromise_1","fromPromise","findIndex_1","findIndex","pluck_1","pluck","timeout_1","timeout","empty","combineAll_1","combineAll","finally_1","finally","_finally","ForkJoinObservable_1","forkJoin","ForkJoinObservable","merge_1","merge_2","merge","mergeStatic","IonicNativePlugin","installed","isAvailable","getSupportedPlatforms","platform","platforms","repo","install","debounce_1","debounce","EmptyError_1","SingleOperator","SingleSubscriber","seenValue","applySingleValue","singleValue","EmptyError","switchMap_1","switchMap","startWith_1","startWith","noop_1","ignoreElements","IgnoreElementsOperator","IgnoreElementsSubscriber","unused","skipWhile_1","windowToggle","openings","closingSelector","WindowToggleOperator","WindowToggleSubscriber","contexts","openSubscription","_error","context","closingNotifier","window_1","innerSubscription","closeWindow","inner","isEmpty_1","AnonymousSubject","AsyncSubject_1","AsyncSubject","BehaviorSubject_1","BehaviorSubject","ConnectableObservable_1","ConnectableObservable","Notification_1","Notification","TimeoutError_1","TimeoutError","UnsubscriptionError_1","UnsubscriptionError","TimeInterval","Timestamp","TestScheduler_1","TestScheduler","VirtualTimeScheduler_1","VirtualTimeScheduler","AjaxObservable_1","AjaxResponse","AjaxError","AjaxTimeoutError","pipe_1","pipe","asap_1","animationFrame_1","rxSubscriber_1","iterator_1","observable_1","_operators","operators","Scheduler","asap","animationFrame","Symbol","rxSubscriber","iterator","scan_1","isObject_1","isFunction_1","_parent","_parents","_subscriptions","errors","hasErrors","isFunction","trial","flattenUnsubscriptionErrors","sub","isObject","teardown","_addParent","tmp","Error","subscriptions","subscriptionIndex","parent","reduce","errs","map","MapOperator","MapSubscriber","AnimationFrameScheduler","observeOn","ObserveOnOperator","notification","observe","scheduleMessage","ObserveOnMessage","createNext","createError","createComplete","withLatestFrom_1","withLatestFrom","range_1","range","keys","idx","definePropertyModule","anObject","objectKeys","defineProperties","Properties","last","pop","flatMap","name","stack","message","tryCatchTarget","tryCatcher","fn","ScalarObservable","_isScalar","done","bufferWhen","BufferWhenOperator","BufferWhenSubscriber","subscribing","openBuffer","closingSubscription","windowWhen","WindowOperator","WindowSubscriber","openWindow","unsubscribeClosingNotification","closingNotification","prevWindow","mergeScan_1","mergeScan","using_1","using","throttle","zip_1","zip","zipStatic","applyMixins","derivedCtor","baseCtors","baseCtor","propertyKeys","j","len2","name_1","ErrorObservable","syncErrorThrowable","fails","classof","propertyIsEnumerable","wellKnownSymbol","UNSCOPABLES","ArrayPrototype","Array","sample_1","sample","MATCH","isRegExp","NeverObservable_1","never","NeverObservable","root_1","minimalSetImpl","MinimalSet","_values","clear","Set","root","PromiseObservable","promise","_this","dispatchError","exhaust_1","dueTime","absoluteDelay","delayFor","DelayOperator","DelaySubscriber","errored","delay_1","_schedule","scheduleNotification","DelayMessage","webSocket_1","webSocket","delayWhen_1","delayWhen","delayDurationSelector","subscriptionDelay","AuditOperator","AuditSubscriber","hasValue","skipUntil_1","skipUntil","FastMap","values","delete","forEach","cb","defaultIfEmpty_1","catch_1","_catch","interval_1","interval","toLength","toAbsoluteIndex","createMethod","IS_INCLUDES","$this","el","fromIndex","last_1","SkipUntilOperator","SkipUntilSubscriber","isInnerStopped","fullscreen","collapse","size","class","style","sizePx","extendStatics","setPrototypeOf","__proto__","ScreenOrientationOriginal","ORIENTATIONS","PORTRAIT_PRIMARY","PORTRAIT_SECONDARY","LANDSCAPE_PRIMARY","LANDSCAPE_SECONDARY","PORTRAIT","LANDSCAPE","ANY","onChange","lock","orientation","unlock","ScreenOrientation","sizePixels","props","type","default","setup","render","__scopeId","components","ChessBoard","IonHeader","IonToolbar","IonTitle","IonContent","IonPage","orientationType","isPortrait","minSize","innerWidth","innerHeight","sizeRatio","floor","MapPolyfill_1","Map","MapPolyfill","ignoreElements_1","takeWhile_1","SubscriptionLoggable_1","applyMixins_1","ColdObservable","messages","logSubscribedFrame","logUnsubscribedFrame","scheduleMessages","messagesLength","frame","SubscriptionLoggable","bufferCount","startBufferEvery","BufferCountOperator","subscriberClass","BufferSkipCountSubscriber","BufferCountSubscriber","buffers","retryWhen_1","retryWhen","argument","ImmediateDefinition","nextHandle","tasksByHandle","currentlyRunningATask","canUseProcessNextTick","createProcessNextTickSetImmediate","canUsePostMessage","createPostMessageSetImmediate","canUseMessageChannel","createMessageChannelSetImmediate","canUseReadyStateChange","createReadyStateChangeSetImmediate","createSetTimeoutSetImmediate","ci","handle","instance","identify","o","toString","MessageChannel","createElement","postMessage","importScripts","postMessageIsAsynchronous_1","oldOnMessage","onmessage","partiallyApplied","handler","Function","addFromSetImmediateArguments","nextTick","runIfPresent","messagePrefix","random","onGlobalMessage","globalMessageHandler","data","slice","task","channel","port1","port2","html","documentElement","script","onreadystatechange","removeChild","appendChild","repeat_1","windowCount","windowSize","startWindowEvery","WindowCountOperator","WindowCountSubscriber","windows","c","AnimationFrameAction_1","AnimationFrameScheduler_1","CountOperator","CountSubscriber","_tryPredicate","take_1","take","getOwnPropertyNamesModule","getOwnPropertySymbolsModule","getOwnPropertySymbols","TakeLastOperator","total","TakeLastSubscriber","ring","whitespaces","whitespace","ltrim","RegExp","rtrim","TYPE","string","replace","start","end","trim","min_1","comparer","isNumeric_1","TimerObservable","initialDelay","mapTo_1","mapTo","FindValueOperator","refCount_1","shareSubjectFactory","share","map_1","properties","plucker","mapper","currentProp","RequestAnimationFrameDefinition","mozRequestAnimationFrame","mozCancelAnimationFrame","webkitRequestAnimationFrame","webkitCancelAnimationFrame","msRequestAnimationFrame","msCancelAnimationFrame","oRequestAnimationFrame","oCancelAnimationFrame","clearTimeout","race_2","raceStatic","identity_1","identity","WithLatestFromOperator","WithLatestFromSubscriber","toRespond","found","_tryProject","TakeOperator","TakeSubscriber","SampleTimeOperator","SampleTimeSubscriber","dispatchNotification","lastValue","acc","pred","notPred","reduce_1","distinct_1","distinct","keySelector","flushes","empty_1","AsapAction_1","AsapScheduler_1","materialize","MaterializeOperator","MaterializeSubscriber","takeUntil_1","takeUntil","bufferCount_1","windowTimeSpan","windowCreationInterval","maxWindowSize","WindowTimeOperator","WindowTimeSubscriber","CountedSubject","_numberOfNextedValues","closeState","creationState","dispatchWindowClose","dispatchWindowCreation","timeSpanOnlyState","dispatchWindowTimeSpanOnly","numberOfNextedValues","window_2","timeSpanState","UsingObservable_1","UsingObservable","finalize","FinallyOperator","FinallySubscriber","windowCount_1","publishBehavior_1","publishBehavior","max_1","ColdObservable_1","HotObservable_1","SubscriptionLog_1","defaultMaxFrame","assertDeepEqual","VirtualAction","hotObservables","coldObservables","flushTests","createTime","marbles","frameTimeFactor","createColdObservable","parseMarbles","cold","createHotObservable","HotObservable","materializeInnerObservable","outerFrame","expectObservable","unsubscriptionMarbles","actual","flushTest","ready","unsubscriptionFrame","parseMarblesAsSubscriptions","unsubscribedFrame","toBe","errorValue","expected","expectSubscriptions","actualSubscriptionLogs","marblesArray","readyFlushTests","test","SubscriptionLog","groupStart","subscriptionFrame","materializeInnerObservables","testMessages","subIndex","frameOffset","getValue","windowToggle_1","selfSelector","GenerateObservable","initialState","condition","iterate","initialStateOrOptions","resultSelectorOrObservable","conditionResult","needIterate","skip","SkipOperator","SkipSubscriber","dummy","Wrapper","NewTarget","NewTargetPrototype","LastOperator","LastSubscriber","_tryResultSelector","SampleOperator","sampleSubscriber","SampleSubscriber","emitValue","MergeMapOperator","MergeMapSubscriber","_notifyResultSelector","DebounceTimeOperator","DebounceTimeSubscriber","debouncedSubscription","clearDebounce","debouncedNext","SwitchMapOperator","SwitchMapSubscriber","_tryNotifyNext","partition_1","catchError","operator","CatchOperator","caught","CatchSubscriber","err2","EveryOperator","EverySubscriber","everyValueMatch","IsEmptyOperator","IsEmptySubscriber","IteratorObservable","getIterator","return","StringIterator","str","charAt","ArrayIterator","arr","maxSafeInteger","pow","isNaN","numberIsFinite","sign","isFinite","valueAsNumber","bufferWhen_1","share_1","ThrottleOperator","ThrottleSubscriber","_leading","_trailing","tryDurationSelector","_sendTrailing","dematerialize_1","dematerialize","_keys","TakeUntilOperator","TakeUntilSubscriber","activeXDocument","documentCreateElement","sharedKey","GT","LT","PROTOTYPE","SCRIPT","IE_PROTO","EmptyConstructor","scriptTag","content","NullProtoObjectViaActiveX","write","close","temp","parentWindow","NullProtoObjectViaIFrame","iframeDocument","iframe","JS","display","src","contentWindow","open","F","NullProtoObject","domain","ActiveXObject","publishReplay_1","catchError_1","BufferToggleOperator","BufferToggleSubscriber","closeBuffer","trySubscribe","DeMaterializeOperator","DeMaterializeSubscriber","DeferObservable_1","defer","DeferObservable","first_1","first","hasNext","switchMapTo_1","switchMapTo","none","CombineLatestOperator","CombineLatestSubscriber","oldVal","PairwiseOperator","PairwiseSubscriber","hasPrev","prev","isArrayLike_1","isPromise_1","InnerSubscriber_1","outerSubscriber","InnerSubscriber","isArrayLike","isPromise","item","obs","msg","ScalarObservable_1","ArrayLikeObservable","arrayLike","SkipLastOperator","_skipCount","SkipLastSubscriber","_count","_ring","skipCount","currentIndex","oldValue","kind","do","accept","nextOrObserver","toObservable","undefinedValueNotification","completeNotification","IfObservable_1","_if","IfObservable","array","defer_1","Set_1","DistinctOperator","DistinctSubscriber","_useKeySelector","_finalizeNext","assignImpl","sources","k","getAssign","assign","yieldIndex","FindValueSubscriber","func","buffer_1","replacement","feature","detection","normalize","POLYFILL","NATIVE","toLowerCase","toArray_1","toArray","SubscribeOnObservable_1","subscribeOn","SubscribeOnOperator","SubscribeOnObservable","BufferOperator","BufferSubscriber","finalize_1","SwitchMapToOperator","SwitchMapToSubscriber","tryResultSelector","subscribeOn_1","subjectOrSubjectFactory","materialize_1","SchedulerAction","getCORSRequest","XMLHttpRequest","XDomainRequest","getXMLHttpRequest","progId","progIds","ajaxGet","url","headers","AjaxObservable","ajaxPost","ajaxDelete","ajaxPut","ajaxPatch","mapResponse","response","ajaxGetJSON","responseType","urlOrRequest","request","createXHR","crossDomain","withCredentials","prop","AjaxSubscriber","post","put","patch","getJSON","FormData","serializeBody","send","xhr","_b","user","password","setupEvents","setHeaders","contentType","splitIndex","substring","encodeURIComponent","join","JSON","stringify","setRequestHeader","progressSubscriber","xhrTimeout","ontimeout","upload","xhrProgress_1","xhrError_1","onprogress","onerror","xhrReadyStateChange","readyState","status_1","status","responseText","abort","originalEvent","parseXhrResponse","parse","responseXML","Observer_1","toSubscriber","_value","distinctUntilChanged_1","distinctUntilChanged","compare","zipProto","callbackFunc","handlerFn","innerArgs","result_1","self","result_2","toArrayReducer","PromiseObservable_1","IteratorObservable_1","ArrayLikeObservable_1","windowBoundaries","windowSubscriber","sourceSubscription","newWindow","GenerateObservable_1","ceil","cordovaPropertyGet","cordovaPropertySet","symbolIteratorPonyfill","Map_1","$$iterator","distinctUntilKeyChanged_1","distinctUntilKeyChanged","for","$$rxSubscriber","inheritIfRequired","NUMBER","NativeNumber","NumberPrototype","BROKEN_CLASSOF","toNumber","third","radix","maxCode","digits","code","charCodeAt","NaN","parseInt","NumberWrapper","valueOf","METHOD_NAME","regexp","y","destinationOrNext","syncErrorValue","syncErrorThrown","isTrustedSubscriber","trustedSubscriber","SafeSubscriber","_parentSubscriber","observerOrNext","_context","__tryOrSetError","__tryOrUnsub","wrappedComplete","cache","thrower","ACCESSORS","argument0","argument1","count_1","observableFactory","DeferSubscriber","factory","tryDefer","_callFactory","ajax","windowTime_1","DistinctUntilChangedOperator","DistinctUntilChangedSubscriber","hasKey","FromEventPatternObservable","addHandler","removeHandler","_callSelector","retValue","_callAddHandler","errorSubscriber","fromEvent_1","WebSocketSubject_1","WebSocketSubject","FastMap_1","groupBy","elementSelector","subjectSelector","GroupByOperator","GroupBySubscriber","groups","attemptedToUnsubscribe","_group","group","groupedObservable","GroupedObservable","GroupDurationSubscriber","removeGroup","groupSubject","refCountSubscription","InnerRefCountSubscription","__window","__self","WorkerGlobalScope","__global","_root","if_1","if","windowWhen_1","RaceOperator","RaceSubscriber","hasFirst","ErrorObservable_1","timer_1","timer","FromEventPatternObservable_1","fromEventPattern","bindNodeCallback_1","bindNodeCallback","RefCountOperator","connectable","_refCount","refCounter","RefCountSubscriber","connection","connect","sharedConnection","_connection","resourceFactory","resource","UsingSubscriber","tryUse","skip_1","IntervalObservable","pairs_1","Scheduler_1","fromEventPattern_1","subjectFactory","MulticastOperator","connectableObservableDescriptor","maxFrames","sort","sortActions","_execute","a","RetryWhenOperator","RetryWhenSubscriber","BufferTimeOperator","BufferTimeSubscriber","Context","openContext","timespanOnly","closeAction","dispatchBufferTimeSpanOnly","dispatchBufferClose","dispatchBufferCreation","filledBufferContext","onBufferFull","closeContext","spliceIndex","prevContext","RangeObservable","isNodeStyleEventEmitter","sourceObj","addListener","removeListener","isJQueryStyleEventEmitter","on","off","isNodeList","isHTMLCollection","isEventTarget","removeEventListener","eventName","setupSubscription","source_1","source_2","source_3","object","names","assign_1","urlConfigOrSource","WebSocketCtor","WebSocket","_output","sock","_resetState","socket","multiplex","subMsg","unsubMsg","messageFilter","_connectSocket","protocol","binaryType","onopen","openObserver","closingObserver","reason","onclose","closeObserver","wasClean","$includes","addToUnscopables","arrayMethodUsesToLength","USES_TO_LENGTH","1","onErrorResumeNextStatic","aFunction","variable","namespace","IntervalObservable_1","FilterOperator","FilterSubscriber","nativePropertyIsEnumerable","NASHORN_BUG","V","aPossiblePrototype","setter","CORRECT_SETTER","BoundNodeCallbackObservable","throttleTime_1","Action_1","pending","setInterval","clearInterval","QueueAction_1","QueueScheduler_1","QueueScheduler","QueueAction","BoundNodeCallbackObservable_1","_isComplete","getSubject","_subject","ConnectableSubscriber","connectableProto","writable","SubjectSubscriber","TimeoutOperator","errorInstance","TimeoutSubscriber","SubscriptionDelayObservable","DelayWhenOperator","DelayWhenSubscriber","completed","delayNotifierSubscriptions","removeSubscription","tryComplete","delayNotifier","tryDelay","subscriptionIdx","notifierSubscription","SubscriptionDelaySubscriber","sourceSubscribed","subscribeToSource","MapToOperator","MapToSubscriber","fns","pipeFromArray","input","OnErrorResumeNextOperator","OnErrorResumeNextSubscriber","subscribeToNextSource","RangeObservable_1","ajax_1","toSubscriber_1","sink","_trySubscribe","PromiseCtor","Rx","operations","toPromise","ZipOperator","ZipSubscriber","iterators","StaticArrayIterator","StaticIterator","ZipBufferIterator","stillUnsubscribed","notifyInactive","checkIterators","shouldComplete","nextResult","thenSource","elseSource","IfSubscriber","tryIf","forkJoin_1","MergeScanOperator","MergeScanSubscriber","SequenceEqualOperator","SequenceEqualSubscriber","_oneComplete","SequenceEqualCompareToSubscriber","emit","checkValues","_c","areEqual","nextB","ownKeys","getOwnPropertyDescriptorModule","subscriptionLogs","oldSubscriptionLog","subscribedFrame","TimerObservable_1","getSymbolObservable","$$observable","subscriberIndex","copy","asObservable","DebounceOperator","DebounceSubscriber","durationSubscription","FirstOperator","FirstSubscriber","_emitted","_emit","_emitFinal","groupBy_1","do_1","_do","delayTime","tap_1","tap","IndexedObject","DoOperator","DoSubscriber","safeSubscriber","TimeIntervalOperator","TimeIntervalSubscriber","lastTime","span","mergeMap_2","never_1","ForkJoinSubscriber","haveValues","_hasValue"],"mappings":"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","file":"js/chunk-869f410c.0dc2b015.js","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AsyncScheduler_1 = require('./AsyncScheduler');\nvar AsapScheduler = (function (_super) {\n    __extends(AsapScheduler, _super);\n    function AsapScheduler() {\n        _super.apply(this, arguments);\n    }\n    AsapScheduler.prototype.flush = function (action) {\n        this.active = true;\n        this.scheduled = undefined;\n        var actions = this.actions;\n        var error;\n        var index = -1;\n        var count = actions.length;\n        action = action || actions.shift();\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (++index < count && (action = actions.shift()));\n        this.active = false;\n        if (error) {\n            while (++index < count && (action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AsapScheduler;\n}(AsyncScheduler_1.AsyncScheduler));\nexports.AsapScheduler = AsapScheduler;\n//# sourceMappingURL=AsapScheduler.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar mergeMapTo_1 = require('../../operator/mergeMapTo');\nObservable_1.Observable.prototype.flatMapTo = mergeMapTo_1.mergeMapTo;\nObservable_1.Observable.prototype.mergeMapTo = mergeMapTo_1.mergeMapTo;\n//# sourceMappingURL=mergeMapTo.js.map","\"use strict\";\nvar concatAll_1 = require('../operators/concatAll');\n/* tslint:enable:max-line-length */\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * concatenating the inner Observables in order.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by putting one\n * inner Observable after the other.</span>\n *\n * <img src=\"./img/concatAll.png\" width=\"100%\">\n *\n * Joins every Observable emitted by the source (a higher-order Observable), in\n * a serial fashion. It subscribes to each inner Observable only after the\n * previous inner Observable has completed, and merges all of their values into\n * the returned observable.\n *\n * __Warning:__ If the source Observable emits Observables quickly and\n * endlessly, and the inner Observables it emits generally complete slower than\n * the source emits, you can run into memory issues as the incoming Observables\n * collect in an unbounded buffer.\n *\n * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set\n * to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map(ev => Rx.Observable.interval(1000).take(4));\n * var firstOrder = higherOrder.concatAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link combineAll}\n * @see {@link concat}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link exhaust}\n * @see {@link mergeAll}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable emitting values from all the inner\n * Observables concatenated.\n * @method concatAll\n * @owner Observable\n */\nfunction concatAll() {\n    return concatAll_1.concatAll()(this);\n}\nexports.concatAll = concatAll;\n//# sourceMappingURL=concatAll.js.map","\"use strict\";\nvar expand_1 = require('../operators/expand');\n/* tslint:enable:max-line-length */\n/**\n * Recursively projects each source value to an Observable which is merged in\n * the output Observable.\n *\n * <span class=\"informal\">It's similar to {@link mergeMap}, but applies the\n * projection function to every source value as well as every output value.\n * It's recursive.</span>\n *\n * <img src=\"./img/expand.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger. *Expand* will re-emit on the output\n * Observable every source value. Then, each output value is given to the\n * `project` function which returns an inner Observable to be merged on the\n * output Observable. Those output values resulting from the projection are also\n * given to the `project` function to produce new output values. This is how\n * *expand* behaves recursively.\n *\n * @example <caption>Start emitting the powers of two on every click, at most 10 of them</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var powersOfTwo = clicks\n *   .mapTo(1)\n *   .expand(x => Rx.Observable.of(2 * x).delay(1000))\n *   .take(10);\n * powersOfTwo.subscribe(x => console.log(x));\n *\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n *\n * @param {function(value: T, index: number) => Observable} project A function\n * that, when applied to an item emitted by the source or the output Observable,\n * returns an Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for subscribing to\n * each projected inner Observable.\n * @return {Observable} An Observable that emits the source values and also\n * result of applying the projection function to each value emitted on the\n * output Observable and and merging the results of the Observables obtained\n * from this transformation.\n * @method expand\n * @owner Observable\n */\nfunction expand(project, concurrent, scheduler) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    if (scheduler === void 0) { scheduler = undefined; }\n    concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;\n    return expand_1.expand(project, concurrent, scheduler)(this);\n}\nexports.expand = expand;\n//# sourceMappingURL=expand.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar let_1 = require('../../operator/let');\nObservable_1.Observable.prototype.let = let_1.letProto;\nObservable_1.Observable.prototype.letBind = let_1.letProto;\n//# sourceMappingURL=let.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar race_1 = require('../../observable/race');\nObservable_1.Observable.race = race_1.race;\n//# sourceMappingURL=race.js.map","\"use strict\";\nvar concatMap_1 = require('./concatMap');\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in a serialized fashion on the output Observable.\n *\n * <span class=\"informal\">It's like {@link concatMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * <img src=\"./img/concatMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. Each new `innerObservable`\n * instance emitted on the output Observable is concatenated with the previous\n * `innerObservable` instance.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMapTo` is equivalent to `mergeMapTo` with concurrency parameter\n * set to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.concatMapTo(Rx.Observable.interval(1000).take(4));\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link mergeMapTo}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An observable of values merged together by joining the\n * passed observable with itself, one after the other, for each value emitted\n * from the source.\n * @method concatMapTo\n * @owner Observable\n */\nfunction concatMapTo(innerObservable, resultSelector) {\n    return concatMap_1.concatMap(function () { return innerObservable; }, resultSelector);\n}\nexports.concatMapTo = concatMapTo;\n//# sourceMappingURL=concatMapTo.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar race_1 = require('../../operator/race');\nObservable_1.Observable.prototype.race = race_1.race;\n//# sourceMappingURL=race.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar elementAt_1 = require('../../operator/elementAt');\nObservable_1.Observable.prototype.elementAt = elementAt_1.elementAt;\n//# sourceMappingURL=elementAt.js.map","\"use strict\";\nvar concat_1 = require('../observable/concat');\nvar concat_2 = require('../observable/concat');\nexports.concatStatic = concat_2.concat;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which sequentially emits all values from every\n * given input Observable after the current Observable.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * <img src=\"./img/concat.png\" width=\"100%\">\n *\n * Joins this Observable with multiple other Observables by subscribing to them\n * one at a time, starting with the source, and merging their results into the\n * output Observable. Will wait for each Observable to complete before moving\n * on to the next.\n *\n * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>\n * var timer = Rx.Observable.interval(1000).take(4);\n * var sequence = Rx.Observable.range(1, 10);\n * var result = timer.concat(sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n *\n * @example <caption>Concatenate 3 Observables</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var result = timer1.concat(timer2, timer3);\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n *\n * @param {ObservableInput} other An input Observable to concatenate after the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Scheduler} [scheduler=null] An optional IScheduler to schedule each\n * Observable subscription on.\n * @return {Observable} All values of each passed Observable merged into a\n * single Observable, in order, in serial fashion.\n * @method concat\n * @owner Observable\n */\nfunction concat() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    return function (source) { return source.lift.call(concat_1.concat.apply(void 0, [source].concat(observables))); };\n}\nexports.concat = concat;\n//# sourceMappingURL=concat.js.map","\"use strict\";\nvar skipLast_1 = require('../operators/skipLast');\n/**\n * Skip the last `count` values emitted by the source Observable.\n *\n * <img src=\"./img/skipLast.png\" width=\"100%\">\n *\n * `skipLast` returns an Observable that accumulates a queue with a length\n * enough to store the first `count` values. As more values are received,\n * values are taken from the front of the queue and produced on the result\n * sequence. This causes values to be delayed.\n *\n * @example <caption>Skip the last 2 values of an Observable with many values</caption>\n * var many = Rx.Observable.range(1, 5);\n * var skipLastTwo = many.skipLast(2);\n * skipLastTwo.subscribe(x => console.log(x));\n *\n * // Results in:\n * // 1 2 3\n *\n * @see {@link skip}\n * @see {@link skipUntil}\n * @see {@link skipWhile}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `skipLast(i)`, it throws\n * ArgumentOutOrRangeError if `i < 0`.\n *\n * @param {number} count Number of elements to skip from the end of the source Observable.\n * @returns {Observable<T>} An Observable that skips the last count values\n * emitted by the source Observable.\n * @method skipLast\n * @owner Observable\n */\nfunction skipLast(count) {\n    return skipLast_1.skipLast(count)(this);\n}\nexports.skipLast = skipLast;\n//# sourceMappingURL=skipLast.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar async_1 = require('../scheduler/async');\nvar throttle_1 = require('./throttle');\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for `duration` milliseconds, then repeats this process.\n *\n * <span class=\"informal\">Lets a value pass, then ignores source values for the\n * next `duration` milliseconds.</span>\n *\n * <img src=\"./img/throttleTime.png\" width=\"100%\">\n *\n * `throttleTime` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled. After `duration` milliseconds (or the time unit determined\n * internally by the optional `scheduler`) has passed, the timer is disabled,\n * and this process repeats for the next source value. Optionally takes a\n * {@link IScheduler} for managing timers.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.throttleTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {number} duration Time to wait before emitting another value after\n * emitting the last value, measured in milliseconds or the time unit determined\n * internally by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the throttling.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttleTime\n * @owner Observable\n */\nfunction throttleTime(duration, scheduler, config) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    if (config === void 0) { config = throttle_1.defaultThrottleConfig; }\n    return function (source) { return source.lift(new ThrottleTimeOperator(duration, scheduler, config.leading, config.trailing)); };\n}\nexports.throttleTime = throttleTime;\nvar ThrottleTimeOperator = (function () {\n    function ThrottleTimeOperator(duration, scheduler, leading, trailing) {\n        this.duration = duration;\n        this.scheduler = scheduler;\n        this.leading = leading;\n        this.trailing = trailing;\n    }\n    ThrottleTimeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler, this.leading, this.trailing));\n    };\n    return ThrottleTimeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ThrottleTimeSubscriber = (function (_super) {\n    __extends(ThrottleTimeSubscriber, _super);\n    function ThrottleTimeSubscriber(destination, duration, scheduler, leading, trailing) {\n        _super.call(this, destination);\n        this.duration = duration;\n        this.scheduler = scheduler;\n        this.leading = leading;\n        this.trailing = trailing;\n        this._hasTrailingValue = false;\n        this._trailingValue = null;\n    }\n    ThrottleTimeSubscriber.prototype._next = function (value) {\n        if (this.throttled) {\n            if (this.trailing) {\n                this._trailingValue = value;\n                this._hasTrailingValue = true;\n            }\n        }\n        else {\n            this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, { subscriber: this }));\n            if (this.leading) {\n                this.destination.next(value);\n            }\n        }\n    };\n    ThrottleTimeSubscriber.prototype.clearThrottle = function () {\n        var throttled = this.throttled;\n        if (throttled) {\n            if (this.trailing && this._hasTrailingValue) {\n                this.destination.next(this._trailingValue);\n                this._trailingValue = null;\n                this._hasTrailingValue = false;\n            }\n            throttled.unsubscribe();\n            this.remove(throttled);\n            this.throttled = null;\n        }\n    };\n    return ThrottleTimeSubscriber;\n}(Subscriber_1.Subscriber));\nfunction dispatchNext(arg) {\n    var subscriber = arg.subscriber;\n    subscriber.clearThrottle();\n}\n//# sourceMappingURL=throttleTime.js.map","var DESCRIPTORS = require('../internals/descriptors');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPrimitive = require('../internals/to-primitive');\nvar has = require('../internals/has');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\n\nvar nativeGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// `Object.getOwnPropertyDescriptor` method\n// https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptor\nexports.f = DESCRIPTORS ? nativeGetOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {\n  O = toIndexedObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return nativeGetOwnPropertyDescriptor(O, P);\n  } catch (error) { /* empty */ }\n  if (has(O, P)) return createPropertyDescriptor(!propertyIsEnumerableModule.f.call(O, P), O[P]);\n};\n","\"use strict\";\nvar isArray_1 = require('../util/isArray');\nfunction isNumeric(val) {\n    // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n    // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n    // subtraction forces infinities to NaN\n    // adding 1 corrects loss of precision from parseFloat (#15100)\n    return !isArray_1.isArray(val) && (val - parseFloat(val) + 1) >= 0;\n}\nexports.isNumeric = isNumeric;\n;\n//# sourceMappingURL=isNumeric.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/* tslint:enable:max-line-length */\n/**\n * Applies an accumulator function over the source Observable, and returns each\n * intermediate result, with an optional seed value.\n *\n * <span class=\"informal\">It's like {@link reduce}, but emits the current\n * accumulation whenever the source emits a value.</span>\n *\n * <img src=\"./img/scan.png\" width=\"100%\">\n *\n * Combines together all values emitted on the source, using an accumulator\n * function that knows how to join a new source value into the accumulation from\n * the past. Is similar to {@link reduce}, but emits the intermediate\n * accumulations.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * @example <caption>Count the number of click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var ones = clicks.mapTo(1);\n * var seed = 0;\n * var count = ones.scan((acc, one) => acc + one, seed);\n * count.subscribe(x => console.log(x));\n *\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link reduce}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator\n * The accumulator function called on each source value.\n * @param {T|R} [seed] The initial accumulation value.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method scan\n * @owner Observable\n */\nfunction scan(accumulator, seed) {\n    var hasSeed = false;\n    // providing a seed of `undefined` *should* be valid and trigger\n    // hasSeed! so don't use `seed !== undefined` checks!\n    // For this reason, we have to check it here at the original call site\n    // otherwise inside Operator/Subscriber we won't know if `undefined`\n    // means they didn't provide anything or if they literally provided `undefined`\n    if (arguments.length >= 2) {\n        hasSeed = true;\n    }\n    return function scanOperatorFunction(source) {\n        return source.lift(new ScanOperator(accumulator, seed, hasSeed));\n    };\n}\nexports.scan = scan;\nvar ScanOperator = (function () {\n    function ScanOperator(accumulator, seed, hasSeed) {\n        if (hasSeed === void 0) { hasSeed = false; }\n        this.accumulator = accumulator;\n        this.seed = seed;\n        this.hasSeed = hasSeed;\n    }\n    ScanOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));\n    };\n    return ScanOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ScanSubscriber = (function (_super) {\n    __extends(ScanSubscriber, _super);\n    function ScanSubscriber(destination, accumulator, _seed, hasSeed) {\n        _super.call(this, destination);\n        this.accumulator = accumulator;\n        this._seed = _seed;\n        this.hasSeed = hasSeed;\n        this.index = 0;\n    }\n    Object.defineProperty(ScanSubscriber.prototype, \"seed\", {\n        get: function () {\n            return this._seed;\n        },\n        set: function (value) {\n            this.hasSeed = true;\n            this._seed = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ScanSubscriber.prototype._next = function (value) {\n        if (!this.hasSeed) {\n            this.seed = value;\n            this.destination.next(value);\n        }\n        else {\n            return this._tryNext(value);\n        }\n    };\n    ScanSubscriber.prototype._tryNext = function (value) {\n        var index = this.index++;\n        var result;\n        try {\n            result = this.accumulator(this.seed, value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n        this.seed = result;\n        this.destination.next(result);\n    };\n    return ScanSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=scan.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Converts a higher-order Observable into a first-order Observable by dropping\n * inner Observables while the previous inner Observable has not yet completed.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by dropping the\n * next inner Observables while the current inner is still executing.</span>\n *\n * <img src=\"./img/exhaust.png\" width=\"100%\">\n *\n * `exhaust` subscribes to an Observable that emits Observables, also known as a\n * higher-order Observable. Each time it observes one of these emitted inner\n * Observables, the output Observable begins emitting the items emitted by that\n * inner Observable. So far, it behaves like {@link mergeAll}. However,\n * `exhaust` ignores every new inner Observable if the previous Observable has\n * not yet completed. Once that one completes, it will accept and flatten the\n * next inner Observable and repeat this process.\n *\n * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(5));\n * var result = higherOrder.exhaust();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link switch}\n * @see {@link mergeAll}\n * @see {@link exhaustMap}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable that takes a source of Observables and propagates the first observable\n * exclusively until it completes before subscribing to the next.\n * @method exhaust\n * @owner Observable\n */\nfunction exhaust() {\n    return function (source) { return source.lift(new SwitchFirstOperator()); };\n}\nexports.exhaust = exhaust;\nvar SwitchFirstOperator = (function () {\n    function SwitchFirstOperator() {\n    }\n    SwitchFirstOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SwitchFirstSubscriber(subscriber));\n    };\n    return SwitchFirstOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SwitchFirstSubscriber = (function (_super) {\n    __extends(SwitchFirstSubscriber, _super);\n    function SwitchFirstSubscriber(destination) {\n        _super.call(this, destination);\n        this.hasCompleted = false;\n        this.hasSubscription = false;\n    }\n    SwitchFirstSubscriber.prototype._next = function (value) {\n        if (!this.hasSubscription) {\n            this.hasSubscription = true;\n            this.add(subscribeToResult_1.subscribeToResult(this, value));\n        }\n    };\n    SwitchFirstSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (!this.hasSubscription) {\n            this.destination.complete();\n        }\n    };\n    SwitchFirstSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.remove(innerSub);\n        this.hasSubscription = false;\n        if (this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return SwitchFirstSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=exhaust.js.map","\"use strict\";\nvar ReplaySubject_1 = require('../ReplaySubject');\n/**\n * @method shareReplay\n * @owner Observable\n */\nfunction shareReplay(bufferSize, windowTime, scheduler) {\n    return function (source) { return source.lift(shareReplayOperator(bufferSize, windowTime, scheduler)); };\n}\nexports.shareReplay = shareReplay;\nfunction shareReplayOperator(bufferSize, windowTime, scheduler) {\n    var subject;\n    var refCount = 0;\n    var subscription;\n    var hasError = false;\n    var isComplete = false;\n    return function shareReplayOperation(source) {\n        refCount++;\n        if (!subject || hasError) {\n            hasError = false;\n            subject = new ReplaySubject_1.ReplaySubject(bufferSize, windowTime, scheduler);\n            subscription = source.subscribe({\n                next: function (value) { subject.next(value); },\n                error: function (err) {\n                    hasError = true;\n                    subject.error(err);\n                },\n                complete: function () {\n                    isComplete = true;\n                    subject.complete();\n                },\n            });\n        }\n        var innerSub = subject.subscribe(this);\n        return function () {\n            refCount--;\n            innerSub.unsubscribe();\n            if (subscription && refCount === 0 && isComplete) {\n                subscription.unsubscribe();\n            }\n        };\n    };\n}\n;\n//# sourceMappingURL=shareReplay.js.map","\"use strict\";\nvar async_1 = require('../scheduler/async');\nvar timeoutWith_1 = require('../operators/timeoutWith');\n/* tslint:enable:max-line-length */\n/**\n *\n * Errors if Observable does not emit a value in given time span, in case of which\n * subscribes to the second Observable.\n *\n * <span class=\"informal\">It's a version of `timeout` operator that let's you specify fallback Observable.</span>\n *\n * <img src=\"./img/timeoutWith.png\" width=\"100%\">\n *\n * `timeoutWith` is a variation of `timeout` operator. It behaves exactly the same,\n * still accepting as a first argument either a number or a Date, which control - respectively -\n * when values of source Observable should be emitted or when it should complete.\n *\n * The only difference is that it accepts a second, required parameter. This parameter\n * should be an Observable which will be subscribed when source Observable fails any timeout check.\n * So whenever regular `timeout` would emit an error, `timeoutWith` will instead start re-emitting\n * values from second Observable. Note that this fallback Observable is not checked for timeouts\n * itself, so it can emit values and complete at arbitrary points in time. From the moment of a second\n * subscription, Observable returned from `timeoutWith` simply mirrors fallback stream. When that\n * stream completes, it completes as well.\n *\n * Scheduler, which in case of `timeout` is provided as as second argument, can be still provided\n * here - as a third, optional parameter. It still is used to schedule timeout checks and -\n * as a consequence - when second Observable will be subscribed, since subscription happens\n * immediately after failing check.\n *\n * @example <caption>Add fallback observable</caption>\n * const seconds = Rx.Observable.interval(1000);\n * const minutes = Rx.Observable.interval(60 * 1000);\n *\n * seconds.timeoutWith(900, minutes)\n *     .subscribe(\n *         value => console.log(value), // After 900ms, will start emitting `minutes`,\n *                                      // since first value of `seconds` will not arrive fast enough.\n *         err => console.log(err) // Would be called after 900ms in case of `timeout`,\n *                                 // but here will never be called.\n *     );\n *\n * @param {number|Date} due Number specifying period within which Observable must emit values\n *                          or Date specifying before when Observable should complete\n * @param {Observable<T>} withObservable Observable which will be subscribed if source fails timeout check.\n * @param {Scheduler} [scheduler] Scheduler controlling when timeout checks occur.\n * @return {Observable<T>} Observable that mirrors behaviour of source or, when timeout check fails, of an Observable\n *                          passed as a second parameter.\n * @method timeoutWith\n * @owner Observable\n */\nfunction timeoutWith(due, withObservable, scheduler) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    return timeoutWith_1.timeoutWith(due, withObservable, scheduler)(this);\n}\nexports.timeoutWith = timeoutWith;\n//# sourceMappingURL=timeoutWith.js.map","\"use strict\";\nvar not_1 = require('../util/not');\nvar filter_1 = require('./filter');\n/**\n * Splits the source Observable into two, one with values that satisfy a\n * predicate, and another with values that don't satisfy the predicate.\n *\n * <span class=\"informal\">It's like {@link filter}, but returns two Observables:\n * one like the output of {@link filter}, and the other with values that did not\n * pass the condition.</span>\n *\n * <img src=\"./img/partition.png\" width=\"100%\">\n *\n * `partition` outputs an array with two Observables that partition the values\n * from the source Observable through the given `predicate` function. The first\n * Observable in that array emits source values for which the predicate argument\n * returns true. The second Observable emits source values for which the\n * predicate returns false. The first behaves like {@link filter} and the second\n * behaves like {@link filter} with the predicate negated.\n *\n * @example <caption>Partition click events into those on DIV elements and those elsewhere</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var parts = clicks.partition(ev => ev.target.tagName === 'DIV');\n * var clicksOnDivs = parts[0];\n * var clicksElsewhere = parts[1];\n * clicksOnDivs.subscribe(x => console.log('DIV clicked: ', x));\n * clicksElsewhere.subscribe(x => console.log('Other clicked: ', x));\n *\n * @see {@link filter}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted on the first Observable in the returned array, if\n * `false` the value is emitted on the second Observable in the array. The\n * `index` parameter is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {[Observable<T>, Observable<T>]} An array with two Observables: one\n * with values that passed the predicate, and another with values that did not\n * pass the predicate.\n * @method partition\n * @owner Observable\n */\nfunction partition(predicate, thisArg) {\n    return function (source) { return [\n        filter_1.filter(predicate, thisArg)(source),\n        filter_1.filter(not_1.not(predicate, thisArg))(source)\n    ]; };\n}\nexports.partition = partition;\n//# sourceMappingURL=partition.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscription_1 = require('../Subscription');\n/**\n * A unit of work to be executed in a {@link Scheduler}. An action is typically\n * created from within a Scheduler and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nvar Action = (function (_super) {\n    __extends(Action, _super);\n    function Action(scheduler, work) {\n        _super.call(this);\n    }\n    /**\n     * Schedules this action on its parent Scheduler for execution. May be passed\n     * some context object, `state`. May happen at some point in the future,\n     * according to the `delay` parameter, if specified.\n     * @param {T} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler.\n     * @return {void}\n     */\n    Action.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        return this;\n    };\n    return Action;\n}(Subscription_1.Subscription));\nexports.Action = Action;\n//# sourceMappingURL=Action.js.map","\"use strict\";\nvar find_1 = require('../operators/find');\n/* tslint:enable:max-line-length */\n/**\n * Emits only the first value emitted by the source Observable that meets some\n * condition.\n *\n * <span class=\"informal\">Finds the first value that passes some test and emits\n * that.</span>\n *\n * <img src=\"./img/find.png\" width=\"100%\">\n *\n * `find` searches for the first item in the source Observable that matches the\n * specified condition embodied by the `predicate`, and returns the first\n * occurrence in the source. Unlike {@link first}, the `predicate` is required\n * in `find`, and does not emit an error if a valid value is not found.\n *\n * @example <caption>Find and emit the first click that happens on a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.find(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link first}\n * @see {@link findIndex}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable<T>} An Observable of the first item that matches the\n * condition.\n * @method find\n * @owner Observable\n */\nfunction find(predicate, thisArg) {\n    return find_1.find(predicate, thisArg)(this);\n}\nexports.find = find;\n//# sourceMappingURL=find.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar auditTime_1 = require('../../operator/auditTime');\nObservable_1.Observable.prototype.auditTime = auditTime_1.auditTime;\n//# sourceMappingURL=auditTime.js.map","\"use strict\";\nvar PairsObservable_1 = require('./PairsObservable');\nexports.pairs = PairsObservable_1.PairsObservable.create;\n//# sourceMappingURL=pairs.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar concatMapTo_1 = require('../../operator/concatMapTo');\nObservable_1.Observable.prototype.concatMapTo = concatMapTo_1.concatMapTo;\n//# sourceMappingURL=concatMapTo.js.map","\"use strict\";\nvar shareReplay_1 = require('../operators/shareReplay');\n/**\n * @method shareReplay\n * @owner Observable\n */\nfunction shareReplay(bufferSize, windowTime, scheduler) {\n    return shareReplay_1.shareReplay(bufferSize, windowTime, scheduler)(this);\n}\nexports.shareReplay = shareReplay;\n;\n//# sourceMappingURL=shareReplay.js.map","\"use strict\";\nvar ReplaySubject_1 = require('../ReplaySubject');\nvar multicast_1 = require('./multicast');\n/* tslint:enable:max-line-length */\nfunction publishReplay(bufferSize, windowTime, selectorOrScheduler, scheduler) {\n    if (selectorOrScheduler && typeof selectorOrScheduler !== 'function') {\n        scheduler = selectorOrScheduler;\n    }\n    var selector = typeof selectorOrScheduler === 'function' ? selectorOrScheduler : undefined;\n    var subject = new ReplaySubject_1.ReplaySubject(bufferSize, windowTime, scheduler);\n    return function (source) { return multicast_1.multicast(function () { return subject; }, selector)(source); };\n}\nexports.publishReplay = publishReplay;\n//# sourceMappingURL=publishReplay.js.map","\"use strict\";\nvar mergeMap_1 = require('./mergeMap');\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, in a serialized fashion waiting for each one to complete before\n * merging the next.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link concatAll}.</span>\n *\n * <img src=\"./img/concatMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each new inner Observable is\n * concatenated with the previous inner Observable.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMap` is equivalent to `mergeMap` with concurrency parameter set\n * to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.concatMap(ev => Rx.Observable.interval(1000).take(4));\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMapTo}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking values from each projected inner\n * Observable sequentially.\n * @method concatMap\n * @owner Observable\n */\nfunction concatMap(project, resultSelector) {\n    return mergeMap_1.mergeMap(project, resultSelector, 1);\n}\nexports.concatMap = concatMap;\n//# sourceMappingURL=concatMap.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar debounceTime_1 = require('../../operator/debounceTime');\nObservable_1.Observable.prototype.debounceTime = debounceTime_1.debounceTime;\n//# sourceMappingURL=debounceTime.js.map","\"use strict\";\nvar combineLatest_1 = require('../operators/combineLatest');\n/* tslint:enable:max-line-length */\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * <img src=\"./img/combineLatest.png\" width=\"100%\">\n *\n * `combineLatest` combines the values from this Observable with values from\n * Observables passed as arguments. This is done by subscribing to each\n * Observable, in order, and collecting an array of each of the most recent\n * values any time any of the input Observables emits, then either taking that\n * array and passing it as arguments to an optional `project` function and\n * emitting the return value of that, or just emitting the array of recent\n * values directly if there is no `project` function.\n *\n * @example <caption>Dynamically calculate the Body-Mass Index from an Observable of weight and one for height</caption>\n * var weight = Rx.Observable.of(70, 72, 76, 79, 75);\n * var height = Rx.Observable.of(1.76, 1.77, 1.78);\n * var bmi = weight.combineLatest(height, (w, h) => w / (h * h));\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method combineLatest\n * @owner Observable\n */\nfunction combineLatest() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    return combineLatest_1.combineLatest.apply(void 0, observables)(this);\n}\nexports.combineLatest = combineLatest;\n//# sourceMappingURL=combineLatest.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar throw_1 = require('../../observable/throw');\nObservable_1.Observable.throw = throw_1._throw;\n//# sourceMappingURL=throw.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable only if the previous projected Observable has completed.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link exhaust}.</span>\n *\n * <img src=\"./img/exhaustMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. When it projects a source value to\n * an Observable, the output Observable begins emitting the items emitted by\n * that projected Observable. However, `exhaustMap` ignores every new projected\n * Observable if the previous projected Observable has not yet completed. Once\n * that one completes, it will accept and flatten the next projected Observable\n * and repeat this process.\n *\n * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.exhaustMap((ev) => Rx.Observable.interval(1000).take(5));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaust}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable containing projected Observables\n * of each item of the source, ignoring projected Observables that start before\n * their preceding Observable has completed.\n * @method exhaustMap\n * @owner Observable\n */\nfunction exhaustMap(project, resultSelector) {\n    return function (source) { return source.lift(new SwitchFirstMapOperator(project, resultSelector)); };\n}\nexports.exhaustMap = exhaustMap;\nvar SwitchFirstMapOperator = (function () {\n    function SwitchFirstMapOperator(project, resultSelector) {\n        this.project = project;\n        this.resultSelector = resultSelector;\n    }\n    SwitchFirstMapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SwitchFirstMapSubscriber(subscriber, this.project, this.resultSelector));\n    };\n    return SwitchFirstMapOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SwitchFirstMapSubscriber = (function (_super) {\n    __extends(SwitchFirstMapSubscriber, _super);\n    function SwitchFirstMapSubscriber(destination, project, resultSelector) {\n        _super.call(this, destination);\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.hasSubscription = false;\n        this.hasCompleted = false;\n        this.index = 0;\n    }\n    SwitchFirstMapSubscriber.prototype._next = function (value) {\n        if (!this.hasSubscription) {\n            this.tryNext(value);\n        }\n    };\n    SwitchFirstMapSubscriber.prototype.tryNext = function (value) {\n        var index = this.index++;\n        var destination = this.destination;\n        try {\n            var result = this.project(value, index);\n            this.hasSubscription = true;\n            this.add(subscribeToResult_1.subscribeToResult(this, result, value, index));\n        }\n        catch (err) {\n            destination.error(err);\n        }\n    };\n    SwitchFirstMapSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (!this.hasSubscription) {\n            this.destination.complete();\n        }\n    };\n    SwitchFirstMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;\n        if (resultSelector) {\n            this.trySelectResult(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            destination.next(innerValue);\n        }\n    };\n    SwitchFirstMapSubscriber.prototype.trySelectResult = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;\n        try {\n            var result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n            destination.next(result);\n        }\n        catch (err) {\n            destination.error(err);\n        }\n    };\n    SwitchFirstMapSubscriber.prototype.notifyError = function (err) {\n        this.destination.error(err);\n    };\n    SwitchFirstMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.remove(innerSub);\n        this.hasSubscription = false;\n        if (this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return SwitchFirstMapSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=exhaustMap.js.map","\"use strict\";\nvar concatMap_1 = require('../operators/concatMap');\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, in a serialized fashion waiting for each one to complete before\n * merging the next.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link concatAll}.</span>\n *\n * <img src=\"./img/concatMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each new inner Observable is\n * concatenated with the previous inner Observable.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMap` is equivalent to `mergeMap` with concurrency parameter set\n * to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.concatMap(ev => Rx.Observable.interval(1000).take(4));\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMapTo}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking values from each projected inner\n * Observable sequentially.\n * @method concatMap\n * @owner Observable\n */\nfunction concatMap(project, resultSelector) {\n    return concatMap_1.concatMap(project, resultSelector)(this);\n}\nexports.concatMap = concatMap;\n//# sourceMappingURL=concatMap.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar zipAll_1 = require('../../operator/zipAll');\nObservable_1.Observable.prototype.zipAll = zipAll_1.zipAll;\n//# sourceMappingURL=zipAll.js.map","\"use strict\";\n/* tslint:disable:no-empty */\nfunction noop() { }\nexports.noop = noop;\n//# sourceMappingURL=noop.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Emits values emitted by the source Observable so long as each value satisfies\n * the given `predicate`, and then completes as soon as this `predicate` is not\n * satisfied.\n *\n * <span class=\"informal\">Takes values from the source only while they pass the\n * condition given. When the first value does not satisfy, it completes.</span>\n *\n * <img src=\"./img/takeWhile.png\" width=\"100%\">\n *\n * `takeWhile` subscribes and begins mirroring the source Observable. Each value\n * emitted on the source is given to the `predicate` function which returns a\n * boolean, representing a condition to be satisfied by the source values. The\n * output Observable emits the source values until such time as the `predicate`\n * returns false, at which point `takeWhile` stops mirroring the source\n * Observable and completes the output Observable.\n *\n * @example <caption>Emit click events only while the clientX property is greater than 200</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.takeWhile(ev => ev.clientX > 200);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates a value emitted by the source Observable and returns a boolean.\n * Also takes the (zero-based) index as the second argument.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable so long as each value satisfies the condition defined by the\n * `predicate`, then completes.\n * @method takeWhile\n * @owner Observable\n */\nfunction takeWhile(predicate) {\n    return function (source) { return source.lift(new TakeWhileOperator(predicate)); };\n}\nexports.takeWhile = takeWhile;\nvar TakeWhileOperator = (function () {\n    function TakeWhileOperator(predicate) {\n        this.predicate = predicate;\n    }\n    TakeWhileOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TakeWhileSubscriber(subscriber, this.predicate));\n    };\n    return TakeWhileOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TakeWhileSubscriber = (function (_super) {\n    __extends(TakeWhileSubscriber, _super);\n    function TakeWhileSubscriber(destination, predicate) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.index = 0;\n    }\n    TakeWhileSubscriber.prototype._next = function (value) {\n        var destination = this.destination;\n        var result;\n        try {\n            result = this.predicate(value, this.index++);\n        }\n        catch (err) {\n            destination.error(err);\n            return;\n        }\n        this.nextOrComplete(value, result);\n    };\n    TakeWhileSubscriber.prototype.nextOrComplete = function (value, predicateResult) {\n        var destination = this.destination;\n        if (Boolean(predicateResult)) {\n            destination.next(value);\n        }\n        else {\n            destination.complete();\n        }\n    };\n    return TakeWhileSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=takeWhile.js.map","\"use strict\";\nvar FromEventObservable_1 = require('./FromEventObservable');\nexports.fromEvent = FromEventObservable_1.FromEventObservable.create;\n//# sourceMappingURL=fromEvent.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar async_1 = require('../scheduler/async');\nvar isDate_1 = require('../util/isDate');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/* tslint:enable:max-line-length */\n/**\n *\n * Errors if Observable does not emit a value in given time span, in case of which\n * subscribes to the second Observable.\n *\n * <span class=\"informal\">It's a version of `timeout` operator that let's you specify fallback Observable.</span>\n *\n * <img src=\"./img/timeoutWith.png\" width=\"100%\">\n *\n * `timeoutWith` is a variation of `timeout` operator. It behaves exactly the same,\n * still accepting as a first argument either a number or a Date, which control - respectively -\n * when values of source Observable should be emitted or when it should complete.\n *\n * The only difference is that it accepts a second, required parameter. This parameter\n * should be an Observable which will be subscribed when source Observable fails any timeout check.\n * So whenever regular `timeout` would emit an error, `timeoutWith` will instead start re-emitting\n * values from second Observable. Note that this fallback Observable is not checked for timeouts\n * itself, so it can emit values and complete at arbitrary points in time. From the moment of a second\n * subscription, Observable returned from `timeoutWith` simply mirrors fallback stream. When that\n * stream completes, it completes as well.\n *\n * Scheduler, which in case of `timeout` is provided as as second argument, can be still provided\n * here - as a third, optional parameter. It still is used to schedule timeout checks and -\n * as a consequence - when second Observable will be subscribed, since subscription happens\n * immediately after failing check.\n *\n * @example <caption>Add fallback observable</caption>\n * const seconds = Rx.Observable.interval(1000);\n * const minutes = Rx.Observable.interval(60 * 1000);\n *\n * seconds.timeoutWith(900, minutes)\n *     .subscribe(\n *         value => console.log(value), // After 900ms, will start emitting `minutes`,\n *                                      // since first value of `seconds` will not arrive fast enough.\n *         err => console.log(err) // Would be called after 900ms in case of `timeout`,\n *                                 // but here will never be called.\n *     );\n *\n * @param {number|Date} due Number specifying period within which Observable must emit values\n *                          or Date specifying before when Observable should complete\n * @param {Observable<T>} withObservable Observable which will be subscribed if source fails timeout check.\n * @param {Scheduler} [scheduler] Scheduler controlling when timeout checks occur.\n * @return {Observable<T>} Observable that mirrors behaviour of source or, when timeout check fails, of an Observable\n *                          passed as a second parameter.\n * @method timeoutWith\n * @owner Observable\n */\nfunction timeoutWith(due, withObservable, scheduler) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    return function (source) {\n        var absoluteTimeout = isDate_1.isDate(due);\n        var waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(due);\n        return source.lift(new TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler));\n    };\n}\nexports.timeoutWith = timeoutWith;\nvar TimeoutWithOperator = (function () {\n    function TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler) {\n        this.waitFor = waitFor;\n        this.absoluteTimeout = absoluteTimeout;\n        this.withObservable = withObservable;\n        this.scheduler = scheduler;\n    }\n    TimeoutWithOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TimeoutWithSubscriber(subscriber, this.absoluteTimeout, this.waitFor, this.withObservable, this.scheduler));\n    };\n    return TimeoutWithOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TimeoutWithSubscriber = (function (_super) {\n    __extends(TimeoutWithSubscriber, _super);\n    function TimeoutWithSubscriber(destination, absoluteTimeout, waitFor, withObservable, scheduler) {\n        _super.call(this, destination);\n        this.absoluteTimeout = absoluteTimeout;\n        this.waitFor = waitFor;\n        this.withObservable = withObservable;\n        this.scheduler = scheduler;\n        this.action = null;\n        this.scheduleTimeout();\n    }\n    TimeoutWithSubscriber.dispatchTimeout = function (subscriber) {\n        var withObservable = subscriber.withObservable;\n        subscriber._unsubscribeAndRecycle();\n        subscriber.add(subscribeToResult_1.subscribeToResult(subscriber, withObservable));\n    };\n    TimeoutWithSubscriber.prototype.scheduleTimeout = function () {\n        var action = this.action;\n        if (action) {\n            // Recycle the action if we've already scheduled one. All the production\n            // Scheduler Actions mutate their state/delay time and return themeselves.\n            // VirtualActions are immutable, so they create and return a clone. In this\n            // case, we need to set the action reference to the most recent VirtualAction,\n            // to ensure that's the one we clone from next time.\n            this.action = action.schedule(this, this.waitFor);\n        }\n        else {\n            this.add(this.action = this.scheduler.schedule(TimeoutWithSubscriber.dispatchTimeout, this.waitFor, this));\n        }\n    };\n    TimeoutWithSubscriber.prototype._next = function (value) {\n        if (!this.absoluteTimeout) {\n            this.scheduleTimeout();\n        }\n        _super.prototype._next.call(this, value);\n    };\n    /** @deprecated internal use only */ TimeoutWithSubscriber.prototype._unsubscribe = function () {\n        this.action = null;\n        this.scheduler = null;\n        this.withObservable = null;\n    };\n    return TimeoutWithSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=timeoutWith.js.map","\"use strict\";\nvar BoundCallbackObservable_1 = require('./BoundCallbackObservable');\nexports.bindCallback = BoundCallbackObservable_1.BoundCallbackObservable.create;\n//# sourceMappingURL=bindCallback.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar timestamp_1 = require('../../operator/timestamp');\nObservable_1.Observable.prototype.timestamp = timestamp_1.timestamp;\n//# sourceMappingURL=timestamp.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar bindCallback_1 = require('../../observable/bindCallback');\nObservable_1.Observable.bindCallback = bindCallback_1.bindCallback;\n//# sourceMappingURL=bindCallback.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Immediate_1 = require('../util/Immediate');\nvar AsyncAction_1 = require('./AsyncAction');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AsapAction = (function (_super) {\n    __extends(AsapAction, _super);\n    function AsapAction(scheduler, work) {\n        _super.call(this, scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n    }\n    AsapAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        // If delay is greater than 0, request as an async action.\n        if (delay !== null && delay > 0) {\n            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\n        }\n        // Push the action to the end of the scheduler queue.\n        scheduler.actions.push(this);\n        // If a microtask has already been scheduled, don't schedule another\n        // one. If a microtask hasn't been scheduled yet, schedule one now. Return\n        // the current scheduled microtask id.\n        return scheduler.scheduled || (scheduler.scheduled = Immediate_1.Immediate.setImmediate(scheduler.flush.bind(scheduler, null)));\n    };\n    AsapAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        // If delay exists and is greater than 0, or if the delay is null (the\n        // action wasn't rescheduled) but was originally scheduled as an async\n        // action, then recycle as an async action.\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);\n        }\n        // If the scheduler queue is empty, cancel the requested microtask and\n        // set the scheduled flag to undefined so the next AsapAction will schedule\n        // its own.\n        if (scheduler.actions.length === 0) {\n            Immediate_1.Immediate.clearImmediate(id);\n            scheduler.scheduled = undefined;\n        }\n        // Return undefined so the action knows to request a new async id if it's rescheduled.\n        return undefined;\n    };\n    return AsapAction;\n}(AsyncAction_1.AsyncAction));\nexports.AsapAction = AsapAction;\n//# sourceMappingURL=AsapAction.js.map","\"use strict\";\nvar takeLast_1 = require('../operators/takeLast');\n/**\n * Emits only the last `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Remembers the latest `count` values, then emits those\n * only when the source completes.</span>\n *\n * <img src=\"./img/takeLast.png\" width=\"100%\">\n *\n * `takeLast` returns an Observable that emits at most the last `count` values\n * emitted by the source Observable. If the source emits fewer than `count`\n * values then all of its values are emitted. This operator must wait until the\n * `complete` notification emission from the source in order to emit the `next`\n * values on the output Observable, because otherwise it is impossible to know\n * whether or not more values will be emitted on the source. For this reason,\n * all values are emitted synchronously, followed by the complete notification.\n *\n * @example <caption>Take the last 3 values of an Observable with many values</caption>\n * var many = Rx.Observable.range(1, 100);\n * var lastThree = many.takeLast(3);\n * lastThree.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `takeLast(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of values to emit from the end of\n * the sequence of values emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits at most the last count\n * values emitted by the source Observable.\n * @method takeLast\n * @owner Observable\n */\nfunction takeLast(count) {\n    return takeLast_1.takeLast(count)(this);\n}\nexports.takeLast = takeLast;\n//# sourceMappingURL=takeLast.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar repeatWhen_1 = require('../../operator/repeatWhen');\nObservable_1.Observable.prototype.repeatWhen = repeatWhen_1.repeatWhen;\n//# sourceMappingURL=repeatWhen.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AsyncAction_1 = require('./AsyncAction');\nvar AnimationFrame_1 = require('../util/AnimationFrame');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AnimationFrameAction = (function (_super) {\n    __extends(AnimationFrameAction, _super);\n    function AnimationFrameAction(scheduler, work) {\n        _super.call(this, scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n    }\n    AnimationFrameAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        // If delay is greater than 0, request as an async action.\n        if (delay !== null && delay > 0) {\n            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\n        }\n        // Push the action to the end of the scheduler queue.\n        scheduler.actions.push(this);\n        // If an animation frame has already been requested, don't request another\n        // one. If an animation frame hasn't been requested yet, request one. Return\n        // the current animation frame request id.\n        return scheduler.scheduled || (scheduler.scheduled = AnimationFrame_1.AnimationFrame.requestAnimationFrame(scheduler.flush.bind(scheduler, null)));\n    };\n    AnimationFrameAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        // If delay exists and is greater than 0, or if the delay is null (the\n        // action wasn't rescheduled) but was originally scheduled as an async\n        // action, then recycle as an async action.\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);\n        }\n        // If the scheduler queue is empty, cancel the requested animation frame and\n        // set the scheduled flag to undefined so the next AnimationFrameAction will\n        // request its own.\n        if (scheduler.actions.length === 0) {\n            AnimationFrame_1.AnimationFrame.cancelAnimationFrame(id);\n            scheduler.scheduled = undefined;\n        }\n        // Return undefined so the action knows to request a new async id if it's rescheduled.\n        return undefined;\n    };\n    return AnimationFrameAction;\n}(AsyncAction_1.AsyncAction));\nexports.AnimationFrameAction = AnimationFrameAction;\n//# sourceMappingURL=AnimationFrameAction.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Returns an Observable that skips all items emitted by the source Observable as long as a specified condition holds\n * true, but emits all further source items as soon as the condition becomes false.\n *\n * <img src=\"./img/skipWhile.png\" width=\"100%\">\n *\n * @param {Function} predicate - A function to test each item emitted from the source Observable.\n * @return {Observable<T>} An Observable that begins emitting items emitted by the source Observable when the\n * specified predicate becomes false.\n * @method skipWhile\n * @owner Observable\n */\nfunction skipWhile(predicate) {\n    return function (source) { return source.lift(new SkipWhileOperator(predicate)); };\n}\nexports.skipWhile = skipWhile;\nvar SkipWhileOperator = (function () {\n    function SkipWhileOperator(predicate) {\n        this.predicate = predicate;\n    }\n    SkipWhileOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SkipWhileSubscriber(subscriber, this.predicate));\n    };\n    return SkipWhileOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SkipWhileSubscriber = (function (_super) {\n    __extends(SkipWhileSubscriber, _super);\n    function SkipWhileSubscriber(destination, predicate) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.skipping = true;\n        this.index = 0;\n    }\n    SkipWhileSubscriber.prototype._next = function (value) {\n        var destination = this.destination;\n        if (this.skipping) {\n            this.tryCallPredicate(value);\n        }\n        if (!this.skipping) {\n            destination.next(value);\n        }\n    };\n    SkipWhileSubscriber.prototype.tryCallPredicate = function (value) {\n        try {\n            var result = this.predicate(value, this.index++);\n            this.skipping = Boolean(result);\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    return SkipWhileSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=skipWhile.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar generate_1 = require('../../observable/generate');\nObservable_1.Observable.generate = generate_1.generate;\n//# sourceMappingURL=generate.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar single_1 = require('../../operator/single');\nObservable_1.Observable.prototype.single = single_1.single;\n//# sourceMappingURL=single.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar publishLast_1 = require('../../operator/publishLast');\nObservable_1.Observable.prototype.publishLast = publishLast_1.publishLast;\n//# sourceMappingURL=publishLast.js.map","\"use strict\";\nvar audit_1 = require('../operators/audit');\n/**\n * Ignores source values for a duration determined by another Observable, then\n * emits the most recent value from the source Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link auditTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/audit.png\" width=\"100%\">\n *\n * `audit` is similar to `throttle`, but emits the last value from the silenced\n * time window, instead of the first value. `audit` emits the most recent value\n * from the source Observable on the output Observable as soon as its internal\n * timer becomes disabled, and ignores source values while the timer is enabled.\n * Initially, the timer is disabled. As soon as the first source value arrives,\n * the timer is enabled by calling the `durationSelector` function with the\n * source value, which returns the \"duration\" Observable. When the duration\n * Observable emits a value or completes, the timer is disabled, then the most\n * recent source value is emitted on the output Observable, and this process\n * repeats for the next source value.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.audit(ev => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttle}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration, returned as an Observable or a Promise.\n * @return {Observable<T>} An Observable that performs rate-limiting of\n * emissions from the source Observable.\n * @method audit\n * @owner Observable\n */\nfunction audit(durationSelector) {\n    return audit_1.audit(durationSelector)(this);\n}\nexports.audit = audit;\n//# sourceMappingURL=audit.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar ArgumentOutOfRangeError_1 = require('../util/ArgumentOutOfRangeError');\n/**\n * Emits the single value at the specified `index` in a sequence of emissions\n * from the source Observable.\n *\n * <span class=\"informal\">Emits only the i-th value, then completes.</span>\n *\n * <img src=\"./img/elementAt.png\" width=\"100%\">\n *\n * `elementAt` returns an Observable that emits the item at the specified\n * `index` in the source Observable, or a default value if that `index` is out\n * of range and the `default` argument is provided. If the `default` argument is\n * not given and the `index` is out of range, the output Observable will emit an\n * `ArgumentOutOfRangeError` error.\n *\n * @example <caption>Emit only the third click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.elementAt(2);\n * result.subscribe(x => console.log(x));\n *\n * // Results in:\n * // click 1 = nothing\n * // click 2 = nothing\n * // click 3 = MouseEvent object logged to console\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link skip}\n * @see {@link single}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `elementAt(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0` or the\n * Observable has completed before emitting the i-th `next` notification.\n *\n * @param {number} index Is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {T} [defaultValue] The default value returned for missing indices.\n * @return {Observable} An Observable that emits a single item, if it is found.\n * Otherwise, will emit the default value if given. If not, then emits an error.\n * @method elementAt\n * @owner Observable\n */\nfunction elementAt(index, defaultValue) {\n    return function (source) { return source.lift(new ElementAtOperator(index, defaultValue)); };\n}\nexports.elementAt = elementAt;\nvar ElementAtOperator = (function () {\n    function ElementAtOperator(index, defaultValue) {\n        this.index = index;\n        this.defaultValue = defaultValue;\n        if (index < 0) {\n            throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;\n        }\n    }\n    ElementAtOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ElementAtSubscriber(subscriber, this.index, this.defaultValue));\n    };\n    return ElementAtOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ElementAtSubscriber = (function (_super) {\n    __extends(ElementAtSubscriber, _super);\n    function ElementAtSubscriber(destination, index, defaultValue) {\n        _super.call(this, destination);\n        this.index = index;\n        this.defaultValue = defaultValue;\n    }\n    ElementAtSubscriber.prototype._next = function (x) {\n        if (this.index-- === 0) {\n            this.destination.next(x);\n            this.destination.complete();\n        }\n    };\n    ElementAtSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        if (this.index >= 0) {\n            if (typeof this.defaultValue !== 'undefined') {\n                destination.next(this.defaultValue);\n            }\n            else {\n                destination.error(new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError);\n            }\n        }\n        destination.complete();\n    };\n    return ElementAtSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=elementAt.js.map","\"use strict\";\nvar switchAll_1 = require('../operators/switchAll');\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * subscribing to only the most recently emitted of those inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by dropping the\n * previous inner Observable once a new one appears.</span>\n *\n * <img src=\"./img/switch.png\" width=\"100%\">\n *\n * `switch` subscribes to an Observable that emits Observables, also known as a\n * higher-order Observable. Each time it observes one of these emitted inner\n * Observables, the output Observable subscribes to the inner Observable and\n * begins emitting the items emitted by that. So far, it behaves\n * like {@link mergeAll}. However, when a new inner Observable is emitted,\n * `switch` unsubscribes from the earlier-emitted inner Observable and\n * subscribes to the new inner Observable and begins emitting items from it. It\n * continues to behave like this for subsequent inner Observables.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * // Each click event is mapped to an Observable that ticks every second\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));\n * var switched = higherOrder.switch();\n * // The outcome is that `switched` is essentially a timer that restarts\n * // on every click. The interval Observables from older clicks do not merge\n * // with the current interval Observable.\n * switched.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link mergeAll}\n * @see {@link switchMap}\n * @see {@link switchMapTo}\n * @see {@link zipAll}\n *\n * @return {Observable<T>} An Observable that emits the items emitted by the\n * Observable most recently emitted by the source Observable.\n * @method switch\n * @name switch\n * @owner Observable\n */\nfunction _switch() {\n    return switchAll_1.switchAll()(this);\n}\nexports._switch = _switch;\n//# sourceMappingURL=switch.js.map","\"use strict\";\nvar async_1 = require('../scheduler/async');\nvar isScheduler_1 = require('../util/isScheduler');\nvar bufferTime_1 = require('../operators/bufferTime');\n/* tslint:enable:max-line-length */\n/**\n * Buffers the source Observable values for a specific time period.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * those arrays periodically in time.</span>\n *\n * <img src=\"./img/bufferTime.png\" width=\"100%\">\n *\n * Buffers values from the source for a specific time duration `bufferTimeSpan`.\n * Unless the optional argument `bufferCreationInterval` is given, it emits and\n * resets the buffer every `bufferTimeSpan` milliseconds. If\n * `bufferCreationInterval` is given, this operator opens the buffer every\n * `bufferCreationInterval` milliseconds and closes (emits and resets) the\n * buffer every `bufferTimeSpan` milliseconds. When the optional argument\n * `maxBufferSize` is specified, the buffer will be closed either after\n * `bufferTimeSpan` milliseconds or when it contains `maxBufferSize` elements.\n *\n * @example <caption>Every second, emit an array of the recent click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferTime(1000);\n * buffered.subscribe(x => console.log(x));\n *\n * @example <caption>Every 5 seconds, emit the click events from the next 2 seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferTime(2000, 5000);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link windowTime}\n *\n * @param {number} bufferTimeSpan The amount of time to fill each buffer array.\n * @param {number} [bufferCreationInterval] The interval at which to start new\n * buffers.\n * @param {number} [maxBufferSize] The maximum buffer size.\n * @param {Scheduler} [scheduler=async] The scheduler on which to schedule the\n * intervals that determine buffer boundaries.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferTime\n * @owner Observable\n */\nfunction bufferTime(bufferTimeSpan) {\n    var length = arguments.length;\n    var scheduler = async_1.async;\n    if (isScheduler_1.isScheduler(arguments[arguments.length - 1])) {\n        scheduler = arguments[arguments.length - 1];\n        length--;\n    }\n    var bufferCreationInterval = null;\n    if (length >= 2) {\n        bufferCreationInterval = arguments[1];\n    }\n    var maxBufferSize = Number.POSITIVE_INFINITY;\n    if (length >= 3) {\n        maxBufferSize = arguments[2];\n    }\n    return bufferTime_1.bufferTime(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler)(this);\n}\nexports.bufferTime = bufferTime;\n//# sourceMappingURL=bufferTime.js.map","\"use strict\";\nvar exhaustMap_1 = require('../operators/exhaustMap');\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable only if the previous projected Observable has completed.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link exhaust}.</span>\n *\n * <img src=\"./img/exhaustMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. When it projects a source value to\n * an Observable, the output Observable begins emitting the items emitted by\n * that projected Observable. However, `exhaustMap` ignores every new projected\n * Observable if the previous projected Observable has not yet completed. Once\n * that one completes, it will accept and flatten the next projected Observable\n * and repeat this process.\n *\n * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.exhaustMap((ev) => Rx.Observable.interval(1000).take(5));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaust}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable containing projected Observables\n * of each item of the source, ignoring projected Observables that start before\n * their preceding Observable has completed.\n * @method exhaustMap\n * @owner Observable\n */\nfunction exhaustMap(project, resultSelector) {\n    return exhaustMap_1.exhaustMap(project, resultSelector)(this);\n}\nexports.exhaustMap = exhaustMap;\n//# sourceMappingURL=exhaustMap.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar pairwise_1 = require('../../operator/pairwise');\nObservable_1.Observable.prototype.pairwise = pairwise_1.pairwise;\n//# sourceMappingURL=pairwise.js.map","\"use strict\";\nvar async_1 = require('../scheduler/async');\nvar sampleTime_1 = require('../operators/sampleTime');\n/**\n * Emits the most recently emitted value from the source Observable within\n * periodic time intervals.\n *\n * <span class=\"informal\">Samples the source Observable at periodic time\n * intervals, emitting what it samples.</span>\n *\n * <img src=\"./img/sampleTime.png\" width=\"100%\">\n *\n * `sampleTime` periodically looks at the source Observable and emits whichever\n * value it has most recently emitted since the previous sampling, unless the\n * source has not emitted anything since the previous sampling. The sampling\n * happens periodically in time every `period` milliseconds (or the time unit\n * defined by the optional `scheduler` argument). The sampling starts as soon as\n * the output Observable is subscribed.\n *\n * @example <caption>Every second, emit the most recent click at most once</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.sampleTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {number} period The sampling period expressed in milliseconds or the\n * time unit determined internally by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the sampling.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable at the specified time interval.\n * @method sampleTime\n * @owner Observable\n */\nfunction sampleTime(period, scheduler) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    return sampleTime_1.sampleTime(period, scheduler)(this);\n}\nexports.sampleTime = sampleTime;\n//# sourceMappingURL=sampleTime.js.map","\"use strict\";\nvar mergeMap_1 = require('../operators/mergeMap');\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * <img src=\"./img/mergeMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * @example <caption>Map and flatten each letter to an Observable ticking every 1 second</caption>\n * var letters = Rx.Observable.of('a', 'b', 'c');\n * var result = letters.mergeMap(x =>\n *   Rx.Observable.interval(1000).map(i => x+i)\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a,b,c with respective ascending integers\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and merging the results of the Observables obtained\n * from this transformation.\n * @method mergeMap\n * @owner Observable\n */\nfunction mergeMap(project, resultSelector, concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    return mergeMap_1.mergeMap(project, resultSelector, concurrent)(this);\n}\nexports.mergeMap = mergeMap;\n//# sourceMappingURL=mergeMap.js.map","\"use strict\";\nvar ArrayObservable_1 = require('./ArrayObservable');\nexports.of = ArrayObservable_1.ArrayObservable.of;\n//# sourceMappingURL=of.js.map","\"use strict\";\nvar concat_1 = require('../operators/concat');\nvar concat_2 = require('../observable/concat');\nexports.concatStatic = concat_2.concat;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which sequentially emits all values from every\n * given input Observable after the current Observable.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * <img src=\"./img/concat.png\" width=\"100%\">\n *\n * Joins this Observable with multiple other Observables by subscribing to them\n * one at a time, starting with the source, and merging their results into the\n * output Observable. Will wait for each Observable to complete before moving\n * on to the next.\n *\n * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>\n * var timer = Rx.Observable.interval(1000).take(4);\n * var sequence = Rx.Observable.range(1, 10);\n * var result = timer.concat(sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n *\n * @example <caption>Concatenate 3 Observables</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var result = timer1.concat(timer2, timer3);\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n *\n * @param {ObservableInput} other An input Observable to concatenate after the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Scheduler} [scheduler=null] An optional IScheduler to schedule each\n * Observable subscription on.\n * @return {Observable} All values of each passed Observable merged into a\n * single Observable, in order, in serial fashion.\n * @method concat\n * @owner Observable\n */\nfunction concat() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    return concat_1.concat.apply(void 0, observables)(this);\n}\nexports.concat = concat;\n//# sourceMappingURL=concat.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar publish_1 = require('../../operator/publish');\nObservable_1.Observable.prototype.publish = publish_1.publish;\n//# sourceMappingURL=publish.js.map","var getBuiltIn = require('../internals/get-built-in');\n\nmodule.exports = getBuiltIn('document', 'documentElement');\n","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = require('./Subject');\nvar queue_1 = require('./scheduler/queue');\nvar Subscription_1 = require('./Subscription');\nvar observeOn_1 = require('./operators/observeOn');\nvar ObjectUnsubscribedError_1 = require('./util/ObjectUnsubscribedError');\nvar SubjectSubscription_1 = require('./SubjectSubscription');\n/**\n * @class ReplaySubject<T>\n */\nvar ReplaySubject = (function (_super) {\n    __extends(ReplaySubject, _super);\n    function ReplaySubject(bufferSize, windowTime, scheduler) {\n        if (bufferSize === void 0) { bufferSize = Number.POSITIVE_INFINITY; }\n        if (windowTime === void 0) { windowTime = Number.POSITIVE_INFINITY; }\n        _super.call(this);\n        this.scheduler = scheduler;\n        this._events = [];\n        this._bufferSize = bufferSize < 1 ? 1 : bufferSize;\n        this._windowTime = windowTime < 1 ? 1 : windowTime;\n    }\n    ReplaySubject.prototype.next = function (value) {\n        var now = this._getNow();\n        this._events.push(new ReplayEvent(now, value));\n        this._trimBufferThenGetEvents();\n        _super.prototype.next.call(this, value);\n    };\n    /** @deprecated internal use only */ ReplaySubject.prototype._subscribe = function (subscriber) {\n        var _events = this._trimBufferThenGetEvents();\n        var scheduler = this.scheduler;\n        var subscription;\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else if (this.hasError) {\n            subscription = Subscription_1.Subscription.EMPTY;\n        }\n        else if (this.isStopped) {\n            subscription = Subscription_1.Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            subscription = new SubjectSubscription_1.SubjectSubscription(this, subscriber);\n        }\n        if (scheduler) {\n            subscriber.add(subscriber = new observeOn_1.ObserveOnSubscriber(subscriber, scheduler));\n        }\n        var len = _events.length;\n        for (var i = 0; i < len && !subscriber.closed; i++) {\n            subscriber.next(_events[i].value);\n        }\n        if (this.hasError) {\n            subscriber.error(this.thrownError);\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n        }\n        return subscription;\n    };\n    ReplaySubject.prototype._getNow = function () {\n        return (this.scheduler || queue_1.queue).now();\n    };\n    ReplaySubject.prototype._trimBufferThenGetEvents = function () {\n        var now = this._getNow();\n        var _bufferSize = this._bufferSize;\n        var _windowTime = this._windowTime;\n        var _events = this._events;\n        var eventsCount = _events.length;\n        var spliceCount = 0;\n        // Trim events that fall out of the time window.\n        // Start at the front of the list. Break early once\n        // we encounter an event that falls within the window.\n        while (spliceCount < eventsCount) {\n            if ((now - _events[spliceCount].time) < _windowTime) {\n                break;\n            }\n            spliceCount++;\n        }\n        if (eventsCount > _bufferSize) {\n            spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);\n        }\n        if (spliceCount > 0) {\n            _events.splice(0, spliceCount);\n        }\n        return _events;\n    };\n    return ReplaySubject;\n}(Subject_1.Subject));\nexports.ReplaySubject = ReplaySubject;\nvar ReplayEvent = (function () {\n    function ReplayEvent(time, value) {\n        this.time = time;\n        this.value = value;\n    }\n    return ReplayEvent;\n}());\n//# sourceMappingURL=ReplaySubject.js.map","export function checkReady() {\n    if (typeof process === 'undefined') {\n        var win_1 = typeof window !== 'undefined' ? window : {};\n        var DEVICE_READY_TIMEOUT_1 = 5000;\n        // To help developers using cordova, we listen for the device ready event and\n        // log an error if it didn't fire in a reasonable amount of time. Generally,\n        // when this happens, developers should remove and reinstall plugins, since\n        // an inconsistent plugin is often the culprit.\n        var before_1 = Date.now();\n        var didFireReady_1 = false;\n        win_1.document.addEventListener('deviceready', function () {\n            console.log(\"Ionic Native: deviceready event fired after \" + (Date.now() - before_1) + \" ms\");\n            didFireReady_1 = true;\n        });\n        setTimeout(function () {\n            if (!didFireReady_1 && win_1.cordova) {\n                console.warn(\"Ionic Native: deviceready did not fire within \" + DEVICE_READY_TIMEOUT_1 + \"ms. This can happen when plugins are in an inconsistent state. Try removing plugins from plugins/ and reinstalling them.\");\n            }\n        }, DEVICE_READY_TIMEOUT_1);\n    }\n}\n//# sourceMappingURL=bootstrap.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in the output Observable.\n *\n * <span class=\"informal\">It's like {@link mergeMap}, but maps each value always\n * to the same inner Observable.</span>\n *\n * <img src=\"./img/mergeMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then merges those resulting Observables into one\n * single Observable, which is the output Observable.\n *\n * @example <caption>For each click event, start an interval Observable ticking every 1 second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.mergeMapTo(Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMapTo}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable` (and optionally transformed through `resultSelector`) every\n * time a value is emitted on the source Observable.\n * @method mergeMapTo\n * @owner Observable\n */\nfunction mergeMapTo(innerObservable, resultSelector, concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    if (typeof resultSelector === 'number') {\n        concurrent = resultSelector;\n        resultSelector = null;\n    }\n    return function (source) { return source.lift(new MergeMapToOperator(innerObservable, resultSelector, concurrent)); };\n}\nexports.mergeMapTo = mergeMapTo;\n// TODO: Figure out correct signature here: an Operator<Observable<T>, R>\n//       needs to implement call(observer: Subscriber<R>): Subscriber<Observable<T>>\nvar MergeMapToOperator = (function () {\n    function MergeMapToOperator(ish, resultSelector, concurrent) {\n        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n        this.ish = ish;\n        this.resultSelector = resultSelector;\n        this.concurrent = concurrent;\n    }\n    MergeMapToOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new MergeMapToSubscriber(observer, this.ish, this.resultSelector, this.concurrent));\n    };\n    return MergeMapToOperator;\n}());\nexports.MergeMapToOperator = MergeMapToOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MergeMapToSubscriber = (function (_super) {\n    __extends(MergeMapToSubscriber, _super);\n    function MergeMapToSubscriber(destination, ish, resultSelector, concurrent) {\n        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n        _super.call(this, destination);\n        this.ish = ish;\n        this.resultSelector = resultSelector;\n        this.concurrent = concurrent;\n        this.hasCompleted = false;\n        this.buffer = [];\n        this.active = 0;\n        this.index = 0;\n    }\n    MergeMapToSubscriber.prototype._next = function (value) {\n        if (this.active < this.concurrent) {\n            var resultSelector = this.resultSelector;\n            var index = this.index++;\n            var ish = this.ish;\n            var destination = this.destination;\n            this.active++;\n            this._innerSub(ish, destination, resultSelector, value, index);\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    MergeMapToSubscriber.prototype._innerSub = function (ish, destination, resultSelector, value, index) {\n        this.add(subscribeToResult_1.subscribeToResult(this, ish, value, index));\n    };\n    MergeMapToSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            this.destination.complete();\n        }\n    };\n    MergeMapToSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;\n        if (resultSelector) {\n            this.trySelectResult(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            destination.next(innerValue);\n        }\n    };\n    MergeMapToSubscriber.prototype.trySelectResult = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;\n        var result;\n        try {\n            result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        catch (err) {\n            destination.error(err);\n            return;\n        }\n        destination.next(result);\n    };\n    MergeMapToSubscriber.prototype.notifyError = function (err) {\n        this.destination.error(err);\n    };\n    MergeMapToSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return MergeMapToSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nexports.MergeMapToSubscriber = MergeMapToSubscriber;\n//# sourceMappingURL=mergeMapTo.js.map","// `RequireObjectCoercible` abstract operation\n// https://tc39.github.io/ecma262/#sec-requireobjectcoercible\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on \" + it);\n  return it;\n};\n","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = require('../Subject');\nvar tryCatch_1 = require('../util/tryCatch');\nvar errorObject_1 = require('../util/errorObject');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Returns an Observable that mirrors the source Observable with the exception of a `complete`. If the source\n * Observable calls `complete`, this method will emit to the Observable returned from `notifier`. If that Observable\n * calls `complete` or `error`, then this method will call `complete` or `error` on the child subscription. Otherwise\n * this method will resubscribe to the source Observable.\n *\n * <img src=\"./img/repeatWhen.png\" width=\"100%\">\n *\n * @param {function(notifications: Observable): Observable} notifier - Receives an Observable of notifications with\n * which a user can `complete` or `error`, aborting the repetition.\n * @return {Observable} The source Observable modified with repeat logic.\n * @method repeatWhen\n * @owner Observable\n */\nfunction repeatWhen(notifier) {\n    return function (source) { return source.lift(new RepeatWhenOperator(notifier)); };\n}\nexports.repeatWhen = repeatWhen;\nvar RepeatWhenOperator = (function () {\n    function RepeatWhenOperator(notifier) {\n        this.notifier = notifier;\n    }\n    RepeatWhenOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new RepeatWhenSubscriber(subscriber, this.notifier, source));\n    };\n    return RepeatWhenOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar RepeatWhenSubscriber = (function (_super) {\n    __extends(RepeatWhenSubscriber, _super);\n    function RepeatWhenSubscriber(destination, notifier, source) {\n        _super.call(this, destination);\n        this.notifier = notifier;\n        this.source = source;\n        this.sourceIsBeingSubscribedTo = true;\n    }\n    RepeatWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.sourceIsBeingSubscribedTo = true;\n        this.source.subscribe(this);\n    };\n    RepeatWhenSubscriber.prototype.notifyComplete = function (innerSub) {\n        if (this.sourceIsBeingSubscribedTo === false) {\n            return _super.prototype.complete.call(this);\n        }\n    };\n    RepeatWhenSubscriber.prototype.complete = function () {\n        this.sourceIsBeingSubscribedTo = false;\n        if (!this.isStopped) {\n            if (!this.retries) {\n                this.subscribeToRetries();\n            }\n            if (!this.retriesSubscription || this.retriesSubscription.closed) {\n                return _super.prototype.complete.call(this);\n            }\n            this._unsubscribeAndRecycle();\n            this.notifications.next();\n        }\n    };\n    /** @deprecated internal use only */ RepeatWhenSubscriber.prototype._unsubscribe = function () {\n        var _a = this, notifications = _a.notifications, retriesSubscription = _a.retriesSubscription;\n        if (notifications) {\n            notifications.unsubscribe();\n            this.notifications = null;\n        }\n        if (retriesSubscription) {\n            retriesSubscription.unsubscribe();\n            this.retriesSubscription = null;\n        }\n        this.retries = null;\n    };\n    /** @deprecated internal use only */ RepeatWhenSubscriber.prototype._unsubscribeAndRecycle = function () {\n        var _a = this, notifications = _a.notifications, retries = _a.retries, retriesSubscription = _a.retriesSubscription;\n        this.notifications = null;\n        this.retries = null;\n        this.retriesSubscription = null;\n        _super.prototype._unsubscribeAndRecycle.call(this);\n        this.notifications = notifications;\n        this.retries = retries;\n        this.retriesSubscription = retriesSubscription;\n        return this;\n    };\n    RepeatWhenSubscriber.prototype.subscribeToRetries = function () {\n        this.notifications = new Subject_1.Subject();\n        var retries = tryCatch_1.tryCatch(this.notifier)(this.notifications);\n        if (retries === errorObject_1.errorObject) {\n            return _super.prototype.complete.call(this);\n        }\n        this.retries = retries;\n        this.retriesSubscription = subscribeToResult_1.subscribeToResult(this, retries);\n    };\n    return RepeatWhenSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=repeatWhen.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar switch_1 = require('../../operator/switch');\nObservable_1.Observable.prototype.switch = switch_1._switch;\nObservable_1.Observable.prototype._switch = switch_1._switch;\n//# sourceMappingURL=switch.js.map","\"use strict\";\nvar isScheduler_1 = require('../util/isScheduler');\nvar of_1 = require('./of');\nvar from_1 = require('./from');\nvar concatAll_1 = require('../operators/concatAll');\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which sequentially emits all values from given\n * Observable and then moves on to the next.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * <img src=\"./img/concat.png\" width=\"100%\">\n *\n * `concat` joins multiple Observables together, by subscribing to them one at a time and\n * merging their results into the output Observable. You can pass either an array of\n * Observables, or put them directly as arguments. Passing an empty array will result\n * in Observable that completes immediately.\n *\n * `concat` will subscribe to first input Observable and emit all its values, without\n * changing or affecting them in any way. When that Observable completes, it will\n * subscribe to then next Observable passed and, again, emit its values. This will be\n * repeated, until the operator runs out of Observables. When last input Observable completes,\n * `concat` will complete as well. At any given moment only one Observable passed to operator\n * emits values. If you would like to emit values from passed Observables concurrently, check out\n * {@link merge} instead, especially with optional `concurrent` parameter. As a matter of fact,\n * `concat` is an equivalent of `merge` operator with `concurrent` parameter set to `1`.\n *\n * Note that if some input Observable never completes, `concat` will also never complete\n * and Observables following the one that did not complete will never be subscribed. On the other\n * hand, if some Observable simply completes immediately after it is subscribed, it will be\n * invisible for `concat`, which will just move on to the next Observable.\n *\n * If any Observable in chain errors, instead of passing control to the next Observable,\n * `concat` will error immediately as well. Observables that would be subscribed after\n * the one that emitted error, never will.\n *\n * If you pass to `concat` the same Observable many times, its stream of values\n * will be \"replayed\" on every subscription, which means you can repeat given Observable\n * as many times as you like. If passing the same Observable to `concat` 1000 times becomes tedious,\n * you can always use {@link repeat}.\n *\n * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>\n * var timer = Rx.Observable.interval(1000).take(4);\n * var sequence = Rx.Observable.range(1, 10);\n * var result = Rx.Observable.concat(timer, sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n *\n *\n * @example <caption>Concatenate an array of 3 Observables</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var result = Rx.Observable.concat([timer1, timer2, timer3]); // note that array is passed\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n *\n *\n * @example <caption>Concatenate the same Observable to repeat it</caption>\n * const timer = Rx.Observable.interval(1000).take(2);\n *\n * Rx.Observable.concat(timer, timer) // concating the same Observable!\n * .subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('...and it is done!')\n * );\n *\n * // Logs:\n * // 0 after 1s\n * // 1 after 2s\n * // 0 after 3s\n * // 1 after 4s\n * // \"...and it is done!\" also after 4s\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n *\n * @param {ObservableInput} input1 An input Observable to concatenate with others.\n * @param {ObservableInput} input2 An input Observable to concatenate with others.\n * More than one input Observables may be given as argument.\n * @param {Scheduler} [scheduler=null] An optional IScheduler to schedule each\n * Observable subscription on.\n * @return {Observable} All values of each passed Observable merged into a\n * single Observable, in order, in serial fashion.\n * @static true\n * @name concat\n * @owner Observable\n */\nfunction concat() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    if (observables.length === 1 || (observables.length === 2 && isScheduler_1.isScheduler(observables[1]))) {\n        return from_1.from(observables[0]);\n    }\n    return concatAll_1.concatAll()(of_1.of.apply(void 0, observables));\n}\nexports.concat = concat;\n//# sourceMappingURL=concat.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar sampleTime_1 = require('../../operator/sampleTime');\nObservable_1.Observable.prototype.sampleTime = sampleTime_1.sampleTime;\n//# sourceMappingURL=sampleTime.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/* tslint:enable:max-line-length */\n/**\n * Emits a given value if the source Observable completes without emitting any\n * `next` value, otherwise mirrors the source Observable.\n *\n * <span class=\"informal\">If the source Observable turns out to be empty, then\n * this operator will emit a default value.</span>\n *\n * <img src=\"./img/defaultIfEmpty.png\" width=\"100%\">\n *\n * `defaultIfEmpty` emits the values emitted by the source Observable or a\n * specified default value if the source Observable is empty (completes without\n * having emitted any `next` value).\n *\n * @example <caption>If no clicks happen in 5 seconds, then emit \"no clicks\"</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksBeforeFive = clicks.takeUntil(Rx.Observable.interval(5000));\n * var result = clicksBeforeFive.defaultIfEmpty('no clicks');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link empty}\n * @see {@link last}\n *\n * @param {any} [defaultValue=null] The default value used if the source\n * Observable is empty.\n * @return {Observable} An Observable that emits either the specified\n * `defaultValue` if the source Observable emits no items, or the values emitted\n * by the source Observable.\n * @method defaultIfEmpty\n * @owner Observable\n */\nfunction defaultIfEmpty(defaultValue) {\n    if (defaultValue === void 0) { defaultValue = null; }\n    return function (source) { return source.lift(new DefaultIfEmptyOperator(defaultValue)); };\n}\nexports.defaultIfEmpty = defaultIfEmpty;\nvar DefaultIfEmptyOperator = (function () {\n    function DefaultIfEmptyOperator(defaultValue) {\n        this.defaultValue = defaultValue;\n    }\n    DefaultIfEmptyOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DefaultIfEmptySubscriber(subscriber, this.defaultValue));\n    };\n    return DefaultIfEmptyOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DefaultIfEmptySubscriber = (function (_super) {\n    __extends(DefaultIfEmptySubscriber, _super);\n    function DefaultIfEmptySubscriber(destination, defaultValue) {\n        _super.call(this, destination);\n        this.defaultValue = defaultValue;\n        this.isEmpty = true;\n    }\n    DefaultIfEmptySubscriber.prototype._next = function (value) {\n        this.isEmpty = false;\n        this.destination.next(value);\n    };\n    DefaultIfEmptySubscriber.prototype._complete = function () {\n        if (this.isEmpty) {\n            this.destination.next(this.defaultValue);\n        }\n        this.destination.complete();\n    };\n    return DefaultIfEmptySubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=defaultIfEmpty.js.map","\"use strict\";\nvar onErrorResumeNext_1 = require('../operators/onErrorResumeNext');\n/* tslint:enable:max-line-length */\n/**\n * When any of the provided Observable emits an complete or error notification, it immediately subscribes to the next one\n * that was passed.\n *\n * <span class=\"informal\">Execute series of Observables no matter what, even if it means swallowing errors.</span>\n *\n * <img src=\"./img/onErrorResumeNext.png\" width=\"100%\">\n *\n * `onErrorResumeNext` is an operator that accepts a series of Observables, provided either directly as\n * arguments or as an array. If no single Observable is provided, returned Observable will simply behave the same\n * as the source.\n *\n * `onErrorResumeNext` returns an Observable that starts by subscribing and re-emitting values from the source Observable.\n * When its stream of values ends - no matter if Observable completed or emitted an error - `onErrorResumeNext`\n * will subscribe to the first Observable that was passed as an argument to the method. It will start re-emitting\n * its values as well and - again - when that stream ends, `onErrorResumeNext` will proceed to subscribing yet another\n * Observable in provided series, no matter if previous Observable completed or ended with an error. This will\n * be happening until there is no more Observables left in the series, at which point returned Observable will\n * complete - even if the last subscribed stream ended with an error.\n *\n * `onErrorResumeNext` can be therefore thought of as version of {@link concat} operator, which is more permissive\n * when it comes to the errors emitted by its input Observables. While `concat` subscribes to the next Observable\n * in series only if previous one successfully completed, `onErrorResumeNext` subscribes even if it ended with\n * an error.\n *\n * Note that you do not get any access to errors emitted by the Observables. In particular do not\n * expect these errors to appear in error callback passed to {@link subscribe}. If you want to take\n * specific actions based on what error was emitted by an Observable, you should try out {@link catch} instead.\n *\n *\n * @example <caption>Subscribe to the next Observable after map fails</caption>\n * Rx.Observable.of(1, 2, 3, 0)\n *   .map(x => {\n *       if (x === 0) { throw Error(); }\n         return 10 / x;\n *   })\n *   .onErrorResumeNext(Rx.Observable.of(1, 2, 3))\n *   .subscribe(\n *     val => console.log(val),\n *     err => console.log(err),          // Will never be called.\n *     () => console.log('that\\'s it!')\n *   );\n *\n * // Logs:\n * // 10\n * // 5\n * // 3.3333333333333335\n * // 1\n * // 2\n * // 3\n * // \"that's it!\"\n *\n * @see {@link concat}\n * @see {@link catch}\n *\n * @param {...ObservableInput} observables Observables passed either directly or as an array.\n * @return {Observable} An Observable that emits values from source Observable, but - if it errors - subscribes\n * to the next passed Observable and so on, until it completes or runs out of Observables.\n * @method onErrorResumeNext\n * @owner Observable\n */\nfunction onErrorResumeNext() {\n    var nextSources = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        nextSources[_i - 0] = arguments[_i];\n    }\n    return onErrorResumeNext_1.onErrorResumeNext.apply(void 0, nextSources)(this);\n}\nexports.onErrorResumeNext = onErrorResumeNext;\n//# sourceMappingURL=onErrorResumeNext.js.map","\"use strict\";\nvar FromObservable_1 = require('./FromObservable');\nexports.from = FromObservable_1.FromObservable.create;\n//# sourceMappingURL=from.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar timeInterval_1 = require('../../operator/timeInterval');\nObservable_1.Observable.prototype.timeInterval = timeInterval_1.timeInterval;\n//# sourceMappingURL=timeInterval.js.map","var toInteger = require('../internals/to-integer');\n\nvar max = Math.max;\nvar min = Math.min;\n\n// Helper for a popular repeating case of the spec:\n// Let integer be ? ToInteger(index).\n// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).\nmodule.exports = function (index, length) {\n  var integer = toInteger(index);\n  return integer < 0 ? max(integer + length, 0) : min(integer, length);\n};\n","var global = require('../internals/global');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar redefine = require('../internals/redefine');\nvar setGlobal = require('../internals/set-global');\nvar copyConstructorProperties = require('../internals/copy-constructor-properties');\nvar isForced = require('../internals/is-forced');\n\n/*\n  options.target      - name of the target object\n  options.global      - target is the global object\n  options.stat        - export as static methods of target\n  options.proto       - export as prototype methods of target\n  options.real        - real prototype method for the `pure` version\n  options.forced      - export even if the native feature is available\n  options.bind        - bind methods to the target, required for the `pure` version\n  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version\n  options.unsafe      - use the simple assignment of property instead of delete + defineProperty\n  options.sham        - add a flag to not completely full polyfills\n  options.enumerable  - export as enumerable property\n  options.noTargetGet - prevent calling a getter on target\n*/\nmodule.exports = function (options, source) {\n  var TARGET = options.target;\n  var GLOBAL = options.global;\n  var STATIC = options.stat;\n  var FORCED, target, key, targetProperty, sourceProperty, descriptor;\n  if (GLOBAL) {\n    target = global;\n  } else if (STATIC) {\n    target = global[TARGET] || setGlobal(TARGET, {});\n  } else {\n    target = (global[TARGET] || {}).prototype;\n  }\n  if (target) for (key in source) {\n    sourceProperty = source[key];\n    if (options.noTargetGet) {\n      descriptor = getOwnPropertyDescriptor(target, key);\n      targetProperty = descriptor && descriptor.value;\n    } else targetProperty = target[key];\n    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);\n    // contained in target\n    if (!FORCED && targetProperty !== undefined) {\n      if (typeof sourceProperty === typeof targetProperty) continue;\n      copyConstructorProperties(sourceProperty, targetProperty);\n    }\n    // add a flag to not completely full polyfills\n    if (options.sham || (targetProperty && targetProperty.sham)) {\n      createNonEnumerableProperty(sourceProperty, 'sham', true);\n    }\n    // extend global\n    redefine(target, key, sourceProperty, options);\n  }\n};\n","var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\nvar hiddenKeys = enumBugKeys.concat('length', 'prototype');\n\n// `Object.getOwnPropertyNames` method\n// https://tc39.github.io/ecma262/#sec-object.getownpropertynames\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return internalObjectKeys(O, hiddenKeys);\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar notARegExp = require('../internals/not-a-regexp');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar correctIsRegExpLogic = require('../internals/correct-is-regexp-logic');\n\n// `String.prototype.includes` method\n// https://tc39.github.io/ecma262/#sec-string.prototype.includes\n$({ target: 'String', proto: true, forced: !correctIsRegExpLogic('includes') }, {\n  includes: function includes(searchString /* , position = 0 */) {\n    return !!~String(requireObjectCoercible(this))\n      .indexOf(notARegExp(searchString), arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","\"use strict\";\nvar every_1 = require('../operators/every');\n/**\n * Returns an Observable that emits whether or not every item of the source satisfies the condition specified.\n *\n * @example <caption>A simple example emitting true if all elements are less than 5, false otherwise</caption>\n *  Observable.of(1, 2, 3, 4, 5, 6)\n *     .every(x => x < 5)\n *     .subscribe(x => console.log(x)); // -> false\n *\n * @param {function} predicate A function for determining if an item meets a specified condition.\n * @param {any} [thisArg] Optional object to use for `this` in the callback.\n * @return {Observable} An Observable of booleans that determines if all items of the source Observable meet the condition specified.\n * @method every\n * @owner Observable\n */\nfunction every(predicate, thisArg) {\n    return every_1.every(predicate, thisArg)(this);\n}\nexports.every = every;\n//# sourceMappingURL=every.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar EmptyObservable_1 = require('../observable/EmptyObservable');\n/**\n * Returns an Observable that repeats the stream of items emitted by the source Observable at most count times.\n *\n * <img src=\"./img/repeat.png\" width=\"100%\">\n *\n * @param {number} [count] The number of times the source Observable items are repeated, a count of 0 will yield\n * an empty Observable.\n * @return {Observable} An Observable that repeats the stream of items emitted by the source Observable at most\n * count times.\n * @method repeat\n * @owner Observable\n */\nfunction repeat(count) {\n    if (count === void 0) { count = -1; }\n    return function (source) {\n        if (count === 0) {\n            return new EmptyObservable_1.EmptyObservable();\n        }\n        else if (count < 0) {\n            return source.lift(new RepeatOperator(-1, source));\n        }\n        else {\n            return source.lift(new RepeatOperator(count - 1, source));\n        }\n    };\n}\nexports.repeat = repeat;\nvar RepeatOperator = (function () {\n    function RepeatOperator(count, source) {\n        this.count = count;\n        this.source = source;\n    }\n    RepeatOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new RepeatSubscriber(subscriber, this.count, this.source));\n    };\n    return RepeatOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar RepeatSubscriber = (function (_super) {\n    __extends(RepeatSubscriber, _super);\n    function RepeatSubscriber(destination, count, source) {\n        _super.call(this, destination);\n        this.count = count;\n        this.source = source;\n    }\n    RepeatSubscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            var _a = this, source = _a.source, count = _a.count;\n            if (count === 0) {\n                return _super.prototype.complete.call(this);\n            }\n            else if (count > -1) {\n                this.count = count - 1;\n            }\n            source.subscribe(this._unsubscribeAndRecycle());\n        }\n    };\n    return RepeatSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=repeat.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar mergeAll_1 = require('../../operator/mergeAll');\nObservable_1.Observable.prototype.mergeAll = mergeAll_1.mergeAll;\n//# sourceMappingURL=mergeAll.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar tryCatch_1 = require('../util/tryCatch');\nvar errorObject_1 = require('../util/errorObject');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/* tslint:enable:max-line-length */\n/**\n * Recursively projects each source value to an Observable which is merged in\n * the output Observable.\n *\n * <span class=\"informal\">It's similar to {@link mergeMap}, but applies the\n * projection function to every source value as well as every output value.\n * It's recursive.</span>\n *\n * <img src=\"./img/expand.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger. *Expand* will re-emit on the output\n * Observable every source value. Then, each output value is given to the\n * `project` function which returns an inner Observable to be merged on the\n * output Observable. Those output values resulting from the projection are also\n * given to the `project` function to produce new output values. This is how\n * *expand* behaves recursively.\n *\n * @example <caption>Start emitting the powers of two on every click, at most 10 of them</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var powersOfTwo = clicks\n *   .mapTo(1)\n *   .expand(x => Rx.Observable.of(2 * x).delay(1000))\n *   .take(10);\n * powersOfTwo.subscribe(x => console.log(x));\n *\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n *\n * @param {function(value: T, index: number) => Observable} project A function\n * that, when applied to an item emitted by the source or the output Observable,\n * returns an Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for subscribing to\n * each projected inner Observable.\n * @return {Observable} An Observable that emits the source values and also\n * result of applying the projection function to each value emitted on the\n * output Observable and and merging the results of the Observables obtained\n * from this transformation.\n * @method expand\n * @owner Observable\n */\nfunction expand(project, concurrent, scheduler) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    if (scheduler === void 0) { scheduler = undefined; }\n    concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;\n    return function (source) { return source.lift(new ExpandOperator(project, concurrent, scheduler)); };\n}\nexports.expand = expand;\nvar ExpandOperator = (function () {\n    function ExpandOperator(project, concurrent, scheduler) {\n        this.project = project;\n        this.concurrent = concurrent;\n        this.scheduler = scheduler;\n    }\n    ExpandOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ExpandSubscriber(subscriber, this.project, this.concurrent, this.scheduler));\n    };\n    return ExpandOperator;\n}());\nexports.ExpandOperator = ExpandOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ExpandSubscriber = (function (_super) {\n    __extends(ExpandSubscriber, _super);\n    function ExpandSubscriber(destination, project, concurrent, scheduler) {\n        _super.call(this, destination);\n        this.project = project;\n        this.concurrent = concurrent;\n        this.scheduler = scheduler;\n        this.index = 0;\n        this.active = 0;\n        this.hasCompleted = false;\n        if (concurrent < Number.POSITIVE_INFINITY) {\n            this.buffer = [];\n        }\n    }\n    ExpandSubscriber.dispatch = function (arg) {\n        var subscriber = arg.subscriber, result = arg.result, value = arg.value, index = arg.index;\n        subscriber.subscribeToProjection(result, value, index);\n    };\n    ExpandSubscriber.prototype._next = function (value) {\n        var destination = this.destination;\n        if (destination.closed) {\n            this._complete();\n            return;\n        }\n        var index = this.index++;\n        if (this.active < this.concurrent) {\n            destination.next(value);\n            var result = tryCatch_1.tryCatch(this.project)(value, index);\n            if (result === errorObject_1.errorObject) {\n                destination.error(errorObject_1.errorObject.e);\n            }\n            else if (!this.scheduler) {\n                this.subscribeToProjection(result, value, index);\n            }\n            else {\n                var state = { subscriber: this, result: result, value: value, index: index };\n                this.add(this.scheduler.schedule(ExpandSubscriber.dispatch, 0, state));\n            }\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    ExpandSubscriber.prototype.subscribeToProjection = function (result, value, index) {\n        this.active++;\n        this.add(subscribeToResult_1.subscribeToResult(this, result, value, index));\n    };\n    ExpandSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.hasCompleted && this.active === 0) {\n            this.destination.complete();\n        }\n    };\n    ExpandSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this._next(innerValue);\n    };\n    ExpandSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer && buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        if (this.hasCompleted && this.active === 0) {\n            this.destination.complete();\n        }\n    };\n    return ExpandSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nexports.ExpandSubscriber = ExpandSubscriber;\n//# sourceMappingURL=expand.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar combineLatest_1 = require('../../observable/combineLatest');\nObservable_1.Observable.combineLatest = combineLatest_1.combineLatest;\n//# sourceMappingURL=combineLatest.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar find_1 = require('../../operator/find');\nObservable_1.Observable.prototype.find = find_1.find;\n//# sourceMappingURL=find.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will resubscribe to the source Observable for a maximum of `count` resubscriptions (given\n * as a number parameter) rather than propagating the `error` call.\n *\n * <img src=\"./img/retry.png\" width=\"100%\">\n *\n * Any and all items emitted by the source Observable will be emitted by the resulting Observable, even those emitted\n * during failed subscriptions. For example, if an Observable fails at first but emits [1, 2] then succeeds the second\n * time and emits: [1, 2, 3, 4, 5] then the complete stream of emissions and notifications\n * would be: [1, 2, 1, 2, 3, 4, 5, `complete`].\n * @param {number} count - Number of retry attempts before failing.\n * @return {Observable} The source Observable modified with the retry logic.\n * @method retry\n * @owner Observable\n */\nfunction retry(count) {\n    if (count === void 0) { count = -1; }\n    return function (source) { return source.lift(new RetryOperator(count, source)); };\n}\nexports.retry = retry;\nvar RetryOperator = (function () {\n    function RetryOperator(count, source) {\n        this.count = count;\n        this.source = source;\n    }\n    RetryOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new RetrySubscriber(subscriber, this.count, this.source));\n    };\n    return RetryOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar RetrySubscriber = (function (_super) {\n    __extends(RetrySubscriber, _super);\n    function RetrySubscriber(destination, count, source) {\n        _super.call(this, destination);\n        this.count = count;\n        this.source = source;\n    }\n    RetrySubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _a = this, source = _a.source, count = _a.count;\n            if (count === 0) {\n                return _super.prototype.error.call(this, err);\n            }\n            else if (count > -1) {\n                this.count = count - 1;\n            }\n            source.subscribe(this._unsubscribeAndRecycle());\n        }\n    };\n    return RetrySubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=retry.js.map","import { fromEvent, Observable } from 'rxjs';\nexport var ERR_CORDOVA_NOT_AVAILABLE = { error: 'cordova_not_available' };\nexport var ERR_PLUGIN_NOT_INSTALLED = { error: 'plugin_not_installed' };\nexport function getPromise(callback) {\n    var tryNativePromise = function () {\n        if (Promise) {\n            return new Promise(function (resolve, reject) {\n                callback(resolve, reject);\n            });\n        }\n        else {\n            console.error('No Promise support or polyfill found. To enable Ionic Native support, please add the es6-promise polyfill before this script, or run with a library like Angular or on a recent browser.');\n        }\n    };\n    if (typeof window !== 'undefined' && window.angular) {\n        var doc = window.document;\n        var injector = window.angular.element(doc.querySelector('[ng-app]') || doc.body).injector();\n        if (injector) {\n            var $q = injector.get('$q');\n            return $q(function (resolve, reject) {\n                callback(resolve, reject);\n            });\n        }\n        console.warn(\"Angular 1 was detected but $q couldn't be retrieved. This is usually when the app is not bootstrapped on the html or body tag. Falling back to native promises which won't trigger an automatic digest when promises resolve.\");\n    }\n    return tryNativePromise();\n}\nexport function wrapPromise(pluginObj, methodName, args, opts) {\n    if (opts === void 0) { opts = {}; }\n    var pluginResult, rej;\n    var p = getPromise(function (resolve, reject) {\n        if (opts.destruct) {\n            pluginResult = callCordovaPlugin(pluginObj, methodName, args, opts, function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                return resolve(args);\n            }, function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                return reject(args);\n            });\n        }\n        else {\n            pluginResult = callCordovaPlugin(pluginObj, methodName, args, opts, resolve, reject);\n        }\n        rej = reject;\n    });\n    // Angular throws an error on unhandled rejection, but in this case we have already printed\n    // a warning that Cordova is undefined or the plugin is uninstalled, so there is no reason\n    // to error\n    if (pluginResult && pluginResult.error) {\n        p.catch(function () { });\n        typeof rej === 'function' && rej(pluginResult.error);\n    }\n    return p;\n}\nfunction wrapOtherPromise(pluginObj, methodName, args, opts) {\n    if (opts === void 0) { opts = {}; }\n    return getPromise(function (resolve, reject) {\n        var pluginResult = callCordovaPlugin(pluginObj, methodName, args, opts);\n        if (pluginResult) {\n            if (pluginResult.error) {\n                reject(pluginResult.error);\n            }\n            else if (pluginResult.then) {\n                pluginResult.then(resolve).catch(reject);\n            }\n        }\n        else {\n            reject({ error: 'unexpected_error' });\n        }\n    });\n}\nfunction wrapObservable(pluginObj, methodName, args, opts) {\n    if (opts === void 0) { opts = {}; }\n    return new Observable(function (observer) {\n        var pluginResult;\n        if (opts.destruct) {\n            pluginResult = callCordovaPlugin(pluginObj, methodName, args, opts, function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                return observer.next(args);\n            }, function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                return observer.error(args);\n            });\n        }\n        else {\n            pluginResult = callCordovaPlugin(pluginObj, methodName, args, opts, observer.next.bind(observer), observer.error.bind(observer));\n        }\n        if (pluginResult && pluginResult.error) {\n            observer.error(pluginResult.error);\n            observer.complete();\n        }\n        return function () {\n            try {\n                if (opts.clearFunction) {\n                    if (opts.clearWithArgs) {\n                        return callCordovaPlugin(pluginObj, opts.clearFunction, args, opts, observer.next.bind(observer), observer.error.bind(observer));\n                    }\n                    return callCordovaPlugin(pluginObj, opts.clearFunction, []);\n                }\n            }\n            catch (e) {\n                console.warn('Unable to clear the previous observable watch for', pluginObj.constructor.getPluginName(), methodName);\n                console.warn(e);\n            }\n        };\n    });\n}\n/**\n * Wrap the event with an observable\n * @private\n * @param event event name\n * @param element The element to attach the event listener to\n * @returns {Observable}\n */\nfunction wrapEventObservable(event, element) {\n    element =\n        typeof window !== 'undefined' && element\n            ? get(window, element)\n            : element || (typeof window !== 'undefined' ? window : {});\n    return fromEvent(element, event);\n}\nexport function checkAvailability(plugin, methodName, pluginName) {\n    var pluginRef, pluginInstance, pluginPackage;\n    if (typeof plugin === 'string') {\n        pluginRef = plugin;\n    }\n    else {\n        pluginRef = plugin.constructor.getPluginRef();\n        pluginName = plugin.constructor.getPluginName();\n        pluginPackage = plugin.constructor.getPluginInstallName();\n    }\n    pluginInstance = getPlugin(pluginRef);\n    if (!pluginInstance || (!!methodName && typeof pluginInstance[methodName] === 'undefined')) {\n        if (typeof window === 'undefined' || !window.cordova) {\n            cordovaWarn(pluginName, methodName);\n            return ERR_CORDOVA_NOT_AVAILABLE;\n        }\n        pluginWarn(pluginName, pluginPackage, methodName);\n        return ERR_PLUGIN_NOT_INSTALLED;\n    }\n    return true;\n}\n/**\n * Checks if _objectInstance exists and has the method/property\n * @private\n */\nexport function instanceAvailability(pluginObj, methodName) {\n    return pluginObj._objectInstance && (!methodName || typeof pluginObj._objectInstance[methodName] !== 'undefined');\n}\nexport function setIndex(args, opts, resolve, reject) {\n    if (opts === void 0) { opts = {}; }\n    // ignore resolve and reject in case sync\n    if (opts.sync) {\n        return args;\n    }\n    // If the plugin method expects myMethod(success, err, options)\n    if (opts.callbackOrder === 'reverse') {\n        // Get those arguments in the order [resolve, reject, ...restOfArgs]\n        args.unshift(reject);\n        args.unshift(resolve);\n    }\n    else if (opts.callbackStyle === 'node') {\n        args.push(function (err, result) {\n            if (err) {\n                reject(err);\n            }\n            else {\n                resolve(result);\n            }\n        });\n    }\n    else if (opts.callbackStyle === 'object' && opts.successName && opts.errorName) {\n        var obj = {};\n        obj[opts.successName] = resolve;\n        obj[opts.errorName] = reject;\n        args.push(obj);\n    }\n    else if (typeof opts.successIndex !== 'undefined' || typeof opts.errorIndex !== 'undefined') {\n        var setSuccessIndex = function () {\n            // If we've specified a success/error index\n            if (opts.successIndex > args.length) {\n                args[opts.successIndex] = resolve;\n            }\n            else {\n                args.splice(opts.successIndex, 0, resolve);\n            }\n        };\n        var setErrorIndex = function () {\n            // We don't want that the reject cb gets spliced into the position of an optional argument that has not been\n            // defined and thus causing non expected behavior.\n            if (opts.errorIndex > args.length) {\n                args[opts.errorIndex] = reject; // insert the reject fn at the correct specific index\n            }\n            else {\n                args.splice(opts.errorIndex, 0, reject); // otherwise just splice it into the array\n            }\n        };\n        if (opts.successIndex > opts.errorIndex) {\n            setErrorIndex();\n            setSuccessIndex();\n        }\n        else {\n            setSuccessIndex();\n            setErrorIndex();\n        }\n    }\n    else {\n        // Otherwise, let's tack them on to the end of the argument list\n        // which is 90% of cases\n        args.push(resolve);\n        args.push(reject);\n    }\n    return args;\n}\nexport function callCordovaPlugin(pluginObj, methodName, args, opts, resolve, reject) {\n    if (opts === void 0) { opts = {}; }\n    // Try to figure out where the success/error callbacks need to be bound\n    // to our promise resolve/reject handlers.\n    args = setIndex(args, opts, resolve, reject);\n    var availabilityCheck = checkAvailability(pluginObj, methodName);\n    if (availabilityCheck === true) {\n        var pluginInstance = getPlugin(pluginObj.constructor.getPluginRef());\n        return pluginInstance[methodName].apply(pluginInstance, args);\n    }\n    else {\n        return availabilityCheck;\n    }\n}\nexport function callInstance(pluginObj, methodName, args, opts, resolve, reject) {\n    if (opts === void 0) { opts = {}; }\n    args = setIndex(args, opts, resolve, reject);\n    if (instanceAvailability(pluginObj, methodName)) {\n        return pluginObj._objectInstance[methodName].apply(pluginObj._objectInstance, args);\n    }\n}\nexport function getPlugin(pluginRef) {\n    if (typeof window !== 'undefined') {\n        return get(window, pluginRef);\n    }\n    return null;\n}\nexport function get(element, path) {\n    var paths = path.split('.');\n    var obj = element;\n    for (var i = 0; i < paths.length; i++) {\n        if (!obj) {\n            return null;\n        }\n        obj = obj[paths[i]];\n    }\n    return obj;\n}\nexport function pluginWarn(pluginName, plugin, method) {\n    if (method) {\n        console.warn('Native: tried calling ' + pluginName + '.' + method + ', but the ' + pluginName + ' plugin is not installed.');\n    }\n    else {\n        console.warn(\"Native: tried accessing the \" + pluginName + \" plugin but it's not installed.\");\n    }\n    if (plugin) {\n        console.warn(\"Install the \" + pluginName + \" plugin: 'ionic cordova plugin add \" + plugin + \"'\");\n    }\n}\n/**\n * @private\n * @param pluginName\n * @param method\n */\nexport function cordovaWarn(pluginName, method) {\n    if (typeof process === 'undefined') {\n        if (method) {\n            console.warn('Native: tried calling ' +\n                pluginName +\n                '.' +\n                method +\n                ', but Cordova is not available. Make sure to include cordova.js or run in a device/simulator');\n        }\n        else {\n            console.warn('Native: tried accessing the ' +\n                pluginName +\n                ' plugin but Cordova is not available. Make sure to include cordova.js or run in a device/simulator');\n        }\n    }\n}\n/**\n * @private\n */\nexport var wrap = function (pluginObj, methodName, opts) {\n    if (opts === void 0) { opts = {}; }\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (opts.sync) {\n            // Sync doesn't wrap the plugin with a promise or observable, it returns the result as-is\n            return callCordovaPlugin(pluginObj, methodName, args, opts);\n        }\n        else if (opts.observable) {\n            return wrapObservable(pluginObj, methodName, args, opts);\n        }\n        else if (opts.eventObservable && opts.event) {\n            return wrapEventObservable(opts.event, opts.element);\n        }\n        else if (opts.otherPromise) {\n            return wrapOtherPromise(pluginObj, methodName, args, opts);\n        }\n        else {\n            return wrapPromise(pluginObj, methodName, args, opts);\n        }\n    };\n};\n/**\n * @private\n */\nexport function wrapInstance(pluginObj, methodName, opts) {\n    if (opts === void 0) { opts = {}; }\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (opts.sync) {\n            return callInstance(pluginObj, methodName, args, opts);\n        }\n        else if (opts.observable) {\n            return new Observable(function (observer) {\n                var pluginResult;\n                if (opts.destruct) {\n                    pluginResult = callInstance(pluginObj, methodName, args, opts, function () {\n                        var args = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            args[_i] = arguments[_i];\n                        }\n                        return observer.next(args);\n                    }, function () {\n                        var args = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            args[_i] = arguments[_i];\n                        }\n                        return observer.error(args);\n                    });\n                }\n                else {\n                    pluginResult = callInstance(pluginObj, methodName, args, opts, observer.next.bind(observer), observer.error.bind(observer));\n                }\n                if (pluginResult && pluginResult.error) {\n                    observer.error(pluginResult.error);\n                }\n                return function () {\n                    try {\n                        if (opts.clearWithArgs) {\n                            return callInstance(pluginObj, opts.clearFunction, args, opts, observer.next.bind(observer), observer.error.bind(observer));\n                        }\n                        return callInstance(pluginObj, opts.clearFunction, []);\n                    }\n                    catch (e) {\n                        console.warn('Unable to clear the previous observable watch for', pluginObj.constructor.getPluginName(), methodName);\n                        console.warn(e);\n                    }\n                };\n            });\n        }\n        else if (opts.otherPromise) {\n            return getPromise(function (resolve, reject) {\n                var result;\n                if (opts.destruct) {\n                    result = callInstance(pluginObj, methodName, args, opts, function () {\n                        var args = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            args[_i] = arguments[_i];\n                        }\n                        return resolve(args);\n                    }, function () {\n                        var args = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            args[_i] = arguments[_i];\n                        }\n                        return reject(args);\n                    });\n                }\n                else {\n                    result = callInstance(pluginObj, methodName, args, opts, resolve, reject);\n                }\n                if (result && result.then) {\n                    result.then(resolve, reject);\n                }\n                else {\n                    reject();\n                }\n            });\n        }\n        else {\n            var pluginResult_1, rej_1;\n            var p = getPromise(function (resolve, reject) {\n                if (opts.destruct) {\n                    pluginResult_1 = callInstance(pluginObj, methodName, args, opts, function () {\n                        var args = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            args[_i] = arguments[_i];\n                        }\n                        return resolve(args);\n                    }, function () {\n                        var args = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            args[_i] = arguments[_i];\n                        }\n                        return reject(args);\n                    });\n                }\n                else {\n                    pluginResult_1 = callInstance(pluginObj, methodName, args, opts, resolve, reject);\n                }\n                rej_1 = reject;\n            });\n            // Angular throws an error on unhandled rejection, but in this case we have already printed\n            // a warning that Cordova is undefined or the plugin is uninstalled, so there is no reason\n            // to error\n            if (pluginResult_1 && pluginResult_1.error) {\n                p.catch(function () { });\n                typeof rej_1 === 'function' && rej_1(pluginResult_1.error);\n            }\n            return p;\n        }\n    };\n}\n//# sourceMappingURL=common.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar bufferToggle_1 = require('../../operator/bufferToggle');\nObservable_1.Observable.prototype.bufferToggle = bufferToggle_1.bufferToggle;\n//# sourceMappingURL=bufferToggle.js.map","\"use strict\";\nvar retry_1 = require('../operators/retry');\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will resubscribe to the source Observable for a maximum of `count` resubscriptions (given\n * as a number parameter) rather than propagating the `error` call.\n *\n * <img src=\"./img/retry.png\" width=\"100%\">\n *\n * Any and all items emitted by the source Observable will be emitted by the resulting Observable, even those emitted\n * during failed subscriptions. For example, if an Observable fails at first but emits [1, 2] then succeeds the second\n * time and emits: [1, 2, 3, 4, 5] then the complete stream of emissions and notifications\n * would be: [1, 2, 1, 2, 3, 4, 5, `complete`].\n * @param {number} count - Number of retry attempts before failing.\n * @return {Observable} The source Observable modified with the retry logic.\n * @method retry\n * @owner Observable\n */\nfunction retry(count) {\n    if (count === void 0) { count = -1; }\n    return retry_1.retry(count)(this);\n}\nexports.retry = retry;\n//# sourceMappingURL=retry.js.map","\"use strict\";\nvar sequenceEqual_1 = require('../operators/sequenceEqual');\n/**\n * Compares all values of two observables in sequence using an optional comparor function\n * and returns an observable of a single boolean value representing whether or not the two sequences\n * are equal.\n *\n * <span class=\"informal\">Checks to see of all values emitted by both observables are equal, in order.</span>\n *\n * <img src=\"./img/sequenceEqual.png\" width=\"100%\">\n *\n * `sequenceEqual` subscribes to two observables and buffers incoming values from each observable. Whenever either\n * observable emits a value, the value is buffered and the buffers are shifted and compared from the bottom\n * up; If any value pair doesn't match, the returned observable will emit `false` and complete. If one of the\n * observables completes, the operator will wait for the other observable to complete; If the other\n * observable emits before completing, the returned observable will emit `false` and complete. If one observable never\n * completes or emits after the other complets, the returned observable will never complete.\n *\n * @example <caption>figure out if the Konami code matches</caption>\n * var code = Rx.Observable.from([\n *  \"ArrowUp\",\n *  \"ArrowUp\",\n *  \"ArrowDown\",\n *  \"ArrowDown\",\n *  \"ArrowLeft\",\n *  \"ArrowRight\",\n *  \"ArrowLeft\",\n *  \"ArrowRight\",\n *  \"KeyB\",\n *  \"KeyA\",\n *  \"Enter\" // no start key, clearly.\n * ]);\n *\n * var keys = Rx.Observable.fromEvent(document, 'keyup')\n *  .map(e => e.code);\n * var matches = keys.bufferCount(11, 1)\n *  .mergeMap(\n *    last11 =>\n *      Rx.Observable.from(last11)\n *        .sequenceEqual(code)\n *   );\n * matches.subscribe(matched => console.log('Successful cheat at Contra? ', matched));\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n * @see {@link withLatestFrom}\n *\n * @param {Observable} compareTo The observable sequence to compare the source sequence to.\n * @param {function} [comparor] An optional function to compare each value pair\n * @return {Observable} An Observable of a single boolean value representing whether or not\n * the values emitted by both observables were equal in sequence.\n * @method sequenceEqual\n * @owner Observable\n */\nfunction sequenceEqual(compareTo, comparor) {\n    return sequenceEqual_1.sequenceEqual(compareTo, comparor)(this);\n}\nexports.sequenceEqual = sequenceEqual;\n//# sourceMappingURL=sequenceEqual.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar fromPromise_1 = require('../../observable/fromPromise');\nObservable_1.Observable.fromPromise = fromPromise_1.fromPromise;\n//# sourceMappingURL=fromPromise.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar findIndex_1 = require('../../operator/findIndex');\nObservable_1.Observable.prototype.findIndex = findIndex_1.findIndex;\n//# sourceMappingURL=findIndex.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar pluck_1 = require('../../operator/pluck');\nObservable_1.Observable.prototype.pluck = pluck_1.pluck;\n//# sourceMappingURL=pluck.js.map","\"use strict\";\nvar async_1 = require('../scheduler/async');\nvar timeout_1 = require('../operators/timeout');\n/**\n *\n * Errors if Observable does not emit a value in given time span.\n *\n * <span class=\"informal\">Timeouts on Observable that doesn't emit values fast enough.</span>\n *\n * <img src=\"./img/timeout.png\" width=\"100%\">\n *\n * `timeout` operator accepts as an argument either a number or a Date.\n *\n * If number was provided, it returns an Observable that behaves like a source\n * Observable, unless there is a period of time where there is no value emitted.\n * So if you provide `100` as argument and first value comes after 50ms from\n * the moment of subscription, this value will be simply re-emitted by the resulting\n * Observable. If however after that 100ms passes without a second value being emitted,\n * stream will end with an error and source Observable will be unsubscribed.\n * These checks are performed throughout whole lifecycle of Observable - from the moment\n * it was subscribed to, until it completes or errors itself. Thus every value must be\n * emitted within specified period since previous value.\n *\n * If provided argument was Date, returned Observable behaves differently. It throws\n * if Observable did not complete before provided Date. This means that periods between\n * emission of particular values do not matter in this case. If Observable did not complete\n * before provided Date, source Observable will be unsubscribed. Other than that, resulting\n * stream behaves just as source Observable.\n *\n * `timeout` accepts also a Scheduler as a second parameter. It is used to schedule moment (or moments)\n * when returned Observable will check if source stream emitted value or completed.\n *\n * @example <caption>Check if ticks are emitted within certain timespan</caption>\n * const seconds = Rx.Observable.interval(1000);\n *\n * seconds.timeout(1100) // Let's use bigger timespan to be safe,\n *                       // since `interval` might fire a bit later then scheduled.\n * .subscribe(\n *     value => console.log(value), // Will emit numbers just as regular `interval` would.\n *     err => console.log(err) // Will never be called.\n * );\n *\n * seconds.timeout(900).subscribe(\n *     value => console.log(value), // Will never be called.\n *     err => console.log(err) // Will emit error before even first value is emitted,\n *                             // since it did not arrive within 900ms period.\n * );\n *\n * @example <caption>Use Date to check if Observable completed</caption>\n * const seconds = Rx.Observable.interval(1000);\n *\n * seconds.timeout(new Date(\"December 17, 2020 03:24:00\"))\n * .subscribe(\n *     value => console.log(value), // Will emit values as regular `interval` would\n *                                  // until December 17, 2020 at 03:24:00.\n *     err => console.log(err) // On December 17, 2020 at 03:24:00 it will emit an error,\n *                             // since Observable did not complete by then.\n * );\n *\n * @see {@link timeoutWith}\n *\n * @param {number|Date} due Number specifying period within which Observable must emit values\n *                          or Date specifying before when Observable should complete\n * @param {Scheduler} [scheduler] Scheduler controlling when timeout checks occur.\n * @return {Observable<T>} Observable that mirrors behaviour of source, unless timeout checks fail.\n * @method timeout\n * @owner Observable\n */\nfunction timeout(due, scheduler) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    return timeout_1.timeout(due, scheduler)(this);\n}\nexports.timeout = timeout;\n//# sourceMappingURL=timeout.js.map","\"use strict\";\nvar EmptyObservable_1 = require('./EmptyObservable');\nexports.empty = EmptyObservable_1.EmptyObservable.create;\n//# sourceMappingURL=empty.js.map","\"use strict\";\nvar combineAll_1 = require('../operators/combineAll');\n/**\n * Converts a higher-order Observable into a first-order Observable by waiting\n * for the outer Observable to complete, then applying {@link combineLatest}.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by applying\n * {@link combineLatest} when the Observable-of-Observables completes.</span>\n *\n * <img src=\"./img/combineAll.png\" width=\"100%\">\n *\n * Takes an Observable of Observables, and collects all Observables from it.\n * Once the outer Observable completes, it subscribes to all collected\n * Observables and combines their values using the {@link combineLatest}\n * strategy, such that:\n * - Every time an inner Observable emits, the output Observable emits.\n * - When the returned observable emits, it emits all of the latest values by:\n *   - If a `project` function is provided, it is called with each recent value\n *     from each inner Observable in whatever order they arrived, and the result\n *     of the `project` function is what is emitted by the output Observable.\n *   - If there is no `project` function, an array of all of the most recent\n *     values is emitted by the output Observable.\n *\n * @example <caption>Map two click events to a finite interval Observable, then apply combineAll</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map(ev =>\n *   Rx.Observable.interval(Math.random()*2000).take(3)\n * ).take(2);\n * var result = higherOrder.combineAll();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineLatest}\n * @see {@link mergeAll}\n *\n * @param {function} [project] An optional function to map the most recent\n * values from each inner Observable into a new result. Takes each of the most\n * recent values from each collected inner Observable as arguments, in order.\n * @return {Observable} An Observable of projected results or arrays of recent\n * values.\n * @method combineAll\n * @owner Observable\n */\nfunction combineAll(project) {\n    return combineAll_1.combineAll(project)(this);\n}\nexports.combineAll = combineAll;\n//# sourceMappingURL=combineAll.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar finally_1 = require('../../operator/finally');\nObservable_1.Observable.prototype.finally = finally_1._finally;\nObservable_1.Observable.prototype._finally = finally_1._finally;\n//# sourceMappingURL=finally.js.map","\"use strict\";\nvar ForkJoinObservable_1 = require('./ForkJoinObservable');\nexports.forkJoin = ForkJoinObservable_1.ForkJoinObservable.create;\n//# sourceMappingURL=forkJoin.js.map","\"use strict\";\nvar merge_1 = require('../observable/merge');\nvar merge_2 = require('../observable/merge');\nexports.mergeStatic = merge_2.merge;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * <img src=\"./img/merge.png\" width=\"100%\">\n *\n * `merge` subscribes to each given input Observable (either the source or an\n * Observable given as argument), and simply forwards (without doing any\n * transformation) all the values from all the input Observables to the output\n * Observable. The output Observable only completes once all input Observables\n * have completed. Any error delivered by an input Observable will be immediately\n * emitted on the output Observable.\n *\n * @example <caption>Merge together two Observables: 1s interval and clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var clicksOrTimer = clicks.merge(timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var concurrent = 2; // the argument\n * var merged = timer1.merge(timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {ObservableInput} other An input Observable to merge with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for managing\n * concurrency of input Observables.\n * @return {Observable} An Observable that emits items that are the result of\n * every input Observable.\n * @method merge\n * @owner Observable\n */\nfunction merge() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    return function (source) { return source.lift.call(merge_1.merge.apply(void 0, [source].concat(observables))); };\n}\nexports.merge = merge;\n//# sourceMappingURL=merge.js.map","/**\n * @private\n */\nexport function get(element, path) {\n    var paths = path.split('.');\n    var obj = element;\n    for (var i = 0; i < paths.length; i++) {\n        if (!obj) {\n            return null;\n        }\n        obj = obj[paths[i]];\n    }\n    return obj;\n}\n/**\n * @private\n */\nexport function getPromise(callback) {\n    if (callback === void 0) { callback = function () { }; }\n    var tryNativePromise = function () {\n        if (typeof Promise === 'function' || (typeof window !== 'undefined' && window.Promise)) {\n            return new Promise(function (resolve, reject) {\n                callback(resolve, reject);\n            });\n        }\n        else {\n            console.error('No Promise support or polyfill found. To enable Ionic Native support, please add the es6-promise polyfill before this script, or run with a library like Angular or on a recent browser.');\n        }\n    };\n    return tryNativePromise();\n}\n//# sourceMappingURL=util.js.map","import { checkAvailability } from './decorators/common';\nimport { get } from './util';\nvar IonicNativePlugin = /** @class */ (function () {\n    function IonicNativePlugin() {\n    }\n    /**\n     * Returns a boolean that indicates whether the plugin is installed\n     * @return {boolean}\n     */\n    IonicNativePlugin.installed = function () {\n        var isAvailable = checkAvailability(this.pluginRef) === true;\n        return isAvailable;\n    };\n    /**\n     * Returns the original plugin object\n     */\n    IonicNativePlugin.getPlugin = function () {\n        if (typeof window !== 'undefined') {\n            return get(window, this.pluginRef);\n        }\n        return null;\n    };\n    /**\n     * Returns the plugin's name\n     */\n    IonicNativePlugin.getPluginName = function () {\n        var pluginName = this.pluginName;\n        return pluginName;\n    };\n    /**\n     * Returns the plugin's reference\n     */\n    IonicNativePlugin.getPluginRef = function () {\n        var pluginRef = this.pluginRef;\n        return pluginRef;\n    };\n    /**\n     * Returns the plugin's install name\n     */\n    IonicNativePlugin.getPluginInstallName = function () {\n        var plugin = this.plugin;\n        return plugin;\n    };\n    /**\n     * Returns the plugin's supported platforms\n     */\n    IonicNativePlugin.getSupportedPlatforms = function () {\n        var platform = this.platforms;\n        return platform;\n    };\n    IonicNativePlugin.pluginName = '';\n    IonicNativePlugin.pluginRef = '';\n    IonicNativePlugin.plugin = '';\n    IonicNativePlugin.repo = '';\n    IonicNativePlugin.platforms = [];\n    IonicNativePlugin.install = '';\n    return IonicNativePlugin;\n}());\nexport { IonicNativePlugin };\n//# sourceMappingURL=ionic-native-plugin.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar debounce_1 = require('../../operator/debounce');\nObservable_1.Observable.prototype.debounce = debounce_1.debounce;\n//# sourceMappingURL=debounce.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar EmptyError_1 = require('../util/EmptyError');\n/**\n * Returns an Observable that emits the single item emitted by the source Observable that matches a specified\n * predicate, if that Observable emits one such item. If the source Observable emits more than one such item or no\n * such items, notify of an IllegalArgumentException or NoSuchElementException respectively.\n *\n * <img src=\"./img/single.png\" width=\"100%\">\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {Function} predicate - A predicate function to evaluate items emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits the single item emitted by the source Observable that matches\n * the predicate.\n .\n * @method single\n * @owner Observable\n */\nfunction single(predicate) {\n    return function (source) { return source.lift(new SingleOperator(predicate, source)); };\n}\nexports.single = single;\nvar SingleOperator = (function () {\n    function SingleOperator(predicate, source) {\n        this.predicate = predicate;\n        this.source = source;\n    }\n    SingleOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SingleSubscriber(subscriber, this.predicate, this.source));\n    };\n    return SingleOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SingleSubscriber = (function (_super) {\n    __extends(SingleSubscriber, _super);\n    function SingleSubscriber(destination, predicate, source) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.source = source;\n        this.seenValue = false;\n        this.index = 0;\n    }\n    SingleSubscriber.prototype.applySingleValue = function (value) {\n        if (this.seenValue) {\n            this.destination.error('Sequence contains more than one element');\n        }\n        else {\n            this.seenValue = true;\n            this.singleValue = value;\n        }\n    };\n    SingleSubscriber.prototype._next = function (value) {\n        var index = this.index++;\n        if (this.predicate) {\n            this.tryNext(value, index);\n        }\n        else {\n            this.applySingleValue(value);\n        }\n    };\n    SingleSubscriber.prototype.tryNext = function (value, index) {\n        try {\n            if (this.predicate(value, index, this.source)) {\n                this.applySingleValue(value);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    SingleSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        if (this.index > 0) {\n            destination.next(this.seenValue ? this.singleValue : undefined);\n            destination.complete();\n        }\n        else {\n            destination.error(new EmptyError_1.EmptyError);\n        }\n    };\n    return SingleSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=single.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar switchMap_1 = require('../../operator/switchMap');\nObservable_1.Observable.prototype.switchMap = switchMap_1.switchMap;\n//# sourceMappingURL=switchMap.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar startWith_1 = require('../../operator/startWith');\nObservable_1.Observable.prototype.startWith = startWith_1.startWith;\n//# sourceMappingURL=startWith.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar noop_1 = require('../util/noop');\n/**\n * Ignores all items emitted by the source Observable and only passes calls of `complete` or `error`.\n *\n * <img src=\"./img/ignoreElements.png\" width=\"100%\">\n *\n * @return {Observable} An empty Observable that only calls `complete`\n * or `error`, based on which one is called by the source Observable.\n * @method ignoreElements\n * @owner Observable\n */\nfunction ignoreElements() {\n    return function ignoreElementsOperatorFunction(source) {\n        return source.lift(new IgnoreElementsOperator());\n    };\n}\nexports.ignoreElements = ignoreElements;\nvar IgnoreElementsOperator = (function () {\n    function IgnoreElementsOperator() {\n    }\n    IgnoreElementsOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new IgnoreElementsSubscriber(subscriber));\n    };\n    return IgnoreElementsOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar IgnoreElementsSubscriber = (function (_super) {\n    __extends(IgnoreElementsSubscriber, _super);\n    function IgnoreElementsSubscriber() {\n        _super.apply(this, arguments);\n    }\n    IgnoreElementsSubscriber.prototype._next = function (unused) {\n        noop_1.noop();\n    };\n    return IgnoreElementsSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=ignoreElements.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar skipWhile_1 = require('../../operator/skipWhile');\nObservable_1.Observable.prototype.skipWhile = skipWhile_1.skipWhile;\n//# sourceMappingURL=skipWhile.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = require('../Subject');\nvar Subscription_1 = require('../Subscription');\nvar tryCatch_1 = require('../util/tryCatch');\nvar errorObject_1 = require('../util/errorObject');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Branch out the source Observable values as a nested Observable starting from\n * an emission from `openings` and ending when the output of `closingSelector`\n * emits.\n *\n * <span class=\"informal\">It's like {@link bufferToggle}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowToggle.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows that contain those items\n * emitted by the source Observable between the time when the `openings`\n * Observable emits an item and when the Observable returned by\n * `closingSelector` emits an item.\n *\n * @example <caption>Every other second, emit the click events from the next 500ms</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var openings = Rx.Observable.interval(1000);\n * var result = clicks.windowToggle(openings, i =>\n *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()\n * ).mergeAll();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowWhen}\n * @see {@link bufferToggle}\n *\n * @param {Observable<O>} openings An observable of notifications to start new\n * windows.\n * @param {function(value: O): Observable} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns an Observable,\n * which, when it emits (either `next` or `complete`), signals that the\n * associated window should complete.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowToggle\n * @owner Observable\n */\nfunction windowToggle(openings, closingSelector) {\n    return function (source) { return source.lift(new WindowToggleOperator(openings, closingSelector)); };\n}\nexports.windowToggle = windowToggle;\nvar WindowToggleOperator = (function () {\n    function WindowToggleOperator(openings, closingSelector) {\n        this.openings = openings;\n        this.closingSelector = closingSelector;\n    }\n    WindowToggleOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new WindowToggleSubscriber(subscriber, this.openings, this.closingSelector));\n    };\n    return WindowToggleOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WindowToggleSubscriber = (function (_super) {\n    __extends(WindowToggleSubscriber, _super);\n    function WindowToggleSubscriber(destination, openings, closingSelector) {\n        _super.call(this, destination);\n        this.openings = openings;\n        this.closingSelector = closingSelector;\n        this.contexts = [];\n        this.add(this.openSubscription = subscribeToResult_1.subscribeToResult(this, openings, openings));\n    }\n    WindowToggleSubscriber.prototype._next = function (value) {\n        var contexts = this.contexts;\n        if (contexts) {\n            var len = contexts.length;\n            for (var i = 0; i < len; i++) {\n                contexts[i].window.next(value);\n            }\n        }\n    };\n    WindowToggleSubscriber.prototype._error = function (err) {\n        var contexts = this.contexts;\n        this.contexts = null;\n        if (contexts) {\n            var len = contexts.length;\n            var index = -1;\n            while (++index < len) {\n                var context = contexts[index];\n                context.window.error(err);\n                context.subscription.unsubscribe();\n            }\n        }\n        _super.prototype._error.call(this, err);\n    };\n    WindowToggleSubscriber.prototype._complete = function () {\n        var contexts = this.contexts;\n        this.contexts = null;\n        if (contexts) {\n            var len = contexts.length;\n            var index = -1;\n            while (++index < len) {\n                var context = contexts[index];\n                context.window.complete();\n                context.subscription.unsubscribe();\n            }\n        }\n        _super.prototype._complete.call(this);\n    };\n    /** @deprecated internal use only */ WindowToggleSubscriber.prototype._unsubscribe = function () {\n        var contexts = this.contexts;\n        this.contexts = null;\n        if (contexts) {\n            var len = contexts.length;\n            var index = -1;\n            while (++index < len) {\n                var context = contexts[index];\n                context.window.unsubscribe();\n                context.subscription.unsubscribe();\n            }\n        }\n    };\n    WindowToggleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (outerValue === this.openings) {\n            var closingSelector = this.closingSelector;\n            var closingNotifier = tryCatch_1.tryCatch(closingSelector)(innerValue);\n            if (closingNotifier === errorObject_1.errorObject) {\n                return this.error(errorObject_1.errorObject.e);\n            }\n            else {\n                var window_1 = new Subject_1.Subject();\n                var subscription = new Subscription_1.Subscription();\n                var context = { window: window_1, subscription: subscription };\n                this.contexts.push(context);\n                var innerSubscription = subscribeToResult_1.subscribeToResult(this, closingNotifier, context);\n                if (innerSubscription.closed) {\n                    this.closeWindow(this.contexts.length - 1);\n                }\n                else {\n                    innerSubscription.context = context;\n                    subscription.add(innerSubscription);\n                }\n                this.destination.next(window_1);\n            }\n        }\n        else {\n            this.closeWindow(this.contexts.indexOf(outerValue));\n        }\n    };\n    WindowToggleSubscriber.prototype.notifyError = function (err) {\n        this.error(err);\n    };\n    WindowToggleSubscriber.prototype.notifyComplete = function (inner) {\n        if (inner !== this.openSubscription) {\n            this.closeWindow(this.contexts.indexOf(inner.context));\n        }\n    };\n    WindowToggleSubscriber.prototype.closeWindow = function (index) {\n        if (index === -1) {\n            return;\n        }\n        var contexts = this.contexts;\n        var context = contexts[index];\n        var window = context.window, subscription = context.subscription;\n        contexts.splice(index, 1);\n        window.complete();\n        subscription.unsubscribe();\n    };\n    return WindowToggleSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=windowToggle.js.map","\"use strict\";\nvar isEmpty_1 = require('../operators/isEmpty');\n/**\n * If the source Observable is empty it returns an Observable that emits true, otherwise it emits false.\n *\n * <img src=\"./img/isEmpty.png\" width=\"100%\">\n *\n * @return {Observable} An Observable that emits a Boolean.\n * @method isEmpty\n * @owner Observable\n */\nfunction isEmpty() {\n    return isEmpty_1.isEmpty()(this);\n}\nexports.isEmpty = isEmpty;\n//# sourceMappingURL=isEmpty.js.map","\"use strict\";\n/* tslint:disable:no-unused-variable */\n// Subject imported before Observable to bypass circular dependency issue since\n// Subject extends Observable and Observable references Subject in it's\n// definition\nvar Subject_1 = require('./Subject');\nexports.Subject = Subject_1.Subject;\nexports.AnonymousSubject = Subject_1.AnonymousSubject;\n/* tslint:enable:no-unused-variable */\nvar Observable_1 = require('./Observable');\nexports.Observable = Observable_1.Observable;\n// statics\n/* tslint:disable:no-use-before-declare */\nrequire('./add/observable/bindCallback');\nrequire('./add/observable/bindNodeCallback');\nrequire('./add/observable/combineLatest');\nrequire('./add/observable/concat');\nrequire('./add/observable/defer');\nrequire('./add/observable/empty');\nrequire('./add/observable/forkJoin');\nrequire('./add/observable/from');\nrequire('./add/observable/fromEvent');\nrequire('./add/observable/fromEventPattern');\nrequire('./add/observable/fromPromise');\nrequire('./add/observable/generate');\nrequire('./add/observable/if');\nrequire('./add/observable/interval');\nrequire('./add/observable/merge');\nrequire('./add/observable/race');\nrequire('./add/observable/never');\nrequire('./add/observable/of');\nrequire('./add/observable/onErrorResumeNext');\nrequire('./add/observable/pairs');\nrequire('./add/observable/range');\nrequire('./add/observable/using');\nrequire('./add/observable/throw');\nrequire('./add/observable/timer');\nrequire('./add/observable/zip');\n//dom\nrequire('./add/observable/dom/ajax');\nrequire('./add/observable/dom/webSocket');\n//operators\nrequire('./add/operator/buffer');\nrequire('./add/operator/bufferCount');\nrequire('./add/operator/bufferTime');\nrequire('./add/operator/bufferToggle');\nrequire('./add/operator/bufferWhen');\nrequire('./add/operator/catch');\nrequire('./add/operator/combineAll');\nrequire('./add/operator/combineLatest');\nrequire('./add/operator/concat');\nrequire('./add/operator/concatAll');\nrequire('./add/operator/concatMap');\nrequire('./add/operator/concatMapTo');\nrequire('./add/operator/count');\nrequire('./add/operator/dematerialize');\nrequire('./add/operator/debounce');\nrequire('./add/operator/debounceTime');\nrequire('./add/operator/defaultIfEmpty');\nrequire('./add/operator/delay');\nrequire('./add/operator/delayWhen');\nrequire('./add/operator/distinct');\nrequire('./add/operator/distinctUntilChanged');\nrequire('./add/operator/distinctUntilKeyChanged');\nrequire('./add/operator/do');\nrequire('./add/operator/exhaust');\nrequire('./add/operator/exhaustMap');\nrequire('./add/operator/expand');\nrequire('./add/operator/elementAt');\nrequire('./add/operator/filter');\nrequire('./add/operator/finally');\nrequire('./add/operator/find');\nrequire('./add/operator/findIndex');\nrequire('./add/operator/first');\nrequire('./add/operator/groupBy');\nrequire('./add/operator/ignoreElements');\nrequire('./add/operator/isEmpty');\nrequire('./add/operator/audit');\nrequire('./add/operator/auditTime');\nrequire('./add/operator/last');\nrequire('./add/operator/let');\nrequire('./add/operator/every');\nrequire('./add/operator/map');\nrequire('./add/operator/mapTo');\nrequire('./add/operator/materialize');\nrequire('./add/operator/max');\nrequire('./add/operator/merge');\nrequire('./add/operator/mergeAll');\nrequire('./add/operator/mergeMap');\nrequire('./add/operator/mergeMapTo');\nrequire('./add/operator/mergeScan');\nrequire('./add/operator/min');\nrequire('./add/operator/multicast');\nrequire('./add/operator/observeOn');\nrequire('./add/operator/onErrorResumeNext');\nrequire('./add/operator/pairwise');\nrequire('./add/operator/partition');\nrequire('./add/operator/pluck');\nrequire('./add/operator/publish');\nrequire('./add/operator/publishBehavior');\nrequire('./add/operator/publishReplay');\nrequire('./add/operator/publishLast');\nrequire('./add/operator/race');\nrequire('./add/operator/reduce');\nrequire('./add/operator/repeat');\nrequire('./add/operator/repeatWhen');\nrequire('./add/operator/retry');\nrequire('./add/operator/retryWhen');\nrequire('./add/operator/sample');\nrequire('./add/operator/sampleTime');\nrequire('./add/operator/scan');\nrequire('./add/operator/sequenceEqual');\nrequire('./add/operator/share');\nrequire('./add/operator/shareReplay');\nrequire('./add/operator/single');\nrequire('./add/operator/skip');\nrequire('./add/operator/skipLast');\nrequire('./add/operator/skipUntil');\nrequire('./add/operator/skipWhile');\nrequire('./add/operator/startWith');\nrequire('./add/operator/subscribeOn');\nrequire('./add/operator/switch');\nrequire('./add/operator/switchMap');\nrequire('./add/operator/switchMapTo');\nrequire('./add/operator/take');\nrequire('./add/operator/takeLast');\nrequire('./add/operator/takeUntil');\nrequire('./add/operator/takeWhile');\nrequire('./add/operator/throttle');\nrequire('./add/operator/throttleTime');\nrequire('./add/operator/timeInterval');\nrequire('./add/operator/timeout');\nrequire('./add/operator/timeoutWith');\nrequire('./add/operator/timestamp');\nrequire('./add/operator/toArray');\nrequire('./add/operator/toPromise');\nrequire('./add/operator/window');\nrequire('./add/operator/windowCount');\nrequire('./add/operator/windowTime');\nrequire('./add/operator/windowToggle');\nrequire('./add/operator/windowWhen');\nrequire('./add/operator/withLatestFrom');\nrequire('./add/operator/zip');\nrequire('./add/operator/zipAll');\n/* tslint:disable:no-unused-variable */\nvar Subscription_1 = require('./Subscription');\nexports.Subscription = Subscription_1.Subscription;\nvar Subscriber_1 = require('./Subscriber');\nexports.Subscriber = Subscriber_1.Subscriber;\nvar AsyncSubject_1 = require('./AsyncSubject');\nexports.AsyncSubject = AsyncSubject_1.AsyncSubject;\nvar ReplaySubject_1 = require('./ReplaySubject');\nexports.ReplaySubject = ReplaySubject_1.ReplaySubject;\nvar BehaviorSubject_1 = require('./BehaviorSubject');\nexports.BehaviorSubject = BehaviorSubject_1.BehaviorSubject;\nvar ConnectableObservable_1 = require('./observable/ConnectableObservable');\nexports.ConnectableObservable = ConnectableObservable_1.ConnectableObservable;\nvar Notification_1 = require('./Notification');\nexports.Notification = Notification_1.Notification;\nvar EmptyError_1 = require('./util/EmptyError');\nexports.EmptyError = EmptyError_1.EmptyError;\nvar ArgumentOutOfRangeError_1 = require('./util/ArgumentOutOfRangeError');\nexports.ArgumentOutOfRangeError = ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;\nvar ObjectUnsubscribedError_1 = require('./util/ObjectUnsubscribedError');\nexports.ObjectUnsubscribedError = ObjectUnsubscribedError_1.ObjectUnsubscribedError;\nvar TimeoutError_1 = require('./util/TimeoutError');\nexports.TimeoutError = TimeoutError_1.TimeoutError;\nvar UnsubscriptionError_1 = require('./util/UnsubscriptionError');\nexports.UnsubscriptionError = UnsubscriptionError_1.UnsubscriptionError;\nvar timeInterval_1 = require('./operator/timeInterval');\nexports.TimeInterval = timeInterval_1.TimeInterval;\nvar timestamp_1 = require('./operators/timestamp');\nexports.Timestamp = timestamp_1.Timestamp;\nvar TestScheduler_1 = require('./testing/TestScheduler');\nexports.TestScheduler = TestScheduler_1.TestScheduler;\nvar VirtualTimeScheduler_1 = require('./scheduler/VirtualTimeScheduler');\nexports.VirtualTimeScheduler = VirtualTimeScheduler_1.VirtualTimeScheduler;\nvar AjaxObservable_1 = require('./observable/dom/AjaxObservable');\nexports.AjaxResponse = AjaxObservable_1.AjaxResponse;\nexports.AjaxError = AjaxObservable_1.AjaxError;\nexports.AjaxTimeoutError = AjaxObservable_1.AjaxTimeoutError;\nvar pipe_1 = require('./util/pipe');\nexports.pipe = pipe_1.pipe;\nvar asap_1 = require('./scheduler/asap');\nvar async_1 = require('./scheduler/async');\nvar queue_1 = require('./scheduler/queue');\nvar animationFrame_1 = require('./scheduler/animationFrame');\nvar rxSubscriber_1 = require('./symbol/rxSubscriber');\nvar iterator_1 = require('./symbol/iterator');\nvar observable_1 = require('./symbol/observable');\nvar _operators = require('./operators');\nexports.operators = _operators;\n/* tslint:enable:no-unused-variable */\n/**\n * @typedef {Object} Rx.Scheduler\n * @property {Scheduler} queue Schedules on a queue in the current event frame\n * (trampoline scheduler). Use this for iteration operations.\n * @property {Scheduler} asap Schedules on the micro task queue, which uses the\n * fastest transport mechanism available, either Node.js' `process.nextTick()`\n * or Web Worker MessageChannel or setTimeout or others. Use this for\n * asynchronous conversions.\n * @property {Scheduler} async Schedules work with `setInterval`. Use this for\n * time-based operations.\n * @property {Scheduler} animationFrame Schedules work with `requestAnimationFrame`.\n * Use this for synchronizing with the platform's painting\n */\nvar Scheduler = {\n    asap: asap_1.asap,\n    queue: queue_1.queue,\n    animationFrame: animationFrame_1.animationFrame,\n    async: async_1.async\n};\nexports.Scheduler = Scheduler;\n/**\n * @typedef {Object} Rx.Symbol\n * @property {Symbol|string} rxSubscriber A symbol to use as a property name to\n * retrieve an \"Rx safe\" Observer from an object. \"Rx safety\" can be defined as\n * an object that has all of the traits of an Rx Subscriber, including the\n * ability to add and remove subscriptions to the subscription chain and\n * guarantees involving event triggering (can't \"next\" after unsubscription,\n * etc).\n * @property {Symbol|string} observable A symbol to use as a property name to\n * retrieve an Observable as defined by the [ECMAScript \"Observable\" spec](https://github.com/zenparsing/es-observable).\n * @property {Symbol|string} iterator The ES6 symbol to use as a property name\n * to retrieve an iterator from an object.\n */\nvar Symbol = {\n    rxSubscriber: rxSubscriber_1.rxSubscriber,\n    observable: observable_1.observable,\n    iterator: iterator_1.iterator\n};\nexports.Symbol = Symbol;\n//# sourceMappingURL=Rx.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar scan_1 = require('../../operator/scan');\nObservable_1.Observable.prototype.scan = scan_1.scan;\n//# sourceMappingURL=scan.js.map","\"use strict\";\nvar isArray_1 = require('./util/isArray');\nvar isObject_1 = require('./util/isObject');\nvar isFunction_1 = require('./util/isFunction');\nvar tryCatch_1 = require('./util/tryCatch');\nvar errorObject_1 = require('./util/errorObject');\nvar UnsubscriptionError_1 = require('./util/UnsubscriptionError');\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nvar Subscription = (function () {\n    /**\n     * @param {function(): void} [unsubscribe] A function describing how to\n     * perform the disposal of resources when the `unsubscribe` method is called.\n     */\n    function Subscription(unsubscribe) {\n        /**\n         * A flag to indicate whether this Subscription has already been unsubscribed.\n         * @type {boolean}\n         */\n        this.closed = false;\n        this._parent = null;\n        this._parents = null;\n        this._subscriptions = null;\n        if (unsubscribe) {\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    /**\n     * Disposes the resources held by the subscription. May, for instance, cancel\n     * an ongoing Observable execution or cancel any other type of work that\n     * started when the Subscription was created.\n     * @return {void}\n     */\n    Subscription.prototype.unsubscribe = function () {\n        var hasErrors = false;\n        var errors;\n        if (this.closed) {\n            return;\n        }\n        var _a = this, _parent = _a._parent, _parents = _a._parents, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n        this.closed = true;\n        this._parent = null;\n        this._parents = null;\n        // null out _subscriptions first so any child subscriptions that attempt\n        // to remove themselves from this subscription will noop\n        this._subscriptions = null;\n        var index = -1;\n        var len = _parents ? _parents.length : 0;\n        // if this._parent is null, then so is this._parents, and we\n        // don't have to remove ourselves from any parent subscriptions.\n        while (_parent) {\n            _parent.remove(this);\n            // if this._parents is null or index >= len,\n            // then _parent is set to null, and the loop exits\n            _parent = ++index < len && _parents[index] || null;\n        }\n        if (isFunction_1.isFunction(_unsubscribe)) {\n            var trial = tryCatch_1.tryCatch(_unsubscribe).call(this);\n            if (trial === errorObject_1.errorObject) {\n                hasErrors = true;\n                errors = errors || (errorObject_1.errorObject.e instanceof UnsubscriptionError_1.UnsubscriptionError ?\n                    flattenUnsubscriptionErrors(errorObject_1.errorObject.e.errors) : [errorObject_1.errorObject.e]);\n            }\n        }\n        if (isArray_1.isArray(_subscriptions)) {\n            index = -1;\n            len = _subscriptions.length;\n            while (++index < len) {\n                var sub = _subscriptions[index];\n                if (isObject_1.isObject(sub)) {\n                    var trial = tryCatch_1.tryCatch(sub.unsubscribe).call(sub);\n                    if (trial === errorObject_1.errorObject) {\n                        hasErrors = true;\n                        errors = errors || [];\n                        var err = errorObject_1.errorObject.e;\n                        if (err instanceof UnsubscriptionError_1.UnsubscriptionError) {\n                            errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n                        }\n                        else {\n                            errors.push(err);\n                        }\n                    }\n                }\n            }\n        }\n        if (hasErrors) {\n            throw new UnsubscriptionError_1.UnsubscriptionError(errors);\n        }\n    };\n    /**\n     * Adds a tear down to be called during the unsubscribe() of this\n     * Subscription.\n     *\n     * If the tear down being added is a subscription that is already\n     * unsubscribed, is the same reference `add` is being called on, or is\n     * `Subscription.EMPTY`, it will not be added.\n     *\n     * If this subscription is already in an `closed` state, the passed\n     * tear down logic will be executed immediately.\n     *\n     * @param {TeardownLogic} teardown The additional logic to execute on\n     * teardown.\n     * @return {Subscription} Returns the Subscription used or created to be\n     * added to the inner subscriptions list. This Subscription can be used with\n     * `remove()` to remove the passed teardown logic from the inner subscriptions\n     * list.\n     */\n    Subscription.prototype.add = function (teardown) {\n        if (!teardown || (teardown === Subscription.EMPTY)) {\n            return Subscription.EMPTY;\n        }\n        if (teardown === this) {\n            return this;\n        }\n        var subscription = teardown;\n        switch (typeof teardown) {\n            case 'function':\n                subscription = new Subscription(teardown);\n            case 'object':\n                if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n                    return subscription;\n                }\n                else if (this.closed) {\n                    subscription.unsubscribe();\n                    return subscription;\n                }\n                else if (typeof subscription._addParent !== 'function' /* quack quack */) {\n                    var tmp = subscription;\n                    subscription = new Subscription();\n                    subscription._subscriptions = [tmp];\n                }\n                break;\n            default:\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n        }\n        var subscriptions = this._subscriptions || (this._subscriptions = []);\n        subscriptions.push(subscription);\n        subscription._addParent(this);\n        return subscription;\n    };\n    /**\n     * Removes a Subscription from the internal list of subscriptions that will\n     * unsubscribe during the unsubscribe process of this Subscription.\n     * @param {Subscription} subscription The subscription to remove.\n     * @return {void}\n     */\n    Subscription.prototype.remove = function (subscription) {\n        var subscriptions = this._subscriptions;\n        if (subscriptions) {\n            var subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    };\n    Subscription.prototype._addParent = function (parent) {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        if (!_parent || _parent === parent) {\n            // If we don't have a parent, or the new parent is the same as the\n            // current parent, then set this._parent to the new parent.\n            this._parent = parent;\n        }\n        else if (!_parents) {\n            // If there's already one parent, but not multiple, allocate an Array to\n            // store the rest of the parent Subscriptions.\n            this._parents = [parent];\n        }\n        else if (_parents.indexOf(parent) === -1) {\n            // Only add the new parent to the _parents list if it's not already there.\n            _parents.push(parent);\n        }\n    };\n    Subscription.EMPTY = (function (empty) {\n        empty.closed = true;\n        return empty;\n    }(new Subscription()));\n    return Subscription;\n}());\nexports.Subscription = Subscription;\nfunction flattenUnsubscriptionErrors(errors) {\n    return errors.reduce(function (errs, err) { return errs.concat((err instanceof UnsubscriptionError_1.UnsubscriptionError) ? err.errors : err); }, []);\n}\n//# sourceMappingURL=Subscription.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * <img src=\"./img/map.png\" width=\"100%\">\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * @example <caption>Map every click to the clientX position of that click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks.map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nfunction map(project, thisArg) {\n    return function mapOperation(source) {\n        if (typeof project !== 'function') {\n            throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n        }\n        return source.lift(new MapOperator(project, thisArg));\n    };\n}\nexports.map = map;\nvar MapOperator = (function () {\n    function MapOperator(project, thisArg) {\n        this.project = project;\n        this.thisArg = thisArg;\n    }\n    MapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n    };\n    return MapOperator;\n}());\nexports.MapOperator = MapOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MapSubscriber = (function (_super) {\n    __extends(MapSubscriber, _super);\n    function MapSubscriber(destination, project, thisArg) {\n        _super.call(this, destination);\n        this.project = project;\n        this.count = 0;\n        this.thisArg = thisArg || this;\n    }\n    // NOTE: This looks unoptimized, but it's actually purposefully NOT\n    // using try/catch optimizations.\n    MapSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.project.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return MapSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=map.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AsyncScheduler_1 = require('./AsyncScheduler');\nvar AnimationFrameScheduler = (function (_super) {\n    __extends(AnimationFrameScheduler, _super);\n    function AnimationFrameScheduler() {\n        _super.apply(this, arguments);\n    }\n    AnimationFrameScheduler.prototype.flush = function (action) {\n        this.active = true;\n        this.scheduled = undefined;\n        var actions = this.actions;\n        var error;\n        var index = -1;\n        var count = actions.length;\n        action = action || actions.shift();\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (++index < count && (action = actions.shift()));\n        this.active = false;\n        if (error) {\n            while (++index < count && (action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AnimationFrameScheduler;\n}(AsyncScheduler_1.AsyncScheduler));\nexports.AnimationFrameScheduler = AnimationFrameScheduler;\n//# sourceMappingURL=AnimationFrameScheduler.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar Notification_1 = require('../Notification');\n/**\n *\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * @example <caption>Ensure values in subscribe are called just before browser repaint.</caption>\n * const intervals = Rx.Observable.interval(10); // Intervals are scheduled\n *                                               // with async scheduler by default...\n *\n * intervals\n * .observeOn(Rx.Scheduler.animationFrame)       // ...but we will observe on animationFrame\n * .subscribe(val => {                           // scheduler to ensure smooth animation.\n *   someDiv.style.height = val + 'px';\n * });\n *\n * @see {@link delay}\n *\n * @param {IScheduler} scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param {number} [delay] Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return {Observable<T>} Observable that emits the same notifications as the source Observable,\n * but with provided scheduler.\n *\n * @method observeOn\n * @owner Observable\n */\nfunction observeOn(scheduler, delay) {\n    if (delay === void 0) { delay = 0; }\n    return function observeOnOperatorFunction(source) {\n        return source.lift(new ObserveOnOperator(scheduler, delay));\n    };\n}\nexports.observeOn = observeOn;\nvar ObserveOnOperator = (function () {\n    function ObserveOnOperator(scheduler, delay) {\n        if (delay === void 0) { delay = 0; }\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    ObserveOnOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));\n    };\n    return ObserveOnOperator;\n}());\nexports.ObserveOnOperator = ObserveOnOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ObserveOnSubscriber = (function (_super) {\n    __extends(ObserveOnSubscriber, _super);\n    function ObserveOnSubscriber(destination, scheduler, delay) {\n        if (delay === void 0) { delay = 0; }\n        _super.call(this, destination);\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    ObserveOnSubscriber.dispatch = function (arg) {\n        var notification = arg.notification, destination = arg.destination;\n        notification.observe(destination);\n        this.unsubscribe();\n    };\n    ObserveOnSubscriber.prototype.scheduleMessage = function (notification) {\n        this.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch, this.delay, new ObserveOnMessage(notification, this.destination)));\n    };\n    ObserveOnSubscriber.prototype._next = function (value) {\n        this.scheduleMessage(Notification_1.Notification.createNext(value));\n    };\n    ObserveOnSubscriber.prototype._error = function (err) {\n        this.scheduleMessage(Notification_1.Notification.createError(err));\n    };\n    ObserveOnSubscriber.prototype._complete = function () {\n        this.scheduleMessage(Notification_1.Notification.createComplete());\n    };\n    return ObserveOnSubscriber;\n}(Subscriber_1.Subscriber));\nexports.ObserveOnSubscriber = ObserveOnSubscriber;\nvar ObserveOnMessage = (function () {\n    function ObserveOnMessage(notification, destination) {\n        this.notification = notification;\n        this.destination = destination;\n    }\n    return ObserveOnMessage;\n}());\nexports.ObserveOnMessage = ObserveOnMessage;\n//# sourceMappingURL=observeOn.js.map","\"use strict\";\nvar withLatestFrom_1 = require('../operators/withLatestFrom');\n/* tslint:enable:max-line-length */\n/**\n * Combines the source Observable with other Observables to create an Observable\n * whose values are calculated from the latest values of each, only when the\n * source emits.\n *\n * <span class=\"informal\">Whenever the source Observable emits a value, it\n * computes a formula using that value plus the latest values from other input\n * Observables, then emits the output of that formula.</span>\n *\n * <img src=\"./img/withLatestFrom.png\" width=\"100%\">\n *\n * `withLatestFrom` combines each value from the source Observable (the\n * instance) with the latest values from the other input Observables only when\n * the source emits a value, optionally using a `project` function to determine\n * the value to be emitted on the output Observable. All input Observables must\n * emit at least one value before the output Observable will emit a value.\n *\n * @example <caption>On every click event, emit an array with the latest timer event plus the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var result = clicks.withLatestFrom(timer);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineLatest}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Function} [project] Projection function for combining values\n * together. Receives all values in order of the Observables passed, where the\n * first parameter is a value from the source Observable. (e.g.\n * `a.withLatestFrom(b, c, (a1, b1, c1) => a1 + b1 + c1)`). If this is not\n * passed, arrays will be emitted on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method withLatestFrom\n * @owner Observable\n */\nfunction withLatestFrom() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i - 0] = arguments[_i];\n    }\n    return withLatestFrom_1.withLatestFrom.apply(void 0, args)(this);\n}\nexports.withLatestFrom = withLatestFrom;\n//# sourceMappingURL=withLatestFrom.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar range_1 = require('../../observable/range');\nObservable_1.Observable.range = range_1.range;\n//# sourceMappingURL=range.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\nfunction dispatch(state) {\n    var obj = state.obj, keys = state.keys, length = state.length, index = state.index, subscriber = state.subscriber;\n    if (index === length) {\n        subscriber.complete();\n        return;\n    }\n    var key = keys[index];\n    subscriber.next([key, obj[key]]);\n    state.index = index + 1;\n    this.schedule(state);\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar PairsObservable = (function (_super) {\n    __extends(PairsObservable, _super);\n    function PairsObservable(obj, scheduler) {\n        _super.call(this);\n        this.obj = obj;\n        this.scheduler = scheduler;\n        this.keys = Object.keys(obj);\n    }\n    /**\n     * Convert an object into an observable sequence of [key, value] pairs\n     * using an optional IScheduler to enumerate the object.\n     *\n     * @example <caption>Converts a javascript object to an Observable</caption>\n     * var obj = {\n     *   foo: 42,\n     *   bar: 56,\n     *   baz: 78\n     * };\n     *\n     * var source = Rx.Observable.pairs(obj);\n     *\n     * var subscription = source.subscribe(\n     *   function (x) {\n     *     console.log('Next: %s', x);\n     *   },\n     *   function (err) {\n     *     console.log('Error: %s', err);\n     *   },\n     *   function () {\n     *     console.log('Completed');\n     *   });\n     *\n     * @param {Object} obj The object to inspect and turn into an\n     * Observable sequence.\n     * @param {Scheduler} [scheduler] An optional IScheduler to run the\n     * enumeration of the input sequence on.\n     * @returns {(Observable<Array<string | T>>)} An observable sequence of\n     * [key, value] pairs from the object.\n     */\n    PairsObservable.create = function (obj, scheduler) {\n        return new PairsObservable(obj, scheduler);\n    };\n    /** @deprecated internal use only */ PairsObservable.prototype._subscribe = function (subscriber) {\n        var _a = this, keys = _a.keys, scheduler = _a.scheduler;\n        var length = keys.length;\n        if (scheduler) {\n            return scheduler.schedule(dispatch, 0, {\n                obj: this.obj, keys: keys, length: length, index: 0, subscriber: subscriber\n            });\n        }\n        else {\n            for (var idx = 0; idx < length; idx++) {\n                var key = keys[idx];\n                subscriber.next([key, this.obj[key]]);\n            }\n            subscriber.complete();\n        }\n    };\n    return PairsObservable;\n}(Observable_1.Observable));\nexports.PairsObservable = PairsObservable;\n//# sourceMappingURL=PairsObservable.js.map","var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar anObject = require('../internals/an-object');\nvar objectKeys = require('../internals/object-keys');\n\n// `Object.defineProperties` method\n// https://tc39.github.io/ecma262/#sec-object.defineproperties\nmodule.exports = DESCRIPTORS ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = objectKeys(Properties);\n  var length = keys.length;\n  var index = 0;\n  var key;\n  while (length > index) definePropertyModule.f(O, key = keys[index++], Properties[key]);\n  return O;\n};\n","\"use strict\";\nvar Observable_1 = require('../Observable');\nvar ArrayObservable_1 = require('./ArrayObservable');\nvar isScheduler_1 = require('../util/isScheduler');\nvar mergeAll_1 = require('../operators/mergeAll');\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * <img src=\"./img/merge.png\" width=\"100%\">\n *\n * `merge` subscribes to each given input Observable (as arguments), and simply\n * forwards (without doing any transformation) all the values from all the input\n * Observables to the output Observable. The output Observable only completes\n * once all input Observables have completed. Any error delivered by an input\n * Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Merge together two Observables: 1s interval and clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var clicksOrTimer = Rx.Observable.merge(clicks, timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // timer will emit ascending values, one every second(1000ms) to console\n * // clicks logs MouseEvents to console everytime the \"document\" is clicked\n * // Since the two streams are merged you see these happening\n * // as they occur.\n *\n * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var concurrent = 2; // the argument\n * var merged = Rx.Observable.merge(timer1, timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - First timer1 and timer2 will run concurrently\n * // - timer1 will emit a value every 1000ms for 10 iterations\n * // - timer2 will emit a value every 2000ms for 6 iterations\n * // - after timer1 hits it's max iteration, timer2 will\n * //   continue, and timer3 will start to run concurrently with timer2\n * // - when timer2 hits it's max iteration it terminates, and\n * //   timer3 will continue to emit a value every 500ms until it is complete\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {...ObservableInput} observables Input Observables to merge together.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n * @static true\n * @name merge\n * @owner Observable\n */\nfunction merge() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    var concurrent = Number.POSITIVE_INFINITY;\n    var scheduler = null;\n    var last = observables[observables.length - 1];\n    if (isScheduler_1.isScheduler(last)) {\n        scheduler = observables.pop();\n        if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {\n            concurrent = observables.pop();\n        }\n    }\n    else if (typeof last === 'number') {\n        concurrent = observables.pop();\n    }\n    if (scheduler === null && observables.length === 1 && observables[0] instanceof Observable_1.Observable) {\n        return observables[0];\n    }\n    return mergeAll_1.mergeAll(concurrent)(new ArrayObservable_1.ArrayObservable(observables, scheduler));\n}\nexports.merge = merge;\n//# sourceMappingURL=merge.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar mergeMap_1 = require('../../operator/mergeMap');\nObservable_1.Observable.prototype.mergeMap = mergeMap_1.mergeMap;\nObservable_1.Observable.prototype.flatMap = mergeMap_1.mergeMap;\n//# sourceMappingURL=mergeMap.js.map","export { default } from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./ChessBoard.vue?vue&type=style&index=0&id=e9cfa21c&lang=scss&scoped=true\"; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./ChessBoard.vue?vue&type=style&index=0&id=e9cfa21c&lang=scss&scoped=true\"","\"use strict\";\nvar scan_1 = require('../operators/scan');\n/* tslint:enable:max-line-length */\n/**\n * Applies an accumulator function over the source Observable, and returns each\n * intermediate result, with an optional seed value.\n *\n * <span class=\"informal\">It's like {@link reduce}, but emits the current\n * accumulation whenever the source emits a value.</span>\n *\n * <img src=\"./img/scan.png\" width=\"100%\">\n *\n * Combines together all values emitted on the source, using an accumulator\n * function that knows how to join a new source value into the accumulation from\n * the past. Is similar to {@link reduce}, but emits the intermediate\n * accumulations.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * @example <caption>Count the number of click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var ones = clicks.mapTo(1);\n * var seed = 0;\n * var count = ones.scan((acc, one) => acc + one, seed);\n * count.subscribe(x => console.log(x));\n *\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link reduce}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator\n * The accumulator function called on each source value.\n * @param {T|R} [seed] The initial accumulation value.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method scan\n * @owner Observable\n */\nfunction scan(accumulator, seed) {\n    if (arguments.length >= 2) {\n        return scan_1.scan(accumulator, seed)(this);\n    }\n    return scan_1.scan(accumulator)(this);\n}\nexports.scan = scan;\n//# sourceMappingURL=scan.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar audit_1 = require('../../operator/audit');\nObservable_1.Observable.prototype.audit = audit_1.audit;\n//# sourceMappingURL=audit.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when duetime elapses.\n *\n * @see {@link timeout}\n *\n * @class TimeoutError\n */\nvar TimeoutError = (function (_super) {\n    __extends(TimeoutError, _super);\n    function TimeoutError() {\n        var err = _super.call(this, 'Timeout has occurred');\n        this.name = err.name = 'TimeoutError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return TimeoutError;\n}(Error));\nexports.TimeoutError = TimeoutError;\n//# sourceMappingURL=TimeoutError.js.map","var isObject = require('../internals/is-object');\n\nmodule.exports = function (it) {\n  if (!isObject(it) && it !== null) {\n    throw TypeError(\"Can't set \" + String(it) + ' as a prototype');\n  } return it;\n};\n","\"use strict\";\nvar errorObject_1 = require('./errorObject');\nvar tryCatchTarget;\nfunction tryCatcher() {\n    try {\n        return tryCatchTarget.apply(this, arguments);\n    }\n    catch (e) {\n        errorObject_1.errorObject.e = e;\n        return errorObject_1.errorObject;\n    }\n}\nfunction tryCatch(fn) {\n    tryCatchTarget = fn;\n    return tryCatcher;\n}\nexports.tryCatch = tryCatch;\n;\n//# sourceMappingURL=tryCatch.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ScalarObservable = (function (_super) {\n    __extends(ScalarObservable, _super);\n    function ScalarObservable(value, scheduler) {\n        _super.call(this);\n        this.value = value;\n        this.scheduler = scheduler;\n        this._isScalar = true;\n        if (scheduler) {\n            this._isScalar = false;\n        }\n    }\n    ScalarObservable.create = function (value, scheduler) {\n        return new ScalarObservable(value, scheduler);\n    };\n    ScalarObservable.dispatch = function (state) {\n        var done = state.done, value = state.value, subscriber = state.subscriber;\n        if (done) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(value);\n        if (subscriber.closed) {\n            return;\n        }\n        state.done = true;\n        this.schedule(state);\n    };\n    /** @deprecated internal use only */ ScalarObservable.prototype._subscribe = function (subscriber) {\n        var value = this.value;\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(ScalarObservable.dispatch, 0, {\n                done: false, value: value, subscriber: subscriber\n            });\n        }\n        else {\n            subscriber.next(value);\n            if (!subscriber.closed) {\n                subscriber.complete();\n            }\n        }\n    };\n    return ScalarObservable;\n}(Observable_1.Observable));\nexports.ScalarObservable = ScalarObservable;\n//# sourceMappingURL=ScalarObservable.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar concat_1 = require('../../observable/concat');\nObservable_1.Observable.concat = concat_1.concat;\n//# sourceMappingURL=concat.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscription_1 = require('../Subscription');\nvar tryCatch_1 = require('../util/tryCatch');\nvar errorObject_1 = require('../util/errorObject');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Buffers the source Observable values, using a factory function of closing\n * Observables to determine when to close, emit, and reset the buffer.\n *\n * <span class=\"informal\">Collects values from the past as an array. When it\n * starts collecting values, it calls a function that returns an Observable that\n * tells when to close the buffer and restart collecting.</span>\n *\n * <img src=\"./img/bufferWhen.png\" width=\"100%\">\n *\n * Opens a buffer immediately, then closes the buffer when the observable\n * returned by calling `closingSelector` function emits a value. When it closes\n * the buffer, it immediately opens a new buffer and repeats the process.\n *\n * @example <caption>Emit an array of the last clicks every [1-5] random seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferWhen(() =>\n *   Rx.Observable.interval(1000 + Math.random() * 4000)\n * );\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link windowWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals buffer closure.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferWhen\n * @owner Observable\n */\nfunction bufferWhen(closingSelector) {\n    return function (source) {\n        return source.lift(new BufferWhenOperator(closingSelector));\n    };\n}\nexports.bufferWhen = bufferWhen;\nvar BufferWhenOperator = (function () {\n    function BufferWhenOperator(closingSelector) {\n        this.closingSelector = closingSelector;\n    }\n    BufferWhenOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new BufferWhenSubscriber(subscriber, this.closingSelector));\n    };\n    return BufferWhenOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar BufferWhenSubscriber = (function (_super) {\n    __extends(BufferWhenSubscriber, _super);\n    function BufferWhenSubscriber(destination, closingSelector) {\n        _super.call(this, destination);\n        this.closingSelector = closingSelector;\n        this.subscribing = false;\n        this.openBuffer();\n    }\n    BufferWhenSubscriber.prototype._next = function (value) {\n        this.buffer.push(value);\n    };\n    BufferWhenSubscriber.prototype._complete = function () {\n        var buffer = this.buffer;\n        if (buffer) {\n            this.destination.next(buffer);\n        }\n        _super.prototype._complete.call(this);\n    };\n    /** @deprecated internal use only */ BufferWhenSubscriber.prototype._unsubscribe = function () {\n        this.buffer = null;\n        this.subscribing = false;\n    };\n    BufferWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.openBuffer();\n    };\n    BufferWhenSubscriber.prototype.notifyComplete = function () {\n        if (this.subscribing) {\n            this.complete();\n        }\n        else {\n            this.openBuffer();\n        }\n    };\n    BufferWhenSubscriber.prototype.openBuffer = function () {\n        var closingSubscription = this.closingSubscription;\n        if (closingSubscription) {\n            this.remove(closingSubscription);\n            closingSubscription.unsubscribe();\n        }\n        var buffer = this.buffer;\n        if (this.buffer) {\n            this.destination.next(buffer);\n        }\n        this.buffer = [];\n        var closingNotifier = tryCatch_1.tryCatch(this.closingSelector)();\n        if (closingNotifier === errorObject_1.errorObject) {\n            this.error(errorObject_1.errorObject.e);\n        }\n        else {\n            closingSubscription = new Subscription_1.Subscription();\n            this.closingSubscription = closingSubscription;\n            this.add(closingSubscription);\n            this.subscribing = true;\n            closingSubscription.add(subscribeToResult_1.subscribeToResult(this, closingNotifier));\n            this.subscribing = false;\n        }\n    };\n    return BufferWhenSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=bufferWhen.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar bufferTime_1 = require('../../operator/bufferTime');\nObservable_1.Observable.prototype.bufferTime = bufferTime_1.bufferTime;\n//# sourceMappingURL=bufferTime.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = require('../Subject');\nvar tryCatch_1 = require('../util/tryCatch');\nvar errorObject_1 = require('../util/errorObject');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Branch out the source Observable values as a nested Observable using a\n * factory function of closing Observables to determine when to start a new\n * window.\n *\n * <span class=\"informal\">It's like {@link bufferWhen}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowWhen.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping windows.\n * It emits the current window and opens a new one whenever the Observable\n * produced by the specified `closingSelector` function emits an item. The first\n * window is opened immediately when subscribing to the output Observable.\n *\n * @example <caption>Emit only the first two clicks events in every window of [1-5] random seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks\n *   .windowWhen(() => Rx.Observable.interval(1000 + Math.random() * 4000))\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link bufferWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals (on either `next` or\n * `complete`) when to close the previous window and start a new one.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowWhen\n * @owner Observable\n */\nfunction windowWhen(closingSelector) {\n    return function windowWhenOperatorFunction(source) {\n        return source.lift(new WindowOperator(closingSelector));\n    };\n}\nexports.windowWhen = windowWhen;\nvar WindowOperator = (function () {\n    function WindowOperator(closingSelector) {\n        this.closingSelector = closingSelector;\n    }\n    WindowOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new WindowSubscriber(subscriber, this.closingSelector));\n    };\n    return WindowOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WindowSubscriber = (function (_super) {\n    __extends(WindowSubscriber, _super);\n    function WindowSubscriber(destination, closingSelector) {\n        _super.call(this, destination);\n        this.destination = destination;\n        this.closingSelector = closingSelector;\n        this.openWindow();\n    }\n    WindowSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.openWindow(innerSub);\n    };\n    WindowSubscriber.prototype.notifyError = function (error, innerSub) {\n        this._error(error);\n    };\n    WindowSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.openWindow(innerSub);\n    };\n    WindowSubscriber.prototype._next = function (value) {\n        this.window.next(value);\n    };\n    WindowSubscriber.prototype._error = function (err) {\n        this.window.error(err);\n        this.destination.error(err);\n        this.unsubscribeClosingNotification();\n    };\n    WindowSubscriber.prototype._complete = function () {\n        this.window.complete();\n        this.destination.complete();\n        this.unsubscribeClosingNotification();\n    };\n    WindowSubscriber.prototype.unsubscribeClosingNotification = function () {\n        if (this.closingNotification) {\n            this.closingNotification.unsubscribe();\n        }\n    };\n    WindowSubscriber.prototype.openWindow = function (innerSub) {\n        if (innerSub === void 0) { innerSub = null; }\n        if (innerSub) {\n            this.remove(innerSub);\n            innerSub.unsubscribe();\n        }\n        var prevWindow = this.window;\n        if (prevWindow) {\n            prevWindow.complete();\n        }\n        var window = this.window = new Subject_1.Subject();\n        this.destination.next(window);\n        var closingNotifier = tryCatch_1.tryCatch(this.closingSelector)();\n        if (closingNotifier === errorObject_1.errorObject) {\n            var err = errorObject_1.errorObject.e;\n            this.destination.error(err);\n            this.window.error(err);\n        }\n        else {\n            this.add(this.closingNotification = subscribeToResult_1.subscribeToResult(this, closingNotifier));\n        }\n    };\n    return WindowSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=windowWhen.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar mergeScan_1 = require('../../operator/mergeScan');\nObservable_1.Observable.prototype.mergeScan = mergeScan_1.mergeScan;\n//# sourceMappingURL=mergeScan.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar using_1 = require('../../observable/using');\nObservable_1.Observable.using = using_1.using;\n//# sourceMappingURL=using.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar throttle_1 = require('../../operator/throttle');\nObservable_1.Observable.prototype.throttle = throttle_1.throttle;\n//# sourceMappingURL=throttle.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar takeLast_1 = require('../../operator/takeLast');\nObservable_1.Observable.prototype.takeLast = takeLast_1.takeLast;\n//# sourceMappingURL=takeLast.js.map","var global = require('../internals/global');\n\nmodule.exports = global;\n","\"use strict\";\nvar zip_1 = require('../operators/zip');\nexports.zip = zip_1.zipStatic;\n//# sourceMappingURL=zip.js.map","\"use strict\";\nexports.empty = {\n    closed: true,\n    next: function (value) { },\n    error: function (err) { throw err; },\n    complete: function () { }\n};\n//# sourceMappingURL=Observer.js.map","\"use strict\";\nfunction applyMixins(derivedCtor, baseCtors) {\n    for (var i = 0, len = baseCtors.length; i < len; i++) {\n        var baseCtor = baseCtors[i];\n        var propertyKeys = Object.getOwnPropertyNames(baseCtor.prototype);\n        for (var j = 0, len2 = propertyKeys.length; j < len2; j++) {\n            var name_1 = propertyKeys[j];\n            derivedCtor.prototype[name_1] = baseCtor.prototype[name_1];\n        }\n    }\n}\nexports.applyMixins = applyMixins;\n//# sourceMappingURL=applyMixins.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ErrorObservable = (function (_super) {\n    __extends(ErrorObservable, _super);\n    function ErrorObservable(error, scheduler) {\n        _super.call(this);\n        this.error = error;\n        this.scheduler = scheduler;\n    }\n    /**\n     * Creates an Observable that emits no items to the Observer and immediately\n     * emits an error notification.\n     *\n     * <span class=\"informal\">Just emits 'error', and nothing else.\n     * </span>\n     *\n     * <img src=\"./img/throw.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that only\n     * emits the error notification. It can be used for composing with other\n     * Observables, such as in a {@link mergeMap}.\n     *\n     * @example <caption>Emit the number 7, then emit an error.</caption>\n     * var result = Rx.Observable.throw(new Error('oops!')).startWith(7);\n     * result.subscribe(x => console.log(x), e => console.error(e));\n     *\n     * @example <caption>Map and flatten numbers to the sequence 'a', 'b', 'c', but throw an error for 13</caption>\n     * var interval = Rx.Observable.interval(1000);\n     * var result = interval.mergeMap(x =>\n     *   x === 13 ?\n     *     Rx.Observable.throw('Thirteens are bad') :\n     *     Rx.Observable.of('a', 'b', 'c')\n     * );\n     * result.subscribe(x => console.log(x), e => console.error(e));\n     *\n     * @see {@link create}\n     * @see {@link empty}\n     * @see {@link never}\n     * @see {@link of}\n     *\n     * @param {any} error The particular Error to pass to the error notification.\n     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n     * the emission of the error notification.\n     * @return {Observable} An error Observable: emits only the error notification\n     * using the given error argument.\n     * @static true\n     * @name throw\n     * @owner Observable\n     */\n    ErrorObservable.create = function (error, scheduler) {\n        return new ErrorObservable(error, scheduler);\n    };\n    ErrorObservable.dispatch = function (arg) {\n        var error = arg.error, subscriber = arg.subscriber;\n        subscriber.error(error);\n    };\n    /** @deprecated internal use only */ ErrorObservable.prototype._subscribe = function (subscriber) {\n        var error = this.error;\n        var scheduler = this.scheduler;\n        subscriber.syncErrorThrowable = true;\n        if (scheduler) {\n            return scheduler.schedule(ErrorObservable.dispatch, 0, {\n                error: error, subscriber: subscriber\n            });\n        }\n        else {\n            subscriber.error(error);\n        }\n    };\n    return ErrorObservable;\n}(Observable_1.Observable));\nexports.ErrorObservable = ErrorObservable;\n//# sourceMappingURL=ErrorObservable.js.map","var fails = require('../internals/fails');\nvar classof = require('../internals/classof-raw');\n\nvar split = ''.split;\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nmodule.exports = fails(function () {\n  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346\n  // eslint-disable-next-line no-prototype-builtins\n  return !Object('z').propertyIsEnumerable(0);\n}) ? function (it) {\n  return classof(it) == 'String' ? split.call(it, '') : Object(it);\n} : Object;\n","var wellKnownSymbol = require('../internals/well-known-symbol');\nvar create = require('../internals/object-create');\nvar definePropertyModule = require('../internals/object-define-property');\n\nvar UNSCOPABLES = wellKnownSymbol('unscopables');\nvar ArrayPrototype = Array.prototype;\n\n// Array.prototype[@@unscopables]\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\nif (ArrayPrototype[UNSCOPABLES] == undefined) {\n  definePropertyModule.f(ArrayPrototype, UNSCOPABLES, {\n    configurable: true,\n    value: create(null)\n  });\n}\n\n// add a key to Array.prototype[@@unscopables]\nmodule.exports = function (key) {\n  ArrayPrototype[UNSCOPABLES][key] = true;\n};\n","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar sample_1 = require('../../operator/sample');\nObservable_1.Observable.prototype.sample = sample_1.sample;\n//# sourceMappingURL=sample.js.map","var isObject = require('../internals/is-object');\nvar classof = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\n\n// `IsRegExp` abstract operation\n// https://tc39.github.io/ecma262/#sec-isregexp\nmodule.exports = function (it) {\n  var isRegExp;\n  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : classof(it) == 'RegExp');\n};\n","\"use strict\";\nvar NeverObservable_1 = require('./NeverObservable');\nexports.never = NeverObservable_1.NeverObservable.create;\n//# sourceMappingURL=never.js.map","\"use strict\";\nvar mergeAll_1 = require('./mergeAll');\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * concatenating the inner Observables in order.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by putting one\n * inner Observable after the other.</span>\n *\n * <img src=\"./img/concatAll.png\" width=\"100%\">\n *\n * Joins every Observable emitted by the source (a higher-order Observable), in\n * a serial fashion. It subscribes to each inner Observable only after the\n * previous inner Observable has completed, and merges all of their values into\n * the returned observable.\n *\n * __Warning:__ If the source Observable emits Observables quickly and\n * endlessly, and the inner Observables it emits generally complete slower than\n * the source emits, you can run into memory issues as the incoming Observables\n * collect in an unbounded buffer.\n *\n * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set\n * to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map(ev => Rx.Observable.interval(1000).take(4));\n * var firstOrder = higherOrder.concatAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link combineAll}\n * @see {@link concat}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link exhaust}\n * @see {@link mergeAll}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable emitting values from all the inner\n * Observables concatenated.\n * @method concatAll\n * @owner Observable\n */\nfunction concatAll() {\n    return mergeAll_1.mergeAll(1);\n}\nexports.concatAll = concatAll;\n//# sourceMappingURL=concatAll.js.map","\"use strict\";\nvar root_1 = require('./root');\nfunction minimalSetImpl() {\n    // THIS IS NOT a full impl of Set, this is just the minimum\n    // bits of functionality we need for this library.\n    return (function () {\n        function MinimalSet() {\n            this._values = [];\n        }\n        MinimalSet.prototype.add = function (value) {\n            if (!this.has(value)) {\n                this._values.push(value);\n            }\n        };\n        MinimalSet.prototype.has = function (value) {\n            return this._values.indexOf(value) !== -1;\n        };\n        Object.defineProperty(MinimalSet.prototype, \"size\", {\n            get: function () {\n                return this._values.length;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        MinimalSet.prototype.clear = function () {\n            this._values.length = 0;\n        };\n        return MinimalSet;\n    }());\n}\nexports.minimalSetImpl = minimalSetImpl;\nexports.Set = root_1.root.Set || minimalSetImpl();\n//# sourceMappingURL=Set.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar root_1 = require('../util/root');\nvar Observable_1 = require('../Observable');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar PromiseObservable = (function (_super) {\n    __extends(PromiseObservable, _super);\n    function PromiseObservable(promise, scheduler) {\n        _super.call(this);\n        this.promise = promise;\n        this.scheduler = scheduler;\n    }\n    /**\n     * Converts a Promise to an Observable.\n     *\n     * <span class=\"informal\">Returns an Observable that just emits the Promise's\n     * resolved value, then completes.</span>\n     *\n     * Converts an ES2015 Promise or a Promises/A+ spec compliant Promise to an\n     * Observable. If the Promise resolves with a value, the output Observable\n     * emits that resolved value as a `next`, and then completes. If the Promise\n     * is rejected, then the output Observable emits the corresponding Error.\n     *\n     * @example <caption>Convert the Promise returned by Fetch to an Observable</caption>\n     * var result = Rx.Observable.fromPromise(fetch('http://myserver.com/'));\n     * result.subscribe(x => console.log(x), e => console.error(e));\n     *\n     * @see {@link bindCallback}\n     * @see {@link from}\n     *\n     * @param {PromiseLike<T>} promise The promise to be converted.\n     * @param {Scheduler} [scheduler] An optional IScheduler to use for scheduling\n     * the delivery of the resolved value (or the rejection).\n     * @return {Observable<T>} An Observable which wraps the Promise.\n     * @static true\n     * @name fromPromise\n     * @owner Observable\n     */\n    PromiseObservable.create = function (promise, scheduler) {\n        return new PromiseObservable(promise, scheduler);\n    };\n    /** @deprecated internal use only */ PromiseObservable.prototype._subscribe = function (subscriber) {\n        var _this = this;\n        var promise = this.promise;\n        var scheduler = this.scheduler;\n        if (scheduler == null) {\n            if (this._isScalar) {\n                if (!subscriber.closed) {\n                    subscriber.next(this.value);\n                    subscriber.complete();\n                }\n            }\n            else {\n                promise.then(function (value) {\n                    _this.value = value;\n                    _this._isScalar = true;\n                    if (!subscriber.closed) {\n                        subscriber.next(value);\n                        subscriber.complete();\n                    }\n                }, function (err) {\n                    if (!subscriber.closed) {\n                        subscriber.error(err);\n                    }\n                })\n                    .then(null, function (err) {\n                    // escape the promise trap, throw unhandled errors\n                    root_1.root.setTimeout(function () { throw err; });\n                });\n            }\n        }\n        else {\n            if (this._isScalar) {\n                if (!subscriber.closed) {\n                    return scheduler.schedule(dispatchNext, 0, { value: this.value, subscriber: subscriber });\n                }\n            }\n            else {\n                promise.then(function (value) {\n                    _this.value = value;\n                    _this._isScalar = true;\n                    if (!subscriber.closed) {\n                        subscriber.add(scheduler.schedule(dispatchNext, 0, { value: value, subscriber: subscriber }));\n                    }\n                }, function (err) {\n                    if (!subscriber.closed) {\n                        subscriber.add(scheduler.schedule(dispatchError, 0, { err: err, subscriber: subscriber }));\n                    }\n                })\n                    .then(null, function (err) {\n                    // escape the promise trap, throw unhandled errors\n                    root_1.root.setTimeout(function () { throw err; });\n                });\n            }\n        }\n    };\n    return PromiseObservable;\n}(Observable_1.Observable));\nexports.PromiseObservable = PromiseObservable;\nfunction dispatchNext(arg) {\n    var value = arg.value, subscriber = arg.subscriber;\n    if (!subscriber.closed) {\n        subscriber.next(value);\n        subscriber.complete();\n    }\n}\nfunction dispatchError(arg) {\n    var err = arg.err, subscriber = arg.subscriber;\n    if (!subscriber.closed) {\n        subscriber.error(err);\n    }\n}\n//# sourceMappingURL=PromiseObservable.js.map","import { wrapInstance } from './common';\nexport function cordovaInstance(pluginObj, methodName, config, args) {\n    args = Array.from(args);\n    return wrapInstance(pluginObj, methodName, config).apply(this, args);\n}\n//# sourceMappingURL=cordova-instance.js.map","\"use strict\";\nvar exhaust_1 = require('../operators/exhaust');\n/**\n * Converts a higher-order Observable into a first-order Observable by dropping\n * inner Observables while the previous inner Observable has not yet completed.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by dropping the\n * next inner Observables while the current inner is still executing.</span>\n *\n * <img src=\"./img/exhaust.png\" width=\"100%\">\n *\n * `exhaust` subscribes to an Observable that emits Observables, also known as a\n * higher-order Observable. Each time it observes one of these emitted inner\n * Observables, the output Observable begins emitting the items emitted by that\n * inner Observable. So far, it behaves like {@link mergeAll}. However,\n * `exhaust` ignores every new inner Observable if the previous Observable has\n * not yet completed. Once that one completes, it will accept and flatten the\n * next inner Observable and repeat this process.\n *\n * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(5));\n * var result = higherOrder.exhaust();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link switch}\n * @see {@link mergeAll}\n * @see {@link exhaustMap}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable that takes a source of Observables and propagates the first observable\n * exclusively until it completes before subscribing to the next.\n * @method exhaust\n * @owner Observable\n */\nfunction exhaust() {\n    return exhaust_1.exhaust()(this);\n}\nexports.exhaust = exhaust;\n//# sourceMappingURL=exhaust.js.map","\"use strict\";\nvar async_1 = require('../scheduler/async');\nvar debounceTime_1 = require('../operators/debounceTime');\n/**\n * Emits a value from the source Observable only after a particular time span\n * has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link delay}, but passes only the most\n * recent value from each burst of emissions.</span>\n *\n * <img src=\"./img/debounceTime.png\" width=\"100%\">\n *\n * `debounceTime` delays values emitted by the source Observable, but drops\n * previous pending delayed emissions if a new value arrives on the source\n * Observable. This operator keeps track of the most recent value from the\n * source Observable, and emits that only when `dueTime` enough time has passed\n * without any other value appearing on the source Observable. If a new value\n * appears before `dueTime` silence occurs, the previous value will be dropped\n * and will not be emitted on the output Observable.\n *\n * This is a rate-limiting operator, because it is impossible for more than one\n * value to be emitted in any time window of duration `dueTime`, but it is also\n * a delay-like operator since output emissions do not occur at the same time as\n * they did on the source Observable. Optionally takes a {@link IScheduler} for\n * managing timers.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounceTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} dueTime The timeout duration in milliseconds (or the time\n * unit determined internally by the optional `scheduler`) for the window of\n * time required to wait for emission silence before emitting the most recent\n * source value.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the timeout for each value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified `dueTime`, and may drop some values if they occur\n * too frequently.\n * @method debounceTime\n * @owner Observable\n */\nfunction debounceTime(dueTime, scheduler) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    return debounceTime_1.debounceTime(dueTime, scheduler)(this);\n}\nexports.debounceTime = debounceTime;\n//# sourceMappingURL=debounceTime.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar async_1 = require('../scheduler/async');\nvar isDate_1 = require('../util/isDate');\nvar Subscriber_1 = require('../Subscriber');\nvar Notification_1 = require('../Notification');\n/**\n * Delays the emission of items from the source Observable by a given timeout or\n * until a given Date.\n *\n * <span class=\"informal\">Time shifts each item by some specified amount of\n * milliseconds.</span>\n *\n * <img src=\"./img/delay.png\" width=\"100%\">\n *\n * If the delay argument is a Number, this operator time shifts the source\n * Observable by that amount of time expressed in milliseconds. The relative\n * time intervals between the values are preserved.\n *\n * If the delay argument is a Date, this operator time shifts the start of the\n * Observable execution until the given date occurs.\n *\n * @example <caption>Delay each click by one second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var delayedClicks = clicks.delay(1000); // each click emitted after 1 second\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @example <caption>Delay all clicks until a future date happens</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var date = new Date('March 15, 2050 12:00:00'); // in the future\n * var delayedClicks = clicks.delay(date); // click emitted only after that date\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n *\n * @param {number|Date} delay The delay duration in milliseconds (a `number`) or\n * a `Date` until which the emission of the source items is delayed.\n * @param {Scheduler} [scheduler=async] The IScheduler to use for\n * managing the timers that handle the time-shift for each item.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified timeout or Date.\n * @method delay\n * @owner Observable\n */\nfunction delay(delay, scheduler) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    var absoluteDelay = isDate_1.isDate(delay);\n    var delayFor = absoluteDelay ? (+delay - scheduler.now()) : Math.abs(delay);\n    return function (source) { return source.lift(new DelayOperator(delayFor, scheduler)); };\n}\nexports.delay = delay;\nvar DelayOperator = (function () {\n    function DelayOperator(delay, scheduler) {\n        this.delay = delay;\n        this.scheduler = scheduler;\n    }\n    DelayOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));\n    };\n    return DelayOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DelaySubscriber = (function (_super) {\n    __extends(DelaySubscriber, _super);\n    function DelaySubscriber(destination, delay, scheduler) {\n        _super.call(this, destination);\n        this.delay = delay;\n        this.scheduler = scheduler;\n        this.queue = [];\n        this.active = false;\n        this.errored = false;\n    }\n    DelaySubscriber.dispatch = function (state) {\n        var source = state.source;\n        var queue = source.queue;\n        var scheduler = state.scheduler;\n        var destination = state.destination;\n        while (queue.length > 0 && (queue[0].time - scheduler.now()) <= 0) {\n            queue.shift().notification.observe(destination);\n        }\n        if (queue.length > 0) {\n            var delay_1 = Math.max(0, queue[0].time - scheduler.now());\n            this.schedule(state, delay_1);\n        }\n        else {\n            this.unsubscribe();\n            source.active = false;\n        }\n    };\n    DelaySubscriber.prototype._schedule = function (scheduler) {\n        this.active = true;\n        this.add(scheduler.schedule(DelaySubscriber.dispatch, this.delay, {\n            source: this, destination: this.destination, scheduler: scheduler\n        }));\n    };\n    DelaySubscriber.prototype.scheduleNotification = function (notification) {\n        if (this.errored === true) {\n            return;\n        }\n        var scheduler = this.scheduler;\n        var message = new DelayMessage(scheduler.now() + this.delay, notification);\n        this.queue.push(message);\n        if (this.active === false) {\n            this._schedule(scheduler);\n        }\n    };\n    DelaySubscriber.prototype._next = function (value) {\n        this.scheduleNotification(Notification_1.Notification.createNext(value));\n    };\n    DelaySubscriber.prototype._error = function (err) {\n        this.errored = true;\n        this.queue = [];\n        this.destination.error(err);\n    };\n    DelaySubscriber.prototype._complete = function () {\n        this.scheduleNotification(Notification_1.Notification.createComplete());\n    };\n    return DelaySubscriber;\n}(Subscriber_1.Subscriber));\nvar DelayMessage = (function () {\n    function DelayMessage(time, notification) {\n        this.time = time;\n        this.notification = notification;\n    }\n    return DelayMessage;\n}());\n//# sourceMappingURL=delay.js.map","\"use strict\";\nvar single_1 = require('../operators/single');\n/**\n * Returns an Observable that emits the single item emitted by the source Observable that matches a specified\n * predicate, if that Observable emits one such item. If the source Observable emits more than one such item or no\n * such items, notify of an IllegalArgumentException or NoSuchElementException respectively.\n *\n * <img src=\"./img/single.png\" width=\"100%\">\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {Function} predicate - A predicate function to evaluate items emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits the single item emitted by the source Observable that matches\n * the predicate.\n .\n * @method single\n * @owner Observable\n */\nfunction single(predicate) {\n    return single_1.single(predicate)(this);\n}\nexports.single = single;\n//# sourceMappingURL=single.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar EmptyObservable = (function (_super) {\n    __extends(EmptyObservable, _super);\n    function EmptyObservable(scheduler) {\n        _super.call(this);\n        this.scheduler = scheduler;\n    }\n    /**\n     * Creates an Observable that emits no items to the Observer and immediately\n     * emits a complete notification.\n     *\n     * <span class=\"informal\">Just emits 'complete', and nothing else.\n     * </span>\n     *\n     * <img src=\"./img/empty.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that only\n     * emits the complete notification. It can be used for composing with other\n     * Observables, such as in a {@link mergeMap}.\n     *\n     * @example <caption>Emit the number 7, then complete.</caption>\n     * var result = Rx.Observable.empty().startWith(7);\n     * result.subscribe(x => console.log(x));\n     *\n     * @example <caption>Map and flatten only odd numbers to the sequence 'a', 'b', 'c'</caption>\n     * var interval = Rx.Observable.interval(1000);\n     * var result = interval.mergeMap(x =>\n     *   x % 2 === 1 ? Rx.Observable.of('a', 'b', 'c') : Rx.Observable.empty()\n     * );\n     * result.subscribe(x => console.log(x));\n     *\n     * // Results in the following to the console:\n     * // x is equal to the count on the interval eg(0,1,2,3,...)\n     * // x will occur every 1000ms\n     * // if x % 2 is equal to 1 print abc\n     * // if x % 2 is not equal to 1 nothing will be output\n     *\n     * @see {@link create}\n     * @see {@link never}\n     * @see {@link of}\n     * @see {@link throw}\n     *\n     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n     * the emission of the complete notification.\n     * @return {Observable} An \"empty\" Observable: emits only the complete\n     * notification.\n     * @static true\n     * @name empty\n     * @owner Observable\n     */\n    EmptyObservable.create = function (scheduler) {\n        return new EmptyObservable(scheduler);\n    };\n    EmptyObservable.dispatch = function (arg) {\n        var subscriber = arg.subscriber;\n        subscriber.complete();\n    };\n    /** @deprecated internal use only */ EmptyObservable.prototype._subscribe = function (subscriber) {\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(EmptyObservable.dispatch, 0, { subscriber: subscriber });\n        }\n        else {\n            subscriber.complete();\n        }\n    };\n    return EmptyObservable;\n}(Observable_1.Observable));\nexports.EmptyObservable = EmptyObservable;\n//# sourceMappingURL=EmptyObservable.js.map","\"use strict\";\nvar Observable_1 = require('../../../Observable');\nvar webSocket_1 = require('../../../observable/dom/webSocket');\nObservable_1.Observable.webSocket = webSocket_1.webSocket;\n//# sourceMappingURL=webSocket.js.map","\"use strict\";\nvar delayWhen_1 = require('../operators/delayWhen');\n/**\n * Delays the emission of items from the source Observable by a given time span\n * determined by the emissions of another Observable.\n *\n * <span class=\"informal\">It's like {@link delay}, but the time span of the\n * delay duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/delayWhen.png\" width=\"100%\">\n *\n * `delayWhen` time shifts each emitted value from the source Observable by a\n * time span determined by another Observable. When the source emits a value,\n * the `delayDurationSelector` function is called with the source value as\n * argument, and should return an Observable, called the \"duration\" Observable.\n * The source value is emitted on the output Observable only when the duration\n * Observable emits a value or completes.\n *\n * Optionally, `delayWhen` takes a second argument, `subscriptionDelay`, which\n * is an Observable. When `subscriptionDelay` emits its first value or\n * completes, the source Observable is subscribed to and starts behaving like\n * described in the previous paragraph. If `subscriptionDelay` is not provided,\n * `delayWhen` will subscribe to the source Observable as soon as the output\n * Observable is subscribed.\n *\n * @example <caption>Delay each click by a random amount of time, between 0 and 5 seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var delayedClicks = clicks.delayWhen(event =>\n *   Rx.Observable.interval(Math.random() * 5000)\n * );\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @see {@link debounce}\n * @see {@link delay}\n *\n * @param {function(value: T): Observable} delayDurationSelector A function that\n * returns an Observable for each value emitted by the source Observable, which\n * is then used to delay the emission of that item on the output Observable\n * until the Observable returned from this function emits a value.\n * @param {Observable} subscriptionDelay An Observable that triggers the\n * subscription to the source Observable once it emits any value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by an amount of time specified by the Observable returned by\n * `delayDurationSelector`.\n * @method delayWhen\n * @owner Observable\n */\nfunction delayWhen(delayDurationSelector, subscriptionDelay) {\n    return delayWhen_1.delayWhen(delayDurationSelector, subscriptionDelay)(this);\n}\nexports.delayWhen = delayWhen;\n//# sourceMappingURL=delayWhen.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar tryCatch_1 = require('../util/tryCatch');\nvar errorObject_1 = require('../util/errorObject');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Ignores source values for a duration determined by another Observable, then\n * emits the most recent value from the source Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link auditTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/audit.png\" width=\"100%\">\n *\n * `audit` is similar to `throttle`, but emits the last value from the silenced\n * time window, instead of the first value. `audit` emits the most recent value\n * from the source Observable on the output Observable as soon as its internal\n * timer becomes disabled, and ignores source values while the timer is enabled.\n * Initially, the timer is disabled. As soon as the first source value arrives,\n * the timer is enabled by calling the `durationSelector` function with the\n * source value, which returns the \"duration\" Observable. When the duration\n * Observable emits a value or completes, the timer is disabled, then the most\n * recent source value is emitted on the output Observable, and this process\n * repeats for the next source value.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.audit(ev => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttle}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration, returned as an Observable or a Promise.\n * @return {Observable<T>} An Observable that performs rate-limiting of\n * emissions from the source Observable.\n * @method audit\n * @owner Observable\n */\nfunction audit(durationSelector) {\n    return function auditOperatorFunction(source) {\n        return source.lift(new AuditOperator(durationSelector));\n    };\n}\nexports.audit = audit;\nvar AuditOperator = (function () {\n    function AuditOperator(durationSelector) {\n        this.durationSelector = durationSelector;\n    }\n    AuditOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new AuditSubscriber(subscriber, this.durationSelector));\n    };\n    return AuditOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AuditSubscriber = (function (_super) {\n    __extends(AuditSubscriber, _super);\n    function AuditSubscriber(destination, durationSelector) {\n        _super.call(this, destination);\n        this.durationSelector = durationSelector;\n        this.hasValue = false;\n    }\n    AuditSubscriber.prototype._next = function (value) {\n        this.value = value;\n        this.hasValue = true;\n        if (!this.throttled) {\n            var duration = tryCatch_1.tryCatch(this.durationSelector)(value);\n            if (duration === errorObject_1.errorObject) {\n                this.destination.error(errorObject_1.errorObject.e);\n            }\n            else {\n                var innerSubscription = subscribeToResult_1.subscribeToResult(this, duration);\n                if (innerSubscription.closed) {\n                    this.clearThrottle();\n                }\n                else {\n                    this.add(this.throttled = innerSubscription);\n                }\n            }\n        }\n    };\n    AuditSubscriber.prototype.clearThrottle = function () {\n        var _a = this, value = _a.value, hasValue = _a.hasValue, throttled = _a.throttled;\n        if (throttled) {\n            this.remove(throttled);\n            this.throttled = null;\n            throttled.unsubscribe();\n        }\n        if (hasValue) {\n            this.value = null;\n            this.hasValue = false;\n            this.destination.next(value);\n        }\n    };\n    AuditSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex) {\n        this.clearThrottle();\n    };\n    AuditSubscriber.prototype.notifyComplete = function () {\n        this.clearThrottle();\n    };\n    return AuditSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=audit.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar skipUntil_1 = require('../../operator/skipUntil');\nObservable_1.Observable.prototype.skipUntil = skipUntil_1.skipUntil;\n//# sourceMappingURL=skipUntil.js.map","\"use strict\";\nvar FastMap = (function () {\n    function FastMap() {\n        this.values = {};\n    }\n    FastMap.prototype.delete = function (key) {\n        this.values[key] = null;\n        return true;\n    };\n    FastMap.prototype.set = function (key, value) {\n        this.values[key] = value;\n        return this;\n    };\n    FastMap.prototype.get = function (key) {\n        return this.values[key];\n    };\n    FastMap.prototype.forEach = function (cb, thisArg) {\n        var values = this.values;\n        for (var key in values) {\n            if (values.hasOwnProperty(key) && values[key] !== null) {\n                cb.call(thisArg, values[key], key);\n            }\n        }\n    };\n    FastMap.prototype.clear = function () {\n        this.values = {};\n    };\n    return FastMap;\n}());\nexports.FastMap = FastMap;\n//# sourceMappingURL=FastMap.js.map","\"use strict\";\nvar defaultIfEmpty_1 = require('../operators/defaultIfEmpty');\n/* tslint:enable:max-line-length */\n/**\n * Emits a given value if the source Observable completes without emitting any\n * `next` value, otherwise mirrors the source Observable.\n *\n * <span class=\"informal\">If the source Observable turns out to be empty, then\n * this operator will emit a default value.</span>\n *\n * <img src=\"./img/defaultIfEmpty.png\" width=\"100%\">\n *\n * `defaultIfEmpty` emits the values emitted by the source Observable or a\n * specified default value if the source Observable is empty (completes without\n * having emitted any `next` value).\n *\n * @example <caption>If no clicks happen in 5 seconds, then emit \"no clicks\"</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksBeforeFive = clicks.takeUntil(Rx.Observable.interval(5000));\n * var result = clicksBeforeFive.defaultIfEmpty('no clicks');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link empty}\n * @see {@link last}\n *\n * @param {any} [defaultValue=null] The default value used if the source\n * Observable is empty.\n * @return {Observable} An Observable that emits either the specified\n * `defaultValue` if the source Observable emits no items, or the values emitted\n * by the source Observable.\n * @method defaultIfEmpty\n * @owner Observable\n */\nfunction defaultIfEmpty(defaultValue) {\n    if (defaultValue === void 0) { defaultValue = null; }\n    return defaultIfEmpty_1.defaultIfEmpty(defaultValue)(this);\n}\nexports.defaultIfEmpty = defaultIfEmpty;\n//# sourceMappingURL=defaultIfEmpty.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar catch_1 = require('../../operator/catch');\nObservable_1.Observable.prototype.catch = catch_1._catch;\nObservable_1.Observable.prototype._catch = catch_1._catch;\n//# sourceMappingURL=catch.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar interval_1 = require('../../observable/interval');\nObservable_1.Observable.interval = interval_1.interval;\n//# sourceMappingURL=interval.js.map","var toIndexedObject = require('../internals/to-indexed-object');\nvar toLength = require('../internals/to-length');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\n\n// `Array.prototype.{ indexOf, includes }` methods implementation\nvar createMethod = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIndexedObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) {\n      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.includes` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.includes\n  includes: createMethod(true),\n  // `Array.prototype.indexOf` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.indexof\n  indexOf: createMethod(false)\n};\n","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar last_1 = require('../../operator/last');\nObservable_1.Observable.prototype.last = last_1.last;\n//# sourceMappingURL=last.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Returns an Observable that skips items emitted by the source Observable until a second Observable emits an item.\n *\n * <img src=\"./img/skipUntil.png\" width=\"100%\">\n *\n * @param {Observable} notifier - The second Observable that has to emit an item before the source Observable's elements begin to\n * be mirrored by the resulting Observable.\n * @return {Observable<T>} An Observable that skips items from the source Observable until the second Observable emits\n * an item, then emits the remaining items.\n * @method skipUntil\n * @owner Observable\n */\nfunction skipUntil(notifier) {\n    return function (source) { return source.lift(new SkipUntilOperator(notifier)); };\n}\nexports.skipUntil = skipUntil;\nvar SkipUntilOperator = (function () {\n    function SkipUntilOperator(notifier) {\n        this.notifier = notifier;\n    }\n    SkipUntilOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SkipUntilSubscriber(subscriber, this.notifier));\n    };\n    return SkipUntilOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SkipUntilSubscriber = (function (_super) {\n    __extends(SkipUntilSubscriber, _super);\n    function SkipUntilSubscriber(destination, notifier) {\n        _super.call(this, destination);\n        this.hasValue = false;\n        this.isInnerStopped = false;\n        this.add(subscribeToResult_1.subscribeToResult(this, notifier));\n    }\n    SkipUntilSubscriber.prototype._next = function (value) {\n        if (this.hasValue) {\n            _super.prototype._next.call(this, value);\n        }\n    };\n    SkipUntilSubscriber.prototype._complete = function () {\n        if (this.isInnerStopped) {\n            _super.prototype._complete.call(this);\n        }\n        else {\n            this.unsubscribe();\n        }\n    };\n    SkipUntilSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.hasValue = true;\n    };\n    SkipUntilSubscriber.prototype.notifyComplete = function () {\n        this.isInnerStopped = true;\n        if (this.isStopped) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    return SkipUntilSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=skipUntil.js.map","<template>\n  <ion-page>\n    <ion-header>\n      <ion-toolbar>\n        <ion-title>Game</ion-title>\n      </ion-toolbar>\n    </ion-header>\n    <ion-content :fullscreen=\"true\">\n      <ion-header collapse=\"condense\">\n        <ion-toolbar>\n          <ion-title size=\"large\">Game</ion-title>\n        </ion-toolbar>\n      </ion-header>\n\n      <div class=\"board_zone\" :style=\"{width: sizePx, height: sizePx}\">\n        <ChessBoard :sizePx=\"size\" />\n      </div>\n    </ion-content>\n  </ion-page>\n</template>\n\n<script lang=\"ts\">\nimport {\n  IonPage,\n  IonHeader,\n  IonToolbar,\n  IonTitle,\n  IonContent,\n} from \"@ionic/vue\";\nimport {ScreenOrientation} from '@ionic-native/screen-orientation';\nimport ChessBoard from \"@/components/ChessBoard.vue\";\n\nexport default {\n  name: \"Game\",\n  components: {\n    ChessBoard,\n    IonHeader,\n    IonToolbar,\n    IonTitle,\n    IonContent,\n    IonPage,\n  },\n  setup() {\n    const orientationType = ScreenOrientation.type;\n    const isPortrait = orientationType.includes(\"portrait\");\n    const minSize = Math.min(window.innerWidth, window.innerHeight);\n    const sizeRatio = isPortrait ? 0.9 : 0.6;\n    const size = Math.floor(sizeRatio * minSize);\n\n    const sizePx = size + 'px';\n\n    return { size, sizePx };\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.board_zone {\n  margin: auto;\n}\n</style>","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { IonicNativePlugin, cordovaPropertyGet, cordovaPropertySet, cordova } from '@ionic-native/core';\nimport { Observable } from 'rxjs';\nvar ScreenOrientationOriginal = /** @class */ (function (_super) {\n    __extends(ScreenOrientationOriginal, _super);\n    function ScreenOrientationOriginal() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Convenience enum for possible orientations\n         */\n        _this.ORIENTATIONS = {\n            PORTRAIT_PRIMARY: 'portrait-primary',\n            PORTRAIT_SECONDARY: 'portrait-secondary',\n            LANDSCAPE_PRIMARY: 'landscape-primary',\n            LANDSCAPE_SECONDARY: 'landscape-secondary',\n            PORTRAIT: 'portrait',\n            LANDSCAPE: 'landscape',\n            ANY: 'any',\n        };\n        return _this;\n    }\n    ScreenOrientationOriginal.prototype.onChange = function () { return cordova(this, \"onChange\", { \"eventObservable\": true, \"event\": \"orientationchange\", \"element\": \"window\" }, arguments); };\n    ScreenOrientationOriginal.prototype.lock = function (orientation) { return cordova(this, \"lock\", { \"otherPromise\": true }, arguments); };\n    ScreenOrientationOriginal.prototype.unlock = function () { return cordova(this, \"unlock\", { \"sync\": true }, arguments); };\n    Object.defineProperty(ScreenOrientationOriginal.prototype, \"type\", {\n        get: function () { return cordovaPropertyGet(this, \"type\"); },\n        set: function (value) { cordovaPropertySet(this, \"type\", value); },\n        enumerable: true,\n        configurable: true\n    });\n    ScreenOrientationOriginal.pluginName = \"ScreenOrientation\";\n    ScreenOrientationOriginal.plugin = \"cordova-plugin-screen-orientation\";\n    ScreenOrientationOriginal.pluginRef = \"screen.orientation\";\n    ScreenOrientationOriginal.repo = \"https://github.com/apache/cordova-plugin-screen-orientation\";\n    ScreenOrientationOriginal.platforms = [\"Android\", \"iOS\", \"Windows\"];\n    return ScreenOrientationOriginal;\n}(IonicNativePlugin));\nvar ScreenOrientation = new ScreenOrientationOriginal();\nexport { ScreenOrientation };\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvQGlvbmljLW5hdGl2ZS9wbHVnaW5zL3NjcmVlbi1vcmllbnRhdGlvbi9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQ0EsT0FBTyxzRUFBdUQsTUFBTSxvQkFBb0IsQ0FBQztBQUN6RixPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sTUFBTSxDQUFDOztJQTJESyxxQ0FBaUI7OztRQUN0RDs7V0FFRztRQUNILGtCQUFZLEdBQUc7WUFDYixnQkFBZ0IsRUFBRSxrQkFBa0I7WUFDcEMsa0JBQWtCLEVBQUUsb0JBQW9CO1lBQ3hDLGlCQUFpQixFQUFFLG1CQUFtQjtZQUN0QyxtQkFBbUIsRUFBRSxxQkFBcUI7WUFDMUMsUUFBUSxFQUFFLFVBQVU7WUFDcEIsU0FBUyxFQUFFLFdBQVc7WUFDdEIsR0FBRyxFQUFFLEtBQUs7U0FDWCxDQUFDOzs7SUFVRixvQ0FBUTtJQVdSLGdDQUFJLGFBQUMsV0FBbUI7SUFReEIsa0NBQU07MEJBTU4sbUNBQUk7Ozs7Ozs7Ozs7OzRCQTVHTjtFQTZEdUMsaUJBQWlCO1NBQTNDLGlCQUFpQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvcmRvdmEsIENvcmRvdmFQcm9wZXJ0eSwgSW9uaWNOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5cbi8qKlxuICogQG5hbWUgU2NyZWVuIE9yaWVudGF0aW9uXG4gKiBAcHJlbWllciBzY3JlZW4tb3JpZW50YXRpb25cbiAqIEBkZXNjcmlwdGlvblxuICogQ29yZG92YSBwbHVnaW4gdG8gc2V0L2xvY2sgdGhlIHNjcmVlbiBvcmllbnRhdGlvbiBpbiBhIGNvbW1vbiB3YXkuXG4gKlxuICogUmVxdWlyZXMgQ29yZG92YSBwbHVnaW46IGBjb3Jkb3ZhLXBsdWdpbi1zY3JlZW4tb3JpZW50YXRpb25gLiBGb3IgbW9yZSBpbmZvLCBwbGVhc2Ugc2VlIHRoZSBbU2NyZWVuIE9yaWVudGF0aW9uIHBsdWdpbiBkb2NzXShodHRwczovL2dpdGh1Yi5jb20vYXBhY2hlL2NvcmRvdmEtcGx1Z2luLXNjcmVlbi1vcmllbnRhdGlvbikuXG4gKlxuICogQHVzYWdlXG4gKiBgYGB0eXBlc2NyaXB0XG4gKiBpbXBvcnQgeyBTY3JlZW5PcmllbnRhdGlvbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvc2NyZWVuLW9yaWVudGF0aW9uL25neCc7XG4gKlxuICogY29uc3RydWN0b3IocHJpdmF0ZSBzY3JlZW5PcmllbnRhdGlvbjogU2NyZWVuT3JpZW50YXRpb24pIHsgfVxuICpcbiAqIC4uLlxuICpcbiAqXG4gKiAvLyBnZXQgY3VycmVudFxuICogY29uc29sZS5sb2codGhpcy5zY3JlZW5PcmllbnRhdGlvbi50eXBlKTsgLy8gbG9ncyB0aGUgY3VycmVudCBvcmllbnRhdGlvbiwgZXhhbXBsZTogJ2xhbmRzY2FwZSdcbiAqXG4gKiAvLyBzZXQgdG8gbGFuZHNjYXBlXG4gKiB0aGlzLnNjcmVlbk9yaWVudGF0aW9uLmxvY2sodGhpcy5zY3JlZW5PcmllbnRhdGlvbi5PUklFTlRBVElPTlMuTEFORFNDQVBFKTtcbiAqXG4gKiAvLyBhbGxvdyB1c2VyIHJvdGF0ZVxuICogdGhpcy5zY3JlZW5PcmllbnRhdGlvbi51bmxvY2soKTtcbiAqXG4gKiAvLyBkZXRlY3Qgb3JpZW50YXRpb24gY2hhbmdlc1xuICogdGhpcy5zY3JlZW5PcmllbnRhdGlvbi5vbkNoYW5nZSgpLnN1YnNjcmliZShcbiAqICAgICgpID0+IHtcbiAqICAgICAgICBjb25zb2xlLmxvZyhcIk9yaWVudGF0aW9uIENoYW5nZWRcIik7XG4gKiAgICB9XG4gKiApO1xuICpcbiAqIGBgYFxuICpcbiAqIEBhZHZhbmNlZFxuICpcbiAqIEFjY2VwdGVkIG9yaWVudGF0aW9uIHZhbHVlczpcbiAqXG4gKiB8IFZhbHVlICAgICAgICAgICAgICAgICAgICAgICAgIHwgRGVzY3JpcHRpb24gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8XG4gKiB8LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLXwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS18XG4gKiB8IHBvcnRyYWl0LXByaW1hcnkgICAgICAgICAgICAgIHwgVGhlIG9yaWVudGF0aW9uIGlzIGluIHRoZSBwcmltYXJ5IHBvcnRyYWl0IG1vZGUuICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8XG4gKiB8IHBvcnRyYWl0LXNlY29uZGFyeSAgICAgICAgICAgIHwgVGhlIG9yaWVudGF0aW9uIGlzIGluIHRoZSBzZWNvbmRhcnkgcG9ydHJhaXQgbW9kZS4gICAgICAgICAgICAgICAgICAgICAgICAgICB8XG4gKiB8IGxhbmRzY2FwZS1wcmltYXJ5ICAgICAgICAgICAgIHwgVGhlIG9yaWVudGF0aW9uIGlzIGluIHRoZSBwcmltYXJ5IGxhbmRzY2FwZSBtb2RlLiAgICAgICAgICAgICAgICAgICAgICAgICAgICB8XG4gKiB8IGxhbmRzY2FwZS1zZWNvbmRhcnkgICAgICAgICAgIHwgVGhlIG9yaWVudGF0aW9uIGlzIGluIHRoZSBzZWNvbmRhcnkgbGFuZHNjYXBlIG1vZGUuICAgICAgICAgICAgICAgICAgICAgICAgICB8XG4gKiB8IHBvcnRyYWl0ICAgICAgICAgICAgICAgICAgICAgIHwgVGhlIG9yaWVudGF0aW9uIGlzIGVpdGhlciBwb3J0cmFpdC1wcmltYXJ5IG9yIHBvcnRyYWl0LXNlY29uZGFyeSAoc2Vuc29yKS4gICB8XG4gKiB8IGxhbmRzY2FwZSAgICAgICAgICAgICAgICAgICAgIHwgVGhlIG9yaWVudGF0aW9uIGlzIGVpdGhlciBsYW5kc2NhcGUtcHJpbWFyeSBvciBsYW5kc2NhcGUtc2Vjb25kYXJ5IChzZW5zb3IpLiB8XG4gKlxuICovXG5AUGx1Z2luKHtcbiAgcGx1Z2luTmFtZTogJ1NjcmVlbk9yaWVudGF0aW9uJyxcbiAgcGx1Z2luOiAnY29yZG92YS1wbHVnaW4tc2NyZWVuLW9yaWVudGF0aW9uJyxcbiAgcGx1Z2luUmVmOiAnc2NyZWVuLm9yaWVudGF0aW9uJyxcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9hcGFjaGUvY29yZG92YS1wbHVnaW4tc2NyZWVuLW9yaWVudGF0aW9uJyxcbiAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnLCAnaU9TJywgJ1dpbmRvd3MnXSxcbn0pXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgU2NyZWVuT3JpZW50YXRpb24gZXh0ZW5kcyBJb25pY05hdGl2ZVBsdWdpbiB7XG4gIC8qKlxuICAgKiBDb252ZW5pZW5jZSBlbnVtIGZvciBwb3NzaWJsZSBvcmllbnRhdGlvbnNcbiAgICovXG4gIE9SSUVOVEFUSU9OUyA9IHtcbiAgICBQT1JUUkFJVF9QUklNQVJZOiAncG9ydHJhaXQtcHJpbWFyeScsXG4gICAgUE9SVFJBSVRfU0VDT05EQVJZOiAncG9ydHJhaXQtc2Vjb25kYXJ5JyxcbiAgICBMQU5EU0NBUEVfUFJJTUFSWTogJ2xhbmRzY2FwZS1wcmltYXJ5JyxcbiAgICBMQU5EU0NBUEVfU0VDT05EQVJZOiAnbGFuZHNjYXBlLXNlY29uZGFyeScsXG4gICAgUE9SVFJBSVQ6ICdwb3J0cmFpdCcsXG4gICAgTEFORFNDQVBFOiAnbGFuZHNjYXBlJyxcbiAgICBBTlk6ICdhbnknLFxuICB9O1xuICAvKipcbiAgICogTGlzdGVuIHRvIG9yaWVudGF0aW9uIGNoYW5nZSBldmVudFxuICAgKiBAcmV0dXJuIHtPYnNlcnZhYmxlPHZvaWQ+fVxuICAgKi9cbiAgQENvcmRvdmEoe1xuICAgIGV2ZW50T2JzZXJ2YWJsZTogdHJ1ZSxcbiAgICBldmVudDogJ29yaWVudGF0aW9uY2hhbmdlJyxcbiAgICBlbGVtZW50OiAnd2luZG93JyxcbiAgfSlcbiAgb25DaGFuZ2UoKTogT2JzZXJ2YWJsZTx2b2lkPiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIExvY2sgdGhlIG9yaWVudGF0aW9uIHRvIHRoZSBwYXNzZWQgdmFsdWUuXG4gICAqIFNlZSBiZWxvdyBmb3IgYWNjZXB0ZWQgdmFsdWVzXG4gICAqIEBwYXJhbSBvcmllbnRhdGlvbiB7c3RyaW5nfSBUaGUgb3JpZW50YXRpb24gd2hpY2ggc2hvdWxkIGJlIGxvY2tlZC4gQWNjZXB0ZWQgdmFsdWVzIHNlZSB0YWJsZSBhYm92ZS5cbiAgICogQHJldHVybiB7UHJvbWlzZTxhbnk+fVxuICAgKi9cbiAgQENvcmRvdmEoeyBvdGhlclByb21pc2U6IHRydWUgfSlcbiAgbG9jayhvcmllbnRhdGlvbjogc3RyaW5nKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogVW5sb2NrIGFuZCBhbGxvdyBhbGwgb3JpZW50YXRpb25zLlxuICAgKi9cbiAgQENvcmRvdmEoeyBzeW5jOiB0cnVlIH0pXG4gIHVubG9jaygpOiB2b2lkIHt9XG5cbiAgLyoqXG4gICAqIEdldCB0aGUgY3VycmVudCBvcmllbnRhdGlvbiBvZiB0aGUgZGV2aWNlLlxuICAgKi9cbiAgQENvcmRvdmFQcm9wZXJ0eSgpXG4gIHR5cGU6IHN0cmluZztcbn1cbiJdfQ==","<template>\n    <div id=\"root\" :style=\"{ width: sizePixels, height: sizePixels}\"></div>\n</template>\n\n<script>\nimport {computed} from 'vue';\nexport default {\n    props: {\n        sizePx: {\n            type: Number,\n            default: 60,\n        }\n    },\n    setup(props) {\n        const sizePixels = computed(function() {\n            const {sizePx} = props;\n            return sizePx+'px';\n        });\n        return {sizePixels};\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n    #root {\n        background-color: orangered;\n    }\n</style>","import { render } from \"./ChessBoard.vue?vue&type=template&id=e9cfa21c&scoped=true&bindings={\\\"sizePx\\\":\\\"props\\\",\\\"sizePixels\\\":\\\"setup\\\"}\"\nimport script from \"./ChessBoard.vue?vue&type=script&lang=js\"\nexport * from \"./ChessBoard.vue?vue&type=script&lang=js\"\n\nimport \"./ChessBoard.vue?vue&type=style&index=0&id=e9cfa21c&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-e9cfa21c\"\n\nexport default script","\nimport {\n  IonPage,\n  IonHeader,\n  IonToolbar,\n  IonTitle,\n  IonContent,\n} from \"@ionic/vue\";\nimport {ScreenOrientation} from '@ionic-native/screen-orientation';\nimport ChessBoard from \"@/components/ChessBoard.vue\";\n\nexport default {\n  name: \"Game\",\n  components: {\n    ChessBoard,\n    IonHeader,\n    IonToolbar,\n    IonTitle,\n    IonContent,\n    IonPage,\n  },\n  setup() {\n    const orientationType = ScreenOrientation.type;\n    const isPortrait = orientationType.includes(\"portrait\");\n    const minSize = Math.min(window.innerWidth, window.innerHeight);\n    const sizeRatio = isPortrait ? 0.9 : 0.6;\n    const size = Math.floor(sizeRatio * minSize);\n\n    const sizePx = size + 'px';\n\n    return { size, sizePx };\n  },\n};\n","import { render } from \"./Tab1.vue?vue&type=template&id=5466b762&scoped=true&bindings={\\\"size\\\":\\\"setup\\\",\\\"sizePx\\\":\\\"setup\\\"}\"\nimport script from \"./Tab1.vue?vue&type=script&lang=ts\"\nexport * from \"./Tab1.vue?vue&type=script&lang=ts\"\n\nimport \"./Tab1.vue?vue&type=style&index=0&id=5466b762&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-5466b762\"\n\nexport default script","\"use strict\";\nvar root_1 = require('./root');\nvar MapPolyfill_1 = require('./MapPolyfill');\nexports.Map = root_1.root.Map || (function () { return MapPolyfill_1.MapPolyfill; })();\n//# sourceMappingURL=Map.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar merge_1 = require('../../observable/merge');\nObservable_1.Observable.merge = merge_1.merge;\n//# sourceMappingURL=merge.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar ignoreElements_1 = require('../../operator/ignoreElements');\nObservable_1.Observable.prototype.ignoreElements = ignoreElements_1.ignoreElements;\n//# sourceMappingURL=ignoreElements.js.map","\"use strict\";\nvar takeWhile_1 = require('../operators/takeWhile');\n/**\n * Emits values emitted by the source Observable so long as each value satisfies\n * the given `predicate`, and then completes as soon as this `predicate` is not\n * satisfied.\n *\n * <span class=\"informal\">Takes values from the source only while they pass the\n * condition given. When the first value does not satisfy, it completes.</span>\n *\n * <img src=\"./img/takeWhile.png\" width=\"100%\">\n *\n * `takeWhile` subscribes and begins mirroring the source Observable. Each value\n * emitted on the source is given to the `predicate` function which returns a\n * boolean, representing a condition to be satisfied by the source values. The\n * output Observable emits the source values until such time as the `predicate`\n * returns false, at which point `takeWhile` stops mirroring the source\n * Observable and completes the output Observable.\n *\n * @example <caption>Emit click events only while the clientX property is greater than 200</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.takeWhile(ev => ev.clientX > 200);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates a value emitted by the source Observable and returns a boolean.\n * Also takes the (zero-based) index as the second argument.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable so long as each value satisfies the condition defined by the\n * `predicate`, then completes.\n * @method takeWhile\n * @owner Observable\n */\nfunction takeWhile(predicate) {\n    return takeWhile_1.takeWhile(predicate)(this);\n}\nexports.takeWhile = takeWhile;\n//# sourceMappingURL=takeWhile.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\nvar Subscription_1 = require('../Subscription');\nvar SubscriptionLoggable_1 = require('./SubscriptionLoggable');\nvar applyMixins_1 = require('../util/applyMixins');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ColdObservable = (function (_super) {\n    __extends(ColdObservable, _super);\n    function ColdObservable(messages, scheduler) {\n        _super.call(this, function (subscriber) {\n            var observable = this;\n            var index = observable.logSubscribedFrame();\n            subscriber.add(new Subscription_1.Subscription(function () {\n                observable.logUnsubscribedFrame(index);\n            }));\n            observable.scheduleMessages(subscriber);\n            return subscriber;\n        });\n        this.messages = messages;\n        this.subscriptions = [];\n        this.scheduler = scheduler;\n    }\n    ColdObservable.prototype.scheduleMessages = function (subscriber) {\n        var messagesLength = this.messages.length;\n        for (var i = 0; i < messagesLength; i++) {\n            var message = this.messages[i];\n            subscriber.add(this.scheduler.schedule(function (_a) {\n                var message = _a.message, subscriber = _a.subscriber;\n                message.notification.observe(subscriber);\n            }, message.frame, { message: message, subscriber: subscriber }));\n        }\n    };\n    return ColdObservable;\n}(Observable_1.Observable));\nexports.ColdObservable = ColdObservable;\napplyMixins_1.applyMixins(ColdObservable, [SubscriptionLoggable_1.SubscriptionLoggable]);\n//# sourceMappingURL=ColdObservable.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Buffers the source Observable values until the size hits the maximum\n * `bufferSize` given.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when its size reaches `bufferSize`.</span>\n *\n * <img src=\"./img/bufferCount.png\" width=\"100%\">\n *\n * Buffers a number of values from the source Observable by `bufferSize` then\n * emits the buffer and clears it, and starts a new buffer each\n * `startBufferEvery` values. If `startBufferEvery` is not provided or is\n * `null`, then new buffers are started immediately at the start of the source\n * and when each buffer closes and is emitted.\n *\n * @example <caption>Emit the last two click events as an array</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferCount(2);\n * buffered.subscribe(x => console.log(x));\n *\n * @example <caption>On every click, emit the last two click events as an array</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferCount(2, 1);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link pairwise}\n * @see {@link windowCount}\n *\n * @param {number} bufferSize The maximum size of the buffer emitted.\n * @param {number} [startBufferEvery] Interval at which to start a new buffer.\n * For example if `startBufferEvery` is `2`, then a new buffer will be started\n * on every other value from the source. A new buffer is started at the\n * beginning of the source by default.\n * @return {Observable<T[]>} An Observable of arrays of buffered values.\n * @method bufferCount\n * @owner Observable\n */\nfunction bufferCount(bufferSize, startBufferEvery) {\n    if (startBufferEvery === void 0) { startBufferEvery = null; }\n    return function bufferCountOperatorFunction(source) {\n        return source.lift(new BufferCountOperator(bufferSize, startBufferEvery));\n    };\n}\nexports.bufferCount = bufferCount;\nvar BufferCountOperator = (function () {\n    function BufferCountOperator(bufferSize, startBufferEvery) {\n        this.bufferSize = bufferSize;\n        this.startBufferEvery = startBufferEvery;\n        if (!startBufferEvery || bufferSize === startBufferEvery) {\n            this.subscriberClass = BufferCountSubscriber;\n        }\n        else {\n            this.subscriberClass = BufferSkipCountSubscriber;\n        }\n    }\n    BufferCountOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new this.subscriberClass(subscriber, this.bufferSize, this.startBufferEvery));\n    };\n    return BufferCountOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar BufferCountSubscriber = (function (_super) {\n    __extends(BufferCountSubscriber, _super);\n    function BufferCountSubscriber(destination, bufferSize) {\n        _super.call(this, destination);\n        this.bufferSize = bufferSize;\n        this.buffer = [];\n    }\n    BufferCountSubscriber.prototype._next = function (value) {\n        var buffer = this.buffer;\n        buffer.push(value);\n        if (buffer.length == this.bufferSize) {\n            this.destination.next(buffer);\n            this.buffer = [];\n        }\n    };\n    BufferCountSubscriber.prototype._complete = function () {\n        var buffer = this.buffer;\n        if (buffer.length > 0) {\n            this.destination.next(buffer);\n        }\n        _super.prototype._complete.call(this);\n    };\n    return BufferCountSubscriber;\n}(Subscriber_1.Subscriber));\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar BufferSkipCountSubscriber = (function (_super) {\n    __extends(BufferSkipCountSubscriber, _super);\n    function BufferSkipCountSubscriber(destination, bufferSize, startBufferEvery) {\n        _super.call(this, destination);\n        this.bufferSize = bufferSize;\n        this.startBufferEvery = startBufferEvery;\n        this.buffers = [];\n        this.count = 0;\n    }\n    BufferSkipCountSubscriber.prototype._next = function (value) {\n        var _a = this, bufferSize = _a.bufferSize, startBufferEvery = _a.startBufferEvery, buffers = _a.buffers, count = _a.count;\n        this.count++;\n        if (count % startBufferEvery === 0) {\n            buffers.push([]);\n        }\n        for (var i = buffers.length; i--;) {\n            var buffer = buffers[i];\n            buffer.push(value);\n            if (buffer.length === bufferSize) {\n                buffers.splice(i, 1);\n                this.destination.next(buffer);\n            }\n        }\n    };\n    BufferSkipCountSubscriber.prototype._complete = function () {\n        var _a = this, buffers = _a.buffers, destination = _a.destination;\n        while (buffers.length > 0) {\n            var buffer = buffers.shift();\n            if (buffer.length > 0) {\n                destination.next(buffer);\n            }\n        }\n        _super.prototype._complete.call(this);\n    };\n    return BufferSkipCountSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=bufferCount.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar retryWhen_1 = require('../../operator/retryWhen');\nObservable_1.Observable.prototype.retryWhen = retryWhen_1.retryWhen;\n//# sourceMappingURL=retryWhen.js.map","var toInteger = require('../internals/to-integer');\n\nvar min = Math.min;\n\n// `ToLength` abstract operation\n// https://tc39.github.io/ecma262/#sec-tolength\nmodule.exports = function (argument) {\n  return argument > 0 ? min(toInteger(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991\n};\n","/**\nSome credit for this helper goes to http://github.com/YuzuJS/setImmediate\n*/\n\"use strict\";\nvar root_1 = require('./root');\nvar ImmediateDefinition = (function () {\n    function ImmediateDefinition(root) {\n        this.root = root;\n        if (root.setImmediate && typeof root.setImmediate === 'function') {\n            this.setImmediate = root.setImmediate.bind(root);\n            this.clearImmediate = root.clearImmediate.bind(root);\n        }\n        else {\n            this.nextHandle = 1;\n            this.tasksByHandle = {};\n            this.currentlyRunningATask = false;\n            // Don't get fooled by e.g. browserify environments.\n            if (this.canUseProcessNextTick()) {\n                // For Node.js before 0.9\n                this.setImmediate = this.createProcessNextTickSetImmediate();\n            }\n            else if (this.canUsePostMessage()) {\n                // For non-IE10 modern browsers\n                this.setImmediate = this.createPostMessageSetImmediate();\n            }\n            else if (this.canUseMessageChannel()) {\n                // For web workers, where supported\n                this.setImmediate = this.createMessageChannelSetImmediate();\n            }\n            else if (this.canUseReadyStateChange()) {\n                // For IE 6–8\n                this.setImmediate = this.createReadyStateChangeSetImmediate();\n            }\n            else {\n                // For older browsers\n                this.setImmediate = this.createSetTimeoutSetImmediate();\n            }\n            var ci = function clearImmediate(handle) {\n                delete clearImmediate.instance.tasksByHandle[handle];\n            };\n            ci.instance = this;\n            this.clearImmediate = ci;\n        }\n    }\n    ImmediateDefinition.prototype.identify = function (o) {\n        return this.root.Object.prototype.toString.call(o);\n    };\n    ImmediateDefinition.prototype.canUseProcessNextTick = function () {\n        return this.identify(this.root.process) === '[object process]';\n    };\n    ImmediateDefinition.prototype.canUseMessageChannel = function () {\n        return Boolean(this.root.MessageChannel);\n    };\n    ImmediateDefinition.prototype.canUseReadyStateChange = function () {\n        var document = this.root.document;\n        return Boolean(document && 'onreadystatechange' in document.createElement('script'));\n    };\n    ImmediateDefinition.prototype.canUsePostMessage = function () {\n        var root = this.root;\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `root.postMessage` means something completely different and can't be used for this purpose.\n        if (root.postMessage && !root.importScripts) {\n            var postMessageIsAsynchronous_1 = true;\n            var oldOnMessage = root.onmessage;\n            root.onmessage = function () {\n                postMessageIsAsynchronous_1 = false;\n            };\n            root.postMessage('', '*');\n            root.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous_1;\n        }\n        return false;\n    };\n    // This function accepts the same arguments as setImmediate, but\n    // returns a function that requires no arguments.\n    ImmediateDefinition.prototype.partiallyApplied = function (handler) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var fn = function result() {\n            var _a = result, handler = _a.handler, args = _a.args;\n            if (typeof handler === 'function') {\n                handler.apply(undefined, args);\n            }\n            else {\n                (new Function('' + handler))();\n            }\n        };\n        fn.handler = handler;\n        fn.args = args;\n        return fn;\n    };\n    ImmediateDefinition.prototype.addFromSetImmediateArguments = function (args) {\n        this.tasksByHandle[this.nextHandle] = this.partiallyApplied.apply(undefined, args);\n        return this.nextHandle++;\n    };\n    ImmediateDefinition.prototype.createProcessNextTickSetImmediate = function () {\n        var fn = function setImmediate() {\n            var instance = setImmediate.instance;\n            var handle = instance.addFromSetImmediateArguments(arguments);\n            instance.root.process.nextTick(instance.partiallyApplied(instance.runIfPresent, handle));\n            return handle;\n        };\n        fn.instance = this;\n        return fn;\n    };\n    ImmediateDefinition.prototype.createPostMessageSetImmediate = function () {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n        var root = this.root;\n        var messagePrefix = 'setImmediate$' + root.Math.random() + '$';\n        var onGlobalMessage = function globalMessageHandler(event) {\n            var instance = globalMessageHandler.instance;\n            if (event.source === root &&\n                typeof event.data === 'string' &&\n                event.data.indexOf(messagePrefix) === 0) {\n                instance.runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n        onGlobalMessage.instance = this;\n        root.addEventListener('message', onGlobalMessage, false);\n        var fn = function setImmediate() {\n            var _a = setImmediate, messagePrefix = _a.messagePrefix, instance = _a.instance;\n            var handle = instance.addFromSetImmediateArguments(arguments);\n            instance.root.postMessage(messagePrefix + handle, '*');\n            return handle;\n        };\n        fn.instance = this;\n        fn.messagePrefix = messagePrefix;\n        return fn;\n    };\n    ImmediateDefinition.prototype.runIfPresent = function (handle) {\n        // From the spec: 'Wait until any invocations of this algorithm started before this one have completed.'\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (this.currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // 'too much recursion' error.\n            this.root.setTimeout(this.partiallyApplied(this.runIfPresent, handle), 0);\n        }\n        else {\n            var task = this.tasksByHandle[handle];\n            if (task) {\n                this.currentlyRunningATask = true;\n                try {\n                    task();\n                }\n                finally {\n                    this.clearImmediate(handle);\n                    this.currentlyRunningATask = false;\n                }\n            }\n        }\n    };\n    ImmediateDefinition.prototype.createMessageChannelSetImmediate = function () {\n        var _this = this;\n        var channel = new this.root.MessageChannel();\n        channel.port1.onmessage = function (event) {\n            var handle = event.data;\n            _this.runIfPresent(handle);\n        };\n        var fn = function setImmediate() {\n            var _a = setImmediate, channel = _a.channel, instance = _a.instance;\n            var handle = instance.addFromSetImmediateArguments(arguments);\n            channel.port2.postMessage(handle);\n            return handle;\n        };\n        fn.channel = channel;\n        fn.instance = this;\n        return fn;\n    };\n    ImmediateDefinition.prototype.createReadyStateChangeSetImmediate = function () {\n        var fn = function setImmediate() {\n            var instance = setImmediate.instance;\n            var root = instance.root;\n            var doc = root.document;\n            var html = doc.documentElement;\n            var handle = instance.addFromSetImmediateArguments(arguments);\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement('script');\n            script.onreadystatechange = function () {\n                instance.runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n            return handle;\n        };\n        fn.instance = this;\n        return fn;\n    };\n    ImmediateDefinition.prototype.createSetTimeoutSetImmediate = function () {\n        var fn = function setImmediate() {\n            var instance = setImmediate.instance;\n            var handle = instance.addFromSetImmediateArguments(arguments);\n            instance.root.setTimeout(instance.partiallyApplied(instance.runIfPresent, handle), 0);\n            return handle;\n        };\n        fn.instance = this;\n        return fn;\n    };\n    return ImmediateDefinition;\n}());\nexports.ImmediateDefinition = ImmediateDefinition;\nexports.Immediate = new ImmediateDefinition(root_1.root);\n//# sourceMappingURL=Immediate.js.map","\"use strict\";\nvar repeat_1 = require('../operators/repeat');\n/**\n * Returns an Observable that repeats the stream of items emitted by the source Observable at most count times.\n *\n * <img src=\"./img/repeat.png\" width=\"100%\">\n *\n * @param {number} [count] The number of times the source Observable items are repeated, a count of 0 will yield\n * an empty Observable.\n * @return {Observable} An Observable that repeats the stream of items emitted by the source Observable at most\n * count times.\n * @method repeat\n * @owner Observable\n */\nfunction repeat(count) {\n    if (count === void 0) { count = -1; }\n    return repeat_1.repeat(count)(this);\n}\nexports.repeat = repeat;\n//# sourceMappingURL=repeat.js.map","\"use strict\";\nvar skipWhile_1 = require('../operators/skipWhile');\n/**\n * Returns an Observable that skips all items emitted by the source Observable as long as a specified condition holds\n * true, but emits all further source items as soon as the condition becomes false.\n *\n * <img src=\"./img/skipWhile.png\" width=\"100%\">\n *\n * @param {Function} predicate - A function to test each item emitted from the source Observable.\n * @return {Observable<T>} An Observable that begins emitting items emitted by the source Observable when the\n * specified predicate becomes false.\n * @method skipWhile\n * @owner Observable\n */\nfunction skipWhile(predicate) {\n    return skipWhile_1.skipWhile(predicate)(this);\n}\nexports.skipWhile = skipWhile;\n//# sourceMappingURL=skipWhile.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar Subject_1 = require('../Subject');\n/**\n * Branch out the source Observable values as a nested Observable with each\n * nested Observable emitting at most `windowSize` values.\n *\n * <span class=\"informal\">It's like {@link bufferCount}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowCount.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows every `startWindowEvery`\n * items, each containing no more than `windowSize` items. When the source\n * Observable completes or encounters an error, the output Observable emits\n * the current window and propagates the notification from the source\n * Observable. If `startWindowEvery` is not provided, then new windows are\n * started immediately at the start of the source and when each window completes\n * with size `windowSize`.\n *\n * @example <caption>Ignore every 3rd click event, starting from the first one</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowCount(3)\n *   .map(win => win.skip(1)) // skip first of every 3 clicks\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Ignore every 3rd click event, starting from the third one</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowCount(2, 3)\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferCount}\n *\n * @param {number} windowSize The maximum number of values emitted by each\n * window.\n * @param {number} [startWindowEvery] Interval at which to start a new window.\n * For example if `startWindowEvery` is `2`, then a new window will be started\n * on every other value from the source. A new window is started at the\n * beginning of the source by default.\n * @return {Observable<Observable<T>>} An Observable of windows, which in turn\n * are Observable of values.\n * @method windowCount\n * @owner Observable\n */\nfunction windowCount(windowSize, startWindowEvery) {\n    if (startWindowEvery === void 0) { startWindowEvery = 0; }\n    return function windowCountOperatorFunction(source) {\n        return source.lift(new WindowCountOperator(windowSize, startWindowEvery));\n    };\n}\nexports.windowCount = windowCount;\nvar WindowCountOperator = (function () {\n    function WindowCountOperator(windowSize, startWindowEvery) {\n        this.windowSize = windowSize;\n        this.startWindowEvery = startWindowEvery;\n    }\n    WindowCountOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new WindowCountSubscriber(subscriber, this.windowSize, this.startWindowEvery));\n    };\n    return WindowCountOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WindowCountSubscriber = (function (_super) {\n    __extends(WindowCountSubscriber, _super);\n    function WindowCountSubscriber(destination, windowSize, startWindowEvery) {\n        _super.call(this, destination);\n        this.destination = destination;\n        this.windowSize = windowSize;\n        this.startWindowEvery = startWindowEvery;\n        this.windows = [new Subject_1.Subject()];\n        this.count = 0;\n        destination.next(this.windows[0]);\n    }\n    WindowCountSubscriber.prototype._next = function (value) {\n        var startWindowEvery = (this.startWindowEvery > 0) ? this.startWindowEvery : this.windowSize;\n        var destination = this.destination;\n        var windowSize = this.windowSize;\n        var windows = this.windows;\n        var len = windows.length;\n        for (var i = 0; i < len && !this.closed; i++) {\n            windows[i].next(value);\n        }\n        var c = this.count - windowSize + 1;\n        if (c >= 0 && c % startWindowEvery === 0 && !this.closed) {\n            windows.shift().complete();\n        }\n        if (++this.count % startWindowEvery === 0 && !this.closed) {\n            var window_1 = new Subject_1.Subject();\n            windows.push(window_1);\n            destination.next(window_1);\n        }\n    };\n    WindowCountSubscriber.prototype._error = function (err) {\n        var windows = this.windows;\n        if (windows) {\n            while (windows.length > 0 && !this.closed) {\n                windows.shift().error(err);\n            }\n        }\n        this.destination.error(err);\n    };\n    WindowCountSubscriber.prototype._complete = function () {\n        var windows = this.windows;\n        if (windows) {\n            while (windows.length > 0 && !this.closed) {\n                windows.shift().complete();\n            }\n        }\n        this.destination.complete();\n    };\n    /** @deprecated internal use only */ WindowCountSubscriber.prototype._unsubscribe = function () {\n        this.count = 0;\n        this.windows = null;\n    };\n    return WindowCountSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=windowCount.js.map","\"use strict\";\nvar AnimationFrameAction_1 = require('./AnimationFrameAction');\nvar AnimationFrameScheduler_1 = require('./AnimationFrameScheduler');\n/**\n *\n * Animation Frame Scheduler\n *\n * <span class=\"informal\">Perform task when `window.requestAnimationFrame` would fire</span>\n *\n * When `animationFrame` scheduler is used with delay, it will fall back to {@link async} scheduler\n * behaviour.\n *\n * Without delay, `animationFrame` scheduler can be used to create smooth browser animations.\n * It makes sure scheduled task will happen just before next browser content repaint,\n * thus performing animations as efficiently as possible.\n *\n * @example <caption>Schedule div height animation</caption>\n * const div = document.querySelector('.some-div');\n *\n * Rx.Scheduler.schedule(function(height) {\n *   div.style.height = height + \"px\";\n *\n *   this.schedule(height + 1);  // `this` references currently executing Action,\n *                               // which we reschedule with new state\n * }, 0, 0);\n *\n * // You will see .some-div element growing in height\n *\n *\n * @static true\n * @name animationFrame\n * @owner Scheduler\n */\nexports.animationFrame = new AnimationFrameScheduler_1.AnimationFrameScheduler(AnimationFrameAction_1.AnimationFrameAction);\n//# sourceMappingURL=animationFrame.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar zip_1 = require('../../observable/zip');\nObservable_1.Observable.zip = zip_1.zip;\n//# sourceMappingURL=zip.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Counts the number of emissions on the source and emits that number when the\n * source completes.\n *\n * <span class=\"informal\">Tells how many values were emitted, when the source\n * completes.</span>\n *\n * <img src=\"./img/count.png\" width=\"100%\">\n *\n * `count` transforms an Observable that emits values into an Observable that\n * emits a single value that represents the number of values emitted by the\n * source Observable. If the source Observable terminates with an error, `count`\n * will pass this error notification along without emitting a value first. If\n * the source Observable does not terminate at all, `count` will neither emit\n * a value nor terminate. This operator takes an optional `predicate` function\n * as argument, in which case the output emission will represent the number of\n * source values that matched `true` with the `predicate`.\n *\n * @example <caption>Counts how many seconds have passed before the first click happened</caption>\n * var seconds = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var secondsBeforeClick = seconds.takeUntil(clicks);\n * var result = secondsBeforeClick.count();\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Counts how many odd numbers are there between 1 and 7</caption>\n * var numbers = Rx.Observable.range(1, 7);\n * var result = numbers.count(i => i % 2 === 1);\n * result.subscribe(x => console.log(x));\n *\n * // Results in:\n * // 4\n *\n * @see {@link max}\n * @see {@link min}\n * @see {@link reduce}\n *\n * @param {function(value: T, i: number, source: Observable<T>): boolean} [predicate] A\n * boolean function to select what values are to be counted. It is provided with\n * arguments of:\n * - `value`: the value from the source Observable.\n * - `index`: the (zero-based) \"index\" of the value from the source Observable.\n * - `source`: the source Observable instance itself.\n * @return {Observable} An Observable of one number that represents the count as\n * described above.\n * @method count\n * @owner Observable\n */\nfunction count(predicate) {\n    return function (source) { return source.lift(new CountOperator(predicate, source)); };\n}\nexports.count = count;\nvar CountOperator = (function () {\n    function CountOperator(predicate, source) {\n        this.predicate = predicate;\n        this.source = source;\n    }\n    CountOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new CountSubscriber(subscriber, this.predicate, this.source));\n    };\n    return CountOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar CountSubscriber = (function (_super) {\n    __extends(CountSubscriber, _super);\n    function CountSubscriber(destination, predicate, source) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.source = source;\n        this.count = 0;\n        this.index = 0;\n    }\n    CountSubscriber.prototype._next = function (value) {\n        if (this.predicate) {\n            this._tryPredicate(value);\n        }\n        else {\n            this.count++;\n        }\n    };\n    CountSubscriber.prototype._tryPredicate = function (value) {\n        var result;\n        try {\n            result = this.predicate(value, this.index++, this.source);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this.count++;\n        }\n    };\n    CountSubscriber.prototype._complete = function () {\n        this.destination.next(this.count);\n        this.destination.complete();\n    };\n    return CountSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=count.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar take_1 = require('../../operator/take');\nObservable_1.Observable.prototype.take = take_1.take;\n//# sourceMappingURL=take.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nvar ObjectUnsubscribedError = (function (_super) {\n    __extends(ObjectUnsubscribedError, _super);\n    function ObjectUnsubscribedError() {\n        var err = _super.call(this, 'object unsubscribed');\n        this.name = err.name = 'ObjectUnsubscribedError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return ObjectUnsubscribedError;\n}(Error));\nexports.ObjectUnsubscribedError = ObjectUnsubscribedError;\n//# sourceMappingURL=ObjectUnsubscribedError.js.map","var getBuiltIn = require('../internals/get-built-in');\nvar getOwnPropertyNamesModule = require('../internals/object-get-own-property-names');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar anObject = require('../internals/an-object');\n\n// all object keys, includes non-enumerable and symbols\nmodule.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {\n  var keys = getOwnPropertyNamesModule.f(anObject(it));\n  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;\n  return getOwnPropertySymbols ? keys.concat(getOwnPropertySymbols(it)) : keys;\n};\n","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar ArgumentOutOfRangeError_1 = require('../util/ArgumentOutOfRangeError');\nvar EmptyObservable_1 = require('../observable/EmptyObservable');\n/**\n * Emits only the last `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Remembers the latest `count` values, then emits those\n * only when the source completes.</span>\n *\n * <img src=\"./img/takeLast.png\" width=\"100%\">\n *\n * `takeLast` returns an Observable that emits at most the last `count` values\n * emitted by the source Observable. If the source emits fewer than `count`\n * values then all of its values are emitted. This operator must wait until the\n * `complete` notification emission from the source in order to emit the `next`\n * values on the output Observable, because otherwise it is impossible to know\n * whether or not more values will be emitted on the source. For this reason,\n * all values are emitted synchronously, followed by the complete notification.\n *\n * @example <caption>Take the last 3 values of an Observable with many values</caption>\n * var many = Rx.Observable.range(1, 100);\n * var lastThree = many.takeLast(3);\n * lastThree.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `takeLast(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of values to emit from the end of\n * the sequence of values emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits at most the last count\n * values emitted by the source Observable.\n * @method takeLast\n * @owner Observable\n */\nfunction takeLast(count) {\n    return function takeLastOperatorFunction(source) {\n        if (count === 0) {\n            return new EmptyObservable_1.EmptyObservable();\n        }\n        else {\n            return source.lift(new TakeLastOperator(count));\n        }\n    };\n}\nexports.takeLast = takeLast;\nvar TakeLastOperator = (function () {\n    function TakeLastOperator(total) {\n        this.total = total;\n        if (this.total < 0) {\n            throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;\n        }\n    }\n    TakeLastOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TakeLastSubscriber(subscriber, this.total));\n    };\n    return TakeLastOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TakeLastSubscriber = (function (_super) {\n    __extends(TakeLastSubscriber, _super);\n    function TakeLastSubscriber(destination, total) {\n        _super.call(this, destination);\n        this.total = total;\n        this.ring = new Array();\n        this.count = 0;\n    }\n    TakeLastSubscriber.prototype._next = function (value) {\n        var ring = this.ring;\n        var total = this.total;\n        var count = this.count++;\n        if (ring.length < total) {\n            ring.push(value);\n        }\n        else {\n            var index = count % total;\n            ring[index] = value;\n        }\n    };\n    TakeLastSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        var count = this.count;\n        if (count > 0) {\n            var total = this.count >= this.total ? this.total : this.count;\n            var ring = this.ring;\n            for (var i = 0; i < total; i++) {\n                var idx = (count++) % total;\n                destination.next(ring[idx]);\n            }\n        }\n        destination.complete();\n    };\n    return TakeLastSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=takeLast.js.map","// a string of all valid unicode whitespaces\n// eslint-disable-next-line max-len\nmodule.exports = '\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n","var requireObjectCoercible = require('../internals/require-object-coercible');\nvar whitespaces = require('../internals/whitespaces');\n\nvar whitespace = '[' + whitespaces + ']';\nvar ltrim = RegExp('^' + whitespace + whitespace + '*');\nvar rtrim = RegExp(whitespace + whitespace + '*$');\n\n// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation\nvar createMethod = function (TYPE) {\n  return function ($this) {\n    var string = String(requireObjectCoercible($this));\n    if (TYPE & 1) string = string.replace(ltrim, '');\n    if (TYPE & 2) string = string.replace(rtrim, '');\n    return string;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.{ trimLeft, trimStart }` methods\n  // https://tc39.github.io/ecma262/#sec-string.prototype.trimstart\n  start: createMethod(1),\n  // `String.prototype.{ trimRight, trimEnd }` methods\n  // https://tc39.github.io/ecma262/#sec-string.prototype.trimend\n  end: createMethod(2),\n  // `String.prototype.trim` method\n  // https://tc39.github.io/ecma262/#sec-string.prototype.trim\n  trim: createMethod(3)\n};\n","\"use strict\";\nvar min_1 = require('../operators/min');\n/**\n * The Min operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\n * and when source Observable completes it emits a single item: the item with the smallest value.\n *\n * <img src=\"./img/min.png\" width=\"100%\">\n *\n * @example <caption>Get the minimal value of a series of numbers</caption>\n * Rx.Observable.of(5, 4, 7, 2, 8)\n *   .min()\n *   .subscribe(x => console.log(x)); // -> 2\n *\n * @example <caption>Use a comparer function to get the minimal item</caption>\n * interface Person {\n *   age: number,\n *   name: string\n * }\n * Observable.of<Person>({age: 7, name: 'Foo'},\n *                       {age: 5, name: 'Bar'},\n *                       {age: 9, name: 'Beer'})\n *           .min<Person>( (a: Person, b: Person) => a.age < b.age ? -1 : 1)\n *           .subscribe((x: Person) => console.log(x.name)); // -> 'Bar'\n * }\n *\n * @see {@link max}\n *\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\n * value of two items.\n * @return {Observable<R>} An Observable that emits item with the smallest value.\n * @method min\n * @owner Observable\n */\nfunction min(comparer) {\n    return min_1.min(comparer)(this);\n}\nexports.min = min;\n//# sourceMappingURL=min.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar isNumeric_1 = require('../util/isNumeric');\nvar Observable_1 = require('../Observable');\nvar async_1 = require('../scheduler/async');\nvar isScheduler_1 = require('../util/isScheduler');\nvar isDate_1 = require('../util/isDate');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar TimerObservable = (function (_super) {\n    __extends(TimerObservable, _super);\n    function TimerObservable(dueTime, period, scheduler) {\n        if (dueTime === void 0) { dueTime = 0; }\n        _super.call(this);\n        this.period = -1;\n        this.dueTime = 0;\n        if (isNumeric_1.isNumeric(period)) {\n            this.period = Number(period) < 1 && 1 || Number(period);\n        }\n        else if (isScheduler_1.isScheduler(period)) {\n            scheduler = period;\n        }\n        if (!isScheduler_1.isScheduler(scheduler)) {\n            scheduler = async_1.async;\n        }\n        this.scheduler = scheduler;\n        this.dueTime = isDate_1.isDate(dueTime) ?\n            (+dueTime - this.scheduler.now()) :\n            dueTime;\n    }\n    /**\n     * Creates an Observable that starts emitting after an `initialDelay` and\n     * emits ever increasing numbers after each `period` of time thereafter.\n     *\n     * <span class=\"informal\">Its like {@link interval}, but you can specify when\n     * should the emissions start.</span>\n     *\n     * <img src=\"./img/timer.png\" width=\"100%\">\n     *\n     * `timer` returns an Observable that emits an infinite sequence of ascending\n     * integers, with a constant interval of time, `period` of your choosing\n     * between those emissions. The first emission happens after the specified\n     * `initialDelay`. The initial delay may be a {@link Date}. By default, this\n     * operator uses the `async` IScheduler to provide a notion of time, but you\n     * may pass any IScheduler to it. If `period` is not specified, the output\n     * Observable emits only one value, `0`. Otherwise, it emits an infinite\n     * sequence.\n     *\n     * @example <caption>Emits ascending numbers, one every second (1000ms), starting after 3 seconds</caption>\n     * var numbers = Rx.Observable.timer(3000, 1000);\n     * numbers.subscribe(x => console.log(x));\n     *\n     * @example <caption>Emits one number after five seconds</caption>\n     * var numbers = Rx.Observable.timer(5000);\n     * numbers.subscribe(x => console.log(x));\n     *\n     * @see {@link interval}\n     * @see {@link delay}\n     *\n     * @param {number|Date} initialDelay The initial delay time to wait before\n     * emitting the first value of `0`.\n     * @param {number} [period] The period of time between emissions of the\n     * subsequent numbers.\n     * @param {Scheduler} [scheduler=async] The IScheduler to use for scheduling\n     * the emission of values, and providing a notion of \"time\".\n     * @return {Observable} An Observable that emits a `0` after the\n     * `initialDelay` and ever increasing numbers after each `period` of time\n     * thereafter.\n     * @static true\n     * @name timer\n     * @owner Observable\n     */\n    TimerObservable.create = function (initialDelay, period, scheduler) {\n        if (initialDelay === void 0) { initialDelay = 0; }\n        return new TimerObservable(initialDelay, period, scheduler);\n    };\n    TimerObservable.dispatch = function (state) {\n        var index = state.index, period = state.period, subscriber = state.subscriber;\n        var action = this;\n        subscriber.next(index);\n        if (subscriber.closed) {\n            return;\n        }\n        else if (period === -1) {\n            return subscriber.complete();\n        }\n        state.index = index + 1;\n        action.schedule(state, period);\n    };\n    /** @deprecated internal use only */ TimerObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var _a = this, period = _a.period, dueTime = _a.dueTime, scheduler = _a.scheduler;\n        return scheduler.schedule(TimerObservable.dispatch, dueTime, {\n            index: index, period: period, subscriber: subscriber\n        });\n    };\n    return TimerObservable;\n}(Observable_1.Observable));\nexports.TimerObservable = TimerObservable;\n//# sourceMappingURL=TimerObservable.js.map","var isRegExp = require('../internals/is-regexp');\n\nmodule.exports = function (it) {\n  if (isRegExp(it)) {\n    throw TypeError(\"The method doesn't accept regular expressions\");\n  } return it;\n};\n","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar mapTo_1 = require('../../operator/mapTo');\nObservable_1.Observable.prototype.mapTo = mapTo_1.mapTo;\n//# sourceMappingURL=mapTo.js.map","\"use strict\";\nvar find_1 = require('../operators/find');\n/**\n * Emits only the index of the first value emitted by the source Observable that\n * meets some condition.\n *\n * <span class=\"informal\">It's like {@link find}, but emits the index of the\n * found value, not the value itself.</span>\n *\n * <img src=\"./img/findIndex.png\" width=\"100%\">\n *\n * `findIndex` searches for the first item in the source Observable that matches\n * the specified condition embodied by the `predicate`, and returns the\n * (zero-based) index of the first occurrence in the source. Unlike\n * {@link first}, the `predicate` is required in `findIndex`, and does not emit\n * an error if a valid value is not found.\n *\n * @example <caption>Emit the index of first click that happens on a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.findIndex(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link first}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of the index of the first item that\n * matches the condition.\n * @method find\n * @owner Observable\n */\nfunction findIndex(predicate, thisArg) {\n    return function (source) { return source.lift(new find_1.FindValueOperator(predicate, source, true, thisArg)); };\n}\nexports.findIndex = findIndex;\n//# sourceMappingURL=findIndex.js.map","\"use strict\";\nvar multicast_1 = require('./multicast');\nvar refCount_1 = require('./refCount');\nvar Subject_1 = require('../Subject');\nfunction shareSubjectFactory() {\n    return new Subject_1.Subject();\n}\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n * This is an alias for .multicast(() => new Subject()).refCount().\n *\n * <img src=\"./img/share.png\" width=\"100%\">\n *\n * @return {Observable<T>} An Observable that upon connection causes the source Observable to emit items to its Observers.\n * @method share\n * @owner Observable\n */\nfunction share() {\n    return function (source) { return refCount_1.refCount()(multicast_1.multicast(shareSubjectFactory)(source)); };\n}\nexports.share = share;\n;\n//# sourceMappingURL=share.js.map","\"use strict\";\nvar map_1 = require('./map');\n/**\n * Maps each source value (an object) to its specified nested property.\n *\n * <span class=\"informal\">Like {@link map}, but meant only for picking one of\n * the nested properties of every emitted object.</span>\n *\n * <img src=\"./img/pluck.png\" width=\"100%\">\n *\n * Given a list of strings describing a path to an object property, retrieves\n * the value of a specified nested property from all values in the source\n * Observable. If a property can't be resolved, it will return `undefined` for\n * that value.\n *\n * @example <caption>Map every click to the tagName of the clicked target element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var tagNames = clicks.pluck('target', 'tagName');\n * tagNames.subscribe(x => console.log(x));\n *\n * @see {@link map}\n *\n * @param {...string} properties The nested properties to pluck from each source\n * value (an object).\n * @return {Observable} A new Observable of property values from the source values.\n * @method pluck\n * @owner Observable\n */\nfunction pluck() {\n    var properties = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        properties[_i - 0] = arguments[_i];\n    }\n    var length = properties.length;\n    if (length === 0) {\n        throw new Error('list of properties cannot be empty.');\n    }\n    return function (source) { return map_1.map(plucker(properties, length))(source); };\n}\nexports.pluck = pluck;\nfunction plucker(props, length) {\n    var mapper = function (x) {\n        var currentProp = x;\n        for (var i = 0; i < length; i++) {\n            var p = currentProp[props[i]];\n            if (typeof p !== 'undefined') {\n                currentProp = p;\n            }\n            else {\n                return undefined;\n            }\n        }\n        return currentProp;\n    };\n    return mapper;\n}\n//# sourceMappingURL=pluck.js.map","\"use strict\";\nvar root_1 = require('./root');\nvar RequestAnimationFrameDefinition = (function () {\n    function RequestAnimationFrameDefinition(root) {\n        if (root.requestAnimationFrame) {\n            this.cancelAnimationFrame = root.cancelAnimationFrame.bind(root);\n            this.requestAnimationFrame = root.requestAnimationFrame.bind(root);\n        }\n        else if (root.mozRequestAnimationFrame) {\n            this.cancelAnimationFrame = root.mozCancelAnimationFrame.bind(root);\n            this.requestAnimationFrame = root.mozRequestAnimationFrame.bind(root);\n        }\n        else if (root.webkitRequestAnimationFrame) {\n            this.cancelAnimationFrame = root.webkitCancelAnimationFrame.bind(root);\n            this.requestAnimationFrame = root.webkitRequestAnimationFrame.bind(root);\n        }\n        else if (root.msRequestAnimationFrame) {\n            this.cancelAnimationFrame = root.msCancelAnimationFrame.bind(root);\n            this.requestAnimationFrame = root.msRequestAnimationFrame.bind(root);\n        }\n        else if (root.oRequestAnimationFrame) {\n            this.cancelAnimationFrame = root.oCancelAnimationFrame.bind(root);\n            this.requestAnimationFrame = root.oRequestAnimationFrame.bind(root);\n        }\n        else {\n            this.cancelAnimationFrame = root.clearTimeout.bind(root);\n            this.requestAnimationFrame = function (cb) { return root.setTimeout(cb, 1000 / 60); };\n        }\n    }\n    return RequestAnimationFrameDefinition;\n}());\nexports.RequestAnimationFrameDefinition = RequestAnimationFrameDefinition;\nexports.AnimationFrame = new RequestAnimationFrameDefinition(root_1.root);\n//# sourceMappingURL=AnimationFrame.js.map","\"use strict\";\nvar race_1 = require('../operators/race');\n// NOTE: to support backwards compatability with 5.4.* and lower\nvar race_2 = require('../observable/race');\nexports.raceStatic = race_2.race;\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that mirrors the first source Observable to emit an item\n * from the combination of this Observable and supplied Observables.\n * @param {...Observables} ...observables Sources used to race for which Observable emits first.\n * @return {Observable} An Observable that mirrors the output of the first Observable to emit an item.\n * @method race\n * @owner Observable\n */\nfunction race() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    return race_1.race.apply(void 0, observables)(this);\n}\nexports.race = race;\n//# sourceMappingURL=race.js.map","\"use strict\";\nvar isArray_1 = require('../util/isArray');\nvar race_1 = require('../observable/race');\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that mirrors the first source Observable to emit an item\n * from the combination of this Observable and supplied Observables.\n * @param {...Observables} ...observables Sources used to race for which Observable emits first.\n * @return {Observable} An Observable that mirrors the output of the first Observable to emit an item.\n * @method race\n * @owner Observable\n */\nfunction race() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    return function raceOperatorFunction(source) {\n        // if the only argument is an array, it was most likely called with\n        // `pair([obs1, obs2, ...])`\n        if (observables.length === 1 && isArray_1.isArray(observables[0])) {\n            observables = observables[0];\n        }\n        return source.lift.call(race_1.race.apply(void 0, [source].concat(observables)));\n    };\n}\nexports.race = race;\n//# sourceMappingURL=race.js.map","\"use strict\";\nvar filter_1 = require('../operators/filter');\n/* tslint:enable:max-line-length */\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * <img src=\"./img/filter.png\" width=\"100%\">\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * @example <caption>Emit only click events whose target was a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksOnDivs = clicks.filter(ev => ev.target.tagName === 'DIV');\n * clicksOnDivs.subscribe(x => console.log(x));\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\nfunction filter(predicate, thisArg) {\n    return filter_1.filter(predicate, thisArg)(this);\n}\nexports.filter = filter;\n//# sourceMappingURL=filter.js.map","\"use strict\";\nvar publishLast_1 = require('../operators/publishLast');\n/**\n * @return {ConnectableObservable<T>}\n * @method publishLast\n * @owner Observable\n */\nfunction publishLast() {\n    //TODO(benlesh): correct type-flow through here.\n    return publishLast_1.publishLast()(this);\n}\nexports.publishLast = publishLast;\n//# sourceMappingURL=publishLast.js.map","\"use strict\";\nvar mergeMap_1 = require('./mergeMap');\nvar identity_1 = require('../util/identity');\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * <img src=\"./img/mergeAll.png\" width=\"100%\">\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Spawn a new interval Observable for each click event, and blend their outputs as one Observable</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));\n * var firstOrder = higherOrder.mergeAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * @example <caption>Count from 0 to 9 every second for each click, but only allow 2 concurrent timers</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(10));\n * var firstOrder = higherOrder.mergeAll(2);\n * firstOrder.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits values coming from all the\n * inner Observables emitted by the source Observable.\n * @method mergeAll\n * @owner Observable\n */\nfunction mergeAll(concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    return mergeMap_1.mergeMap(identity_1.identity, null, concurrent);\n}\nexports.mergeAll = mergeAll;\n//# sourceMappingURL=mergeAll.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/* tslint:enable:max-line-length */\n/**\n * Combines the source Observable with other Observables to create an Observable\n * whose values are calculated from the latest values of each, only when the\n * source emits.\n *\n * <span class=\"informal\">Whenever the source Observable emits a value, it\n * computes a formula using that value plus the latest values from other input\n * Observables, then emits the output of that formula.</span>\n *\n * <img src=\"./img/withLatestFrom.png\" width=\"100%\">\n *\n * `withLatestFrom` combines each value from the source Observable (the\n * instance) with the latest values from the other input Observables only when\n * the source emits a value, optionally using a `project` function to determine\n * the value to be emitted on the output Observable. All input Observables must\n * emit at least one value before the output Observable will emit a value.\n *\n * @example <caption>On every click event, emit an array with the latest timer event plus the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var result = clicks.withLatestFrom(timer);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineLatest}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Function} [project] Projection function for combining values\n * together. Receives all values in order of the Observables passed, where the\n * first parameter is a value from the source Observable. (e.g.\n * `a.withLatestFrom(b, c, (a1, b1, c1) => a1 + b1 + c1)`). If this is not\n * passed, arrays will be emitted on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method withLatestFrom\n * @owner Observable\n */\nfunction withLatestFrom() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i - 0] = arguments[_i];\n    }\n    return function (source) {\n        var project;\n        if (typeof args[args.length - 1] === 'function') {\n            project = args.pop();\n        }\n        var observables = args;\n        return source.lift(new WithLatestFromOperator(observables, project));\n    };\n}\nexports.withLatestFrom = withLatestFrom;\nvar WithLatestFromOperator = (function () {\n    function WithLatestFromOperator(observables, project) {\n        this.observables = observables;\n        this.project = project;\n    }\n    WithLatestFromOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));\n    };\n    return WithLatestFromOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WithLatestFromSubscriber = (function (_super) {\n    __extends(WithLatestFromSubscriber, _super);\n    function WithLatestFromSubscriber(destination, observables, project) {\n        _super.call(this, destination);\n        this.observables = observables;\n        this.project = project;\n        this.toRespond = [];\n        var len = observables.length;\n        this.values = new Array(len);\n        for (var i = 0; i < len; i++) {\n            this.toRespond.push(i);\n        }\n        for (var i = 0; i < len; i++) {\n            var observable = observables[i];\n            this.add(subscribeToResult_1.subscribeToResult(this, observable, observable, i));\n        }\n    }\n    WithLatestFromSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.values[outerIndex] = innerValue;\n        var toRespond = this.toRespond;\n        if (toRespond.length > 0) {\n            var found = toRespond.indexOf(outerIndex);\n            if (found !== -1) {\n                toRespond.splice(found, 1);\n            }\n        }\n    };\n    WithLatestFromSubscriber.prototype.notifyComplete = function () {\n        // noop\n    };\n    WithLatestFromSubscriber.prototype._next = function (value) {\n        if (this.toRespond.length === 0) {\n            var args = [value].concat(this.values);\n            if (this.project) {\n                this._tryProject(args);\n            }\n            else {\n                this.destination.next(args);\n            }\n        }\n    };\n    WithLatestFromSubscriber.prototype._tryProject = function (args) {\n        var result;\n        try {\n            result = this.project.apply(this, args);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return WithLatestFromSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=withLatestFrom.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar every_1 = require('../../operator/every');\nObservable_1.Observable.prototype.every = every_1.every;\n//# sourceMappingURL=every.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar ArgumentOutOfRangeError_1 = require('../util/ArgumentOutOfRangeError');\nvar EmptyObservable_1 = require('../observable/EmptyObservable');\n/**\n * Emits only the first `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Takes the first `count` values from the source, then\n * completes.</span>\n *\n * <img src=\"./img/take.png\" width=\"100%\">\n *\n * `take` returns an Observable that emits only the first `count` values emitted\n * by the source Observable. If the source emits fewer than `count` values then\n * all of its values are emitted. After that, it completes, regardless if the\n * source completes.\n *\n * @example <caption>Take the first 5 seconds of an infinite 1-second interval Observable</caption>\n * var interval = Rx.Observable.interval(1000);\n * var five = interval.take(5);\n * five.subscribe(x => console.log(x));\n *\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `take(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of `next` values to emit.\n * @return {Observable<T>} An Observable that emits only the first `count`\n * values emitted by the source Observable, or all of the values from the source\n * if the source emits fewer than `count` values.\n * @method take\n * @owner Observable\n */\nfunction take(count) {\n    return function (source) {\n        if (count === 0) {\n            return new EmptyObservable_1.EmptyObservable();\n        }\n        else {\n            return source.lift(new TakeOperator(count));\n        }\n    };\n}\nexports.take = take;\nvar TakeOperator = (function () {\n    function TakeOperator(total) {\n        this.total = total;\n        if (this.total < 0) {\n            throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;\n        }\n    }\n    TakeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TakeSubscriber(subscriber, this.total));\n    };\n    return TakeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TakeSubscriber = (function (_super) {\n    __extends(TakeSubscriber, _super);\n    function TakeSubscriber(destination, total) {\n        _super.call(this, destination);\n        this.total = total;\n        this.count = 0;\n    }\n    TakeSubscriber.prototype._next = function (value) {\n        var total = this.total;\n        var count = ++this.count;\n        if (count <= total) {\n            this.destination.next(value);\n            if (count === total) {\n                this.destination.complete();\n                this.unsubscribe();\n            }\n        }\n    };\n    return TakeSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=take.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar async_1 = require('../scheduler/async');\n/**\n * Emits the most recently emitted value from the source Observable within\n * periodic time intervals.\n *\n * <span class=\"informal\">Samples the source Observable at periodic time\n * intervals, emitting what it samples.</span>\n *\n * <img src=\"./img/sampleTime.png\" width=\"100%\">\n *\n * `sampleTime` periodically looks at the source Observable and emits whichever\n * value it has most recently emitted since the previous sampling, unless the\n * source has not emitted anything since the previous sampling. The sampling\n * happens periodically in time every `period` milliseconds (or the time unit\n * defined by the optional `scheduler` argument). The sampling starts as soon as\n * the output Observable is subscribed.\n *\n * @example <caption>Every second, emit the most recent click at most once</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.sampleTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {number} period The sampling period expressed in milliseconds or the\n * time unit determined internally by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the sampling.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable at the specified time interval.\n * @method sampleTime\n * @owner Observable\n */\nfunction sampleTime(period, scheduler) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    return function (source) { return source.lift(new SampleTimeOperator(period, scheduler)); };\n}\nexports.sampleTime = sampleTime;\nvar SampleTimeOperator = (function () {\n    function SampleTimeOperator(period, scheduler) {\n        this.period = period;\n        this.scheduler = scheduler;\n    }\n    SampleTimeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SampleTimeSubscriber(subscriber, this.period, this.scheduler));\n    };\n    return SampleTimeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SampleTimeSubscriber = (function (_super) {\n    __extends(SampleTimeSubscriber, _super);\n    function SampleTimeSubscriber(destination, period, scheduler) {\n        _super.call(this, destination);\n        this.period = period;\n        this.scheduler = scheduler;\n        this.hasValue = false;\n        this.add(scheduler.schedule(dispatchNotification, period, { subscriber: this, period: period }));\n    }\n    SampleTimeSubscriber.prototype._next = function (value) {\n        this.lastValue = value;\n        this.hasValue = true;\n    };\n    SampleTimeSubscriber.prototype.notifyNext = function () {\n        if (this.hasValue) {\n            this.hasValue = false;\n            this.destination.next(this.lastValue);\n        }\n    };\n    return SampleTimeSubscriber;\n}(Subscriber_1.Subscriber));\nfunction dispatchNotification(state) {\n    var subscriber = state.subscriber, period = state.period;\n    subscriber.notifyNext();\n    this.schedule(state, period);\n}\n//# sourceMappingURL=sampleTime.js.map","\"use strict\";\nvar scan_1 = require('./scan');\nvar takeLast_1 = require('./takeLast');\nvar defaultIfEmpty_1 = require('./defaultIfEmpty');\nvar pipe_1 = require('../util/pipe');\n/* tslint:enable:max-line-length */\n/**\n * Applies an accumulator function over the source Observable, and returns the\n * accumulated result when the source completes, given an optional seed value.\n *\n * <span class=\"informal\">Combines together all values emitted on the source,\n * using an accumulator function that knows how to join a new source value into\n * the accumulation from the past.</span>\n *\n * <img src=\"./img/reduce.png\" width=\"100%\">\n *\n * Like\n * [Array.prototype.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce),\n * `reduce` applies an `accumulator` function against an accumulation and each\n * value of the source Observable (from the past) to reduce it to a single\n * value, emitted on the output Observable. Note that `reduce` will only emit\n * one value, only when the source Observable completes. It is equivalent to\n * applying operator {@link scan} followed by operator {@link last}.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * @example <caption>Count the number of click events that happened in 5 seconds</caption>\n * var clicksInFiveSeconds = Rx.Observable.fromEvent(document, 'click')\n *   .takeUntil(Rx.Observable.interval(5000));\n * var ones = clicksInFiveSeconds.mapTo(1);\n * var seed = 0;\n * var count = ones.reduce((acc, one) => acc + one, seed);\n * count.subscribe(x => console.log(x));\n *\n * @see {@link count}\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link scan}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator The accumulator function\n * called on each source value.\n * @param {R} [seed] The initial accumulation value.\n * @return {Observable<R>} An Observable that emits a single value that is the\n * result of accumulating the values emitted by the source Observable.\n * @method reduce\n * @owner Observable\n */\nfunction reduce(accumulator, seed) {\n    // providing a seed of `undefined` *should* be valid and trigger\n    // hasSeed! so don't use `seed !== undefined` checks!\n    // For this reason, we have to check it here at the original call site\n    // otherwise inside Operator/Subscriber we won't know if `undefined`\n    // means they didn't provide anything or if they literally provided `undefined`\n    if (arguments.length >= 2) {\n        return function reduceOperatorFunctionWithSeed(source) {\n            return pipe_1.pipe(scan_1.scan(accumulator, seed), takeLast_1.takeLast(1), defaultIfEmpty_1.defaultIfEmpty(seed))(source);\n        };\n    }\n    return function reduceOperatorFunction(source) {\n        return pipe_1.pipe(scan_1.scan(function (acc, value, index) {\n            return accumulator(acc, value, index + 1);\n        }), takeLast_1.takeLast(1))(source);\n    };\n}\nexports.reduce = reduce;\n//# sourceMappingURL=reduce.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar exhaust_1 = require('../../operator/exhaust');\nObservable_1.Observable.prototype.exhaust = exhaust_1.exhaust;\n//# sourceMappingURL=exhaust.js.map","\"use strict\";\nfunction not(pred, thisArg) {\n    function notPred() {\n        return !(notPred.pred.apply(notPred.thisArg, arguments));\n    }\n    notPred.pred = pred;\n    notPred.thisArg = thisArg;\n    return notPred;\n}\nexports.not = not;\n//# sourceMappingURL=not.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar reduce_1 = require('../../operator/reduce');\nObservable_1.Observable.prototype.reduce = reduce_1.reduce;\n//# sourceMappingURL=reduce.js.map","\"use strict\";\nvar distinct_1 = require('../operators/distinct');\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from previous items.\n *\n * If a keySelector function is provided, then it will project each value from the source observable into a new value that it will\n * check for equality with previously projected values. If a keySelector function is not provided, it will use each value from the\n * source observable directly with an equality check against previous values.\n *\n * In JavaScript runtimes that support `Set`, this operator will use a `Set` to improve performance of the distinct value checking.\n *\n * In other runtimes, this operator will use a minimal implementation of `Set` that relies on an `Array` and `indexOf` under the\n * hood, so performance will degrade as more values are checked for distinction. Even in newer browsers, a long-running `distinct`\n * use might result in memory leaks. To help alleviate this in some scenarios, an optional `flushes` parameter is also provided so\n * that the internal `Set` can be \"flushed\", basically clearing it of values.\n *\n * @example <caption>A simple example with numbers</caption>\n * Observable.of(1, 1, 2, 2, 2, 1, 2, 3, 4, 3, 2, 1)\n *   .distinct()\n *   .subscribe(x => console.log(x)); // 1, 2, 3, 4\n *\n * @example <caption>An example using a keySelector function</caption>\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'})\n *     .distinct((p: Person) => p.name)\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n *\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [keySelector] Optional function to select which value you want to check as distinct.\n * @param {Observable} [flushes] Optional Observable for flushing the internal HashSet of the operator.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinct\n * @owner Observable\n */\nfunction distinct(keySelector, flushes) {\n    return distinct_1.distinct(keySelector, flushes)(this);\n}\nexports.distinct = distinct;\n//# sourceMappingURL=distinct.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar empty_1 = require('../../observable/empty');\nObservable_1.Observable.empty = empty_1.empty;\n//# sourceMappingURL=empty.js.map","\"use strict\";\nvar AsapAction_1 = require('./AsapAction');\nvar AsapScheduler_1 = require('./AsapScheduler');\n/**\n *\n * Asap Scheduler\n *\n * <span class=\"informal\">Perform task as fast as it can be performed asynchronously</span>\n *\n * `asap` scheduler behaves the same as {@link async} scheduler when you use it to delay task\n * in time. If however you set delay to `0`, `asap` will wait for current synchronously executing\n * code to end and then it will try to execute given task as fast as possible.\n *\n * `asap` scheduler will do its best to minimize time between end of currently executing code\n * and start of scheduled task. This makes it best candidate for performing so called \"deferring\".\n * Traditionally this was achieved by calling `setTimeout(deferredTask, 0)`, but that technique involves\n * some (although minimal) unwanted delay.\n *\n * Note that using `asap` scheduler does not necessarily mean that your task will be first to process\n * after currently executing code. In particular, if some task was also scheduled with `asap` before,\n * that task will execute first. That being said, if you need to schedule task asynchronously, but\n * as soon as possible, `asap` scheduler is your best bet.\n *\n * @example <caption>Compare async and asap scheduler</caption>\n *\n * Rx.Scheduler.async.schedule(() => console.log('async')); // scheduling 'async' first...\n * Rx.Scheduler.asap.schedule(() => console.log('asap'));\n *\n * // Logs:\n * // \"asap\"\n * // \"async\"\n * // ... but 'asap' goes first!\n *\n * @static true\n * @name asap\n * @owner Scheduler\n */\nexports.asap = new AsapScheduler_1.AsapScheduler(AsapAction_1.AsapAction);\n//# sourceMappingURL=asap.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar Notification_1 = require('../Notification');\n/**\n * Represents all of the notifications from the source Observable as `next`\n * emissions marked with their original types within {@link Notification}\n * objects.\n *\n * <span class=\"informal\">Wraps `next`, `error` and `complete` emissions in\n * {@link Notification} objects, emitted as `next` on the output Observable.\n * </span>\n *\n * <img src=\"./img/materialize.png\" width=\"100%\">\n *\n * `materialize` returns an Observable that emits a `next` notification for each\n * `next`, `error`, or `complete` emission of the source Observable. When the\n * source Observable emits `complete`, the output Observable will emit `next` as\n * a Notification of type \"complete\", and then it will emit `complete` as well.\n * When the source Observable emits `error`, the output will emit `next` as a\n * Notification of type \"error\", and then `complete`.\n *\n * This operator is useful for producing metadata of the source Observable, to\n * be consumed as `next` emissions. Use it in conjunction with\n * {@link dematerialize}.\n *\n * @example <caption>Convert a faulty Observable to an Observable of Notifications</caption>\n * var letters = Rx.Observable.of('a', 'b', 13, 'd');\n * var upperCase = letters.map(x => x.toUpperCase());\n * var materialized = upperCase.materialize();\n * materialized.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - Notification {kind: \"N\", value: \"A\", error: undefined, hasValue: true}\n * // - Notification {kind: \"N\", value: \"B\", error: undefined, hasValue: true}\n * // - Notification {kind: \"E\", value: undefined, error: TypeError:\n * //   x.toUpperCase is not a function at MapSubscriber.letters.map.x\n * //   [as project] (http://1…, hasValue: false}\n *\n * @see {@link Notification}\n * @see {@link dematerialize}\n *\n * @return {Observable<Notification<T>>} An Observable that emits\n * {@link Notification} objects that wrap the original emissions from the source\n * Observable with metadata.\n * @method materialize\n * @owner Observable\n */\nfunction materialize() {\n    return function materializeOperatorFunction(source) {\n        return source.lift(new MaterializeOperator());\n    };\n}\nexports.materialize = materialize;\nvar MaterializeOperator = (function () {\n    function MaterializeOperator() {\n    }\n    MaterializeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MaterializeSubscriber(subscriber));\n    };\n    return MaterializeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MaterializeSubscriber = (function (_super) {\n    __extends(MaterializeSubscriber, _super);\n    function MaterializeSubscriber(destination) {\n        _super.call(this, destination);\n    }\n    MaterializeSubscriber.prototype._next = function (value) {\n        this.destination.next(Notification_1.Notification.createNext(value));\n    };\n    MaterializeSubscriber.prototype._error = function (err) {\n        var destination = this.destination;\n        destination.next(Notification_1.Notification.createError(err));\n        destination.complete();\n    };\n    MaterializeSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        destination.next(Notification_1.Notification.createComplete());\n        destination.complete();\n    };\n    return MaterializeSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=materialize.js.map","\"use strict\";\nvar takeUntil_1 = require('../operators/takeUntil');\n/**\n * Emits the values emitted by the source Observable until a `notifier`\n * Observable emits a value.\n *\n * <span class=\"informal\">Lets values pass until a second Observable,\n * `notifier`, emits something. Then, it completes.</span>\n *\n * <img src=\"./img/takeUntil.png\" width=\"100%\">\n *\n * `takeUntil` subscribes and begins mirroring the source Observable. It also\n * monitors a second Observable, `notifier` that you provide. If the `notifier`\n * emits a value, the output Observable stops mirroring the source Observable\n * and completes.\n *\n * @example <caption>Tick every second until the first click happens</caption>\n * var interval = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = interval.takeUntil(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param {Observable} notifier The Observable whose first emitted value will\n * cause the output Observable of `takeUntil` to stop emitting values from the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable until such time as `notifier` emits its first value.\n * @method takeUntil\n * @owner Observable\n */\nfunction takeUntil(notifier) {\n    return takeUntil_1.takeUntil(notifier)(this);\n}\nexports.takeUntil = takeUntil;\n//# sourceMappingURL=takeUntil.js.map","\"use strict\";\nvar bufferCount_1 = require('../operators/bufferCount');\n/**\n * Buffers the source Observable values until the size hits the maximum\n * `bufferSize` given.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when its size reaches `bufferSize`.</span>\n *\n * <img src=\"./img/bufferCount.png\" width=\"100%\">\n *\n * Buffers a number of values from the source Observable by `bufferSize` then\n * emits the buffer and clears it, and starts a new buffer each\n * `startBufferEvery` values. If `startBufferEvery` is not provided or is\n * `null`, then new buffers are started immediately at the start of the source\n * and when each buffer closes and is emitted.\n *\n * @example <caption>Emit the last two click events as an array</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferCount(2);\n * buffered.subscribe(x => console.log(x));\n *\n * @example <caption>On every click, emit the last two click events as an array</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferCount(2, 1);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link pairwise}\n * @see {@link windowCount}\n *\n * @param {number} bufferSize The maximum size of the buffer emitted.\n * @param {number} [startBufferEvery] Interval at which to start a new buffer.\n * For example if `startBufferEvery` is `2`, then a new buffer will be started\n * on every other value from the source. A new buffer is started at the\n * beginning of the source by default.\n * @return {Observable<T[]>} An Observable of arrays of buffered values.\n * @method bufferCount\n * @owner Observable\n */\nfunction bufferCount(bufferSize, startBufferEvery) {\n    if (startBufferEvery === void 0) { startBufferEvery = null; }\n    return bufferCount_1.bufferCount(bufferSize, startBufferEvery)(this);\n}\nexports.bufferCount = bufferCount;\n//# sourceMappingURL=bufferCount.js.map","\"use strict\";\nvar findIndex_1 = require('../operators/findIndex');\n/**\n * Emits only the index of the first value emitted by the source Observable that\n * meets some condition.\n *\n * <span class=\"informal\">It's like {@link find}, but emits the index of the\n * found value, not the value itself.</span>\n *\n * <img src=\"./img/findIndex.png\" width=\"100%\">\n *\n * `findIndex` searches for the first item in the source Observable that matches\n * the specified condition embodied by the `predicate`, and returns the\n * (zero-based) index of the first occurrence in the source. Unlike\n * {@link first}, the `predicate` is required in `findIndex`, and does not emit\n * an error if a valid value is not found.\n *\n * @example <caption>Emit the index of first click that happens on a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.findIndex(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link first}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of the index of the first item that\n * matches the condition.\n * @method find\n * @owner Observable\n */\nfunction findIndex(predicate, thisArg) {\n    return findIndex_1.findIndex(predicate, thisArg)(this);\n}\nexports.findIndex = findIndex;\n//# sourceMappingURL=findIndex.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = require('../Subject');\nvar async_1 = require('../scheduler/async');\nvar Subscriber_1 = require('../Subscriber');\nvar isNumeric_1 = require('../util/isNumeric');\nvar isScheduler_1 = require('../util/isScheduler');\nfunction windowTime(windowTimeSpan) {\n    var scheduler = async_1.async;\n    var windowCreationInterval = null;\n    var maxWindowSize = Number.POSITIVE_INFINITY;\n    if (isScheduler_1.isScheduler(arguments[3])) {\n        scheduler = arguments[3];\n    }\n    if (isScheduler_1.isScheduler(arguments[2])) {\n        scheduler = arguments[2];\n    }\n    else if (isNumeric_1.isNumeric(arguments[2])) {\n        maxWindowSize = arguments[2];\n    }\n    if (isScheduler_1.isScheduler(arguments[1])) {\n        scheduler = arguments[1];\n    }\n    else if (isNumeric_1.isNumeric(arguments[1])) {\n        windowCreationInterval = arguments[1];\n    }\n    return function windowTimeOperatorFunction(source) {\n        return source.lift(new WindowTimeOperator(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler));\n    };\n}\nexports.windowTime = windowTime;\nvar WindowTimeOperator = (function () {\n    function WindowTimeOperator(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {\n        this.windowTimeSpan = windowTimeSpan;\n        this.windowCreationInterval = windowCreationInterval;\n        this.maxWindowSize = maxWindowSize;\n        this.scheduler = scheduler;\n    }\n    WindowTimeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new WindowTimeSubscriber(subscriber, this.windowTimeSpan, this.windowCreationInterval, this.maxWindowSize, this.scheduler));\n    };\n    return WindowTimeOperator;\n}());\nvar CountedSubject = (function (_super) {\n    __extends(CountedSubject, _super);\n    function CountedSubject() {\n        _super.apply(this, arguments);\n        this._numberOfNextedValues = 0;\n    }\n    CountedSubject.prototype.next = function (value) {\n        this._numberOfNextedValues++;\n        _super.prototype.next.call(this, value);\n    };\n    Object.defineProperty(CountedSubject.prototype, \"numberOfNextedValues\", {\n        get: function () {\n            return this._numberOfNextedValues;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return CountedSubject;\n}(Subject_1.Subject));\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WindowTimeSubscriber = (function (_super) {\n    __extends(WindowTimeSubscriber, _super);\n    function WindowTimeSubscriber(destination, windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {\n        _super.call(this, destination);\n        this.destination = destination;\n        this.windowTimeSpan = windowTimeSpan;\n        this.windowCreationInterval = windowCreationInterval;\n        this.maxWindowSize = maxWindowSize;\n        this.scheduler = scheduler;\n        this.windows = [];\n        var window = this.openWindow();\n        if (windowCreationInterval !== null && windowCreationInterval >= 0) {\n            var closeState = { subscriber: this, window: window, context: null };\n            var creationState = { windowTimeSpan: windowTimeSpan, windowCreationInterval: windowCreationInterval, subscriber: this, scheduler: scheduler };\n            this.add(scheduler.schedule(dispatchWindowClose, windowTimeSpan, closeState));\n            this.add(scheduler.schedule(dispatchWindowCreation, windowCreationInterval, creationState));\n        }\n        else {\n            var timeSpanOnlyState = { subscriber: this, window: window, windowTimeSpan: windowTimeSpan };\n            this.add(scheduler.schedule(dispatchWindowTimeSpanOnly, windowTimeSpan, timeSpanOnlyState));\n        }\n    }\n    WindowTimeSubscriber.prototype._next = function (value) {\n        var windows = this.windows;\n        var len = windows.length;\n        for (var i = 0; i < len; i++) {\n            var window_1 = windows[i];\n            if (!window_1.closed) {\n                window_1.next(value);\n                if (window_1.numberOfNextedValues >= this.maxWindowSize) {\n                    this.closeWindow(window_1);\n                }\n            }\n        }\n    };\n    WindowTimeSubscriber.prototype._error = function (err) {\n        var windows = this.windows;\n        while (windows.length > 0) {\n            windows.shift().error(err);\n        }\n        this.destination.error(err);\n    };\n    WindowTimeSubscriber.prototype._complete = function () {\n        var windows = this.windows;\n        while (windows.length > 0) {\n            var window_2 = windows.shift();\n            if (!window_2.closed) {\n                window_2.complete();\n            }\n        }\n        this.destination.complete();\n    };\n    WindowTimeSubscriber.prototype.openWindow = function () {\n        var window = new CountedSubject();\n        this.windows.push(window);\n        var destination = this.destination;\n        destination.next(window);\n        return window;\n    };\n    WindowTimeSubscriber.prototype.closeWindow = function (window) {\n        window.complete();\n        var windows = this.windows;\n        windows.splice(windows.indexOf(window), 1);\n    };\n    return WindowTimeSubscriber;\n}(Subscriber_1.Subscriber));\nfunction dispatchWindowTimeSpanOnly(state) {\n    var subscriber = state.subscriber, windowTimeSpan = state.windowTimeSpan, window = state.window;\n    if (window) {\n        subscriber.closeWindow(window);\n    }\n    state.window = subscriber.openWindow();\n    this.schedule(state, windowTimeSpan);\n}\nfunction dispatchWindowCreation(state) {\n    var windowTimeSpan = state.windowTimeSpan, subscriber = state.subscriber, scheduler = state.scheduler, windowCreationInterval = state.windowCreationInterval;\n    var window = subscriber.openWindow();\n    var action = this;\n    var context = { action: action, subscription: null };\n    var timeSpanState = { subscriber: subscriber, window: window, context: context };\n    context.subscription = scheduler.schedule(dispatchWindowClose, windowTimeSpan, timeSpanState);\n    action.add(context.subscription);\n    action.schedule(state, windowCreationInterval);\n}\nfunction dispatchWindowClose(state) {\n    var subscriber = state.subscriber, window = state.window, context = state.context;\n    if (context && context.action && context.subscription) {\n        context.action.remove(context.subscription);\n    }\n    subscriber.closeWindow(window);\n}\n//# sourceMappingURL=windowTime.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar min_1 = require('../../operator/min');\nObservable_1.Observable.prototype.min = min_1.min;\n//# sourceMappingURL=min.js.map","\"use strict\";\nvar UsingObservable_1 = require('./UsingObservable');\nexports.using = UsingObservable_1.UsingObservable.create;\n//# sourceMappingURL=using.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar Subscription_1 = require('../Subscription');\n/**\n * Returns an Observable that mirrors the source Observable, but will call a specified function when\n * the source terminates on complete or error.\n * @param {function} callback Function to be called when source terminates.\n * @return {Observable} An Observable that mirrors the source, but will call the specified function on termination.\n * @method finally\n * @owner Observable\n */\nfunction finalize(callback) {\n    return function (source) { return source.lift(new FinallyOperator(callback)); };\n}\nexports.finalize = finalize;\nvar FinallyOperator = (function () {\n    function FinallyOperator(callback) {\n        this.callback = callback;\n    }\n    FinallyOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new FinallySubscriber(subscriber, this.callback));\n    };\n    return FinallyOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar FinallySubscriber = (function (_super) {\n    __extends(FinallySubscriber, _super);\n    function FinallySubscriber(destination, callback) {\n        _super.call(this, destination);\n        this.add(new Subscription_1.Subscription(callback));\n    }\n    return FinallySubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=finalize.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar windowCount_1 = require('../../operator/windowCount');\nObservable_1.Observable.prototype.windowCount = windowCount_1.windowCount;\n//# sourceMappingURL=windowCount.js.map","import { checkReady } from './bootstrap';\nexport { IonicNativePlugin } from './ionic-native-plugin';\n// Decorators\nexport { checkAvailability, instanceAvailability, wrap, getPromise } from './decorators/common';\nexport * from './decorators/cordova';\nexport * from './decorators/cordova-function-override';\nexport * from './decorators/cordova-instance';\nexport * from './decorators/cordova-property';\nexport * from './decorators/instance-property';\nexport * from './decorators/interfaces';\ncheckReady();\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar publishBehavior_1 = require('../../operator/publishBehavior');\nObservable_1.Observable.prototype.publishBehavior = publishBehavior_1.publishBehavior;\n//# sourceMappingURL=publishBehavior.js.map","\"use strict\";\nvar windowCount_1 = require('../operators/windowCount');\n/**\n * Branch out the source Observable values as a nested Observable with each\n * nested Observable emitting at most `windowSize` values.\n *\n * <span class=\"informal\">It's like {@link bufferCount}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowCount.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows every `startWindowEvery`\n * items, each containing no more than `windowSize` items. When the source\n * Observable completes or encounters an error, the output Observable emits\n * the current window and propagates the notification from the source\n * Observable. If `startWindowEvery` is not provided, then new windows are\n * started immediately at the start of the source and when each window completes\n * with size `windowSize`.\n *\n * @example <caption>Ignore every 3rd click event, starting from the first one</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowCount(3)\n *   .map(win => win.skip(1)) // skip first of every 3 clicks\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Ignore every 3rd click event, starting from the third one</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowCount(2, 3)\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferCount}\n *\n * @param {number} windowSize The maximum number of values emitted by each\n * window.\n * @param {number} [startWindowEvery] Interval at which to start a new window.\n * For example if `startWindowEvery` is `2`, then a new window will be started\n * on every other value from the source. A new window is started at the\n * beginning of the source by default.\n * @return {Observable<Observable<T>>} An Observable of windows, which in turn\n * are Observable of values.\n * @method windowCount\n * @owner Observable\n */\nfunction windowCount(windowSize, startWindowEvery) {\n    if (startWindowEvery === void 0) { startWindowEvery = 0; }\n    return windowCount_1.windowCount(windowSize, startWindowEvery)(this);\n}\nexports.windowCount = windowCount;\n//# sourceMappingURL=windowCount.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar max_1 = require('../../operator/max');\nObservable_1.Observable.prototype.max = max_1.max;\n//# sourceMappingURL=max.js.map","\"use strict\";\nvar repeatWhen_1 = require('../operators/repeatWhen');\n/**\n * Returns an Observable that mirrors the source Observable with the exception of a `complete`. If the source\n * Observable calls `complete`, this method will emit to the Observable returned from `notifier`. If that Observable\n * calls `complete` or `error`, then this method will call `complete` or `error` on the child subscription. Otherwise\n * this method will resubscribe to the source Observable.\n *\n * <img src=\"./img/repeatWhen.png\" width=\"100%\">\n *\n * @param {function(notifications: Observable): Observable} notifier - Receives an Observable of notifications with\n * which a user can `complete` or `error`, aborting the repetition.\n * @return {Observable} The source Observable modified with repeat logic.\n * @method repeatWhen\n * @owner Observable\n */\nfunction repeatWhen(notifier) {\n    return repeatWhen_1.repeatWhen(notifier)(this);\n}\nexports.repeatWhen = repeatWhen;\n//# sourceMappingURL=repeatWhen.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\nvar Notification_1 = require('../Notification');\nvar ColdObservable_1 = require('./ColdObservable');\nvar HotObservable_1 = require('./HotObservable');\nvar SubscriptionLog_1 = require('./SubscriptionLog');\nvar VirtualTimeScheduler_1 = require('../scheduler/VirtualTimeScheduler');\nvar defaultMaxFrame = 750;\nvar TestScheduler = (function (_super) {\n    __extends(TestScheduler, _super);\n    function TestScheduler(assertDeepEqual) {\n        _super.call(this, VirtualTimeScheduler_1.VirtualAction, defaultMaxFrame);\n        this.assertDeepEqual = assertDeepEqual;\n        this.hotObservables = [];\n        this.coldObservables = [];\n        this.flushTests = [];\n    }\n    TestScheduler.prototype.createTime = function (marbles) {\n        var indexOf = marbles.indexOf('|');\n        if (indexOf === -1) {\n            throw new Error('marble diagram for time should have a completion marker \"|\"');\n        }\n        return indexOf * TestScheduler.frameTimeFactor;\n    };\n    TestScheduler.prototype.createColdObservable = function (marbles, values, error) {\n        if (marbles.indexOf('^') !== -1) {\n            throw new Error('cold observable cannot have subscription offset \"^\"');\n        }\n        if (marbles.indexOf('!') !== -1) {\n            throw new Error('cold observable cannot have unsubscription marker \"!\"');\n        }\n        var messages = TestScheduler.parseMarbles(marbles, values, error);\n        var cold = new ColdObservable_1.ColdObservable(messages, this);\n        this.coldObservables.push(cold);\n        return cold;\n    };\n    TestScheduler.prototype.createHotObservable = function (marbles, values, error) {\n        if (marbles.indexOf('!') !== -1) {\n            throw new Error('hot observable cannot have unsubscription marker \"!\"');\n        }\n        var messages = TestScheduler.parseMarbles(marbles, values, error);\n        var subject = new HotObservable_1.HotObservable(messages, this);\n        this.hotObservables.push(subject);\n        return subject;\n    };\n    TestScheduler.prototype.materializeInnerObservable = function (observable, outerFrame) {\n        var _this = this;\n        var messages = [];\n        observable.subscribe(function (value) {\n            messages.push({ frame: _this.frame - outerFrame, notification: Notification_1.Notification.createNext(value) });\n        }, function (err) {\n            messages.push({ frame: _this.frame - outerFrame, notification: Notification_1.Notification.createError(err) });\n        }, function () {\n            messages.push({ frame: _this.frame - outerFrame, notification: Notification_1.Notification.createComplete() });\n        });\n        return messages;\n    };\n    TestScheduler.prototype.expectObservable = function (observable, unsubscriptionMarbles) {\n        var _this = this;\n        if (unsubscriptionMarbles === void 0) { unsubscriptionMarbles = null; }\n        var actual = [];\n        var flushTest = { actual: actual, ready: false };\n        var unsubscriptionFrame = TestScheduler\n            .parseMarblesAsSubscriptions(unsubscriptionMarbles).unsubscribedFrame;\n        var subscription;\n        this.schedule(function () {\n            subscription = observable.subscribe(function (x) {\n                var value = x;\n                // Support Observable-of-Observables\n                if (x instanceof Observable_1.Observable) {\n                    value = _this.materializeInnerObservable(value, _this.frame);\n                }\n                actual.push({ frame: _this.frame, notification: Notification_1.Notification.createNext(value) });\n            }, function (err) {\n                actual.push({ frame: _this.frame, notification: Notification_1.Notification.createError(err) });\n            }, function () {\n                actual.push({ frame: _this.frame, notification: Notification_1.Notification.createComplete() });\n            });\n        }, 0);\n        if (unsubscriptionFrame !== Number.POSITIVE_INFINITY) {\n            this.schedule(function () { return subscription.unsubscribe(); }, unsubscriptionFrame);\n        }\n        this.flushTests.push(flushTest);\n        return {\n            toBe: function (marbles, values, errorValue) {\n                flushTest.ready = true;\n                flushTest.expected = TestScheduler.parseMarbles(marbles, values, errorValue, true);\n            }\n        };\n    };\n    TestScheduler.prototype.expectSubscriptions = function (actualSubscriptionLogs) {\n        var flushTest = { actual: actualSubscriptionLogs, ready: false };\n        this.flushTests.push(flushTest);\n        return {\n            toBe: function (marbles) {\n                var marblesArray = (typeof marbles === 'string') ? [marbles] : marbles;\n                flushTest.ready = true;\n                flushTest.expected = marblesArray.map(function (marbles) {\n                    return TestScheduler.parseMarblesAsSubscriptions(marbles);\n                });\n            }\n        };\n    };\n    TestScheduler.prototype.flush = function () {\n        var hotObservables = this.hotObservables;\n        while (hotObservables.length > 0) {\n            hotObservables.shift().setup();\n        }\n        _super.prototype.flush.call(this);\n        var readyFlushTests = this.flushTests.filter(function (test) { return test.ready; });\n        while (readyFlushTests.length > 0) {\n            var test = readyFlushTests.shift();\n            this.assertDeepEqual(test.actual, test.expected);\n        }\n    };\n    TestScheduler.parseMarblesAsSubscriptions = function (marbles) {\n        if (typeof marbles !== 'string') {\n            return new SubscriptionLog_1.SubscriptionLog(Number.POSITIVE_INFINITY);\n        }\n        var len = marbles.length;\n        var groupStart = -1;\n        var subscriptionFrame = Number.POSITIVE_INFINITY;\n        var unsubscriptionFrame = Number.POSITIVE_INFINITY;\n        for (var i = 0; i < len; i++) {\n            var frame = i * this.frameTimeFactor;\n            var c = marbles[i];\n            switch (c) {\n                case '-':\n                case ' ':\n                    break;\n                case '(':\n                    groupStart = frame;\n                    break;\n                case ')':\n                    groupStart = -1;\n                    break;\n                case '^':\n                    if (subscriptionFrame !== Number.POSITIVE_INFINITY) {\n                        throw new Error('found a second subscription point \\'^\\' in a ' +\n                            'subscription marble diagram. There can only be one.');\n                    }\n                    subscriptionFrame = groupStart > -1 ? groupStart : frame;\n                    break;\n                case '!':\n                    if (unsubscriptionFrame !== Number.POSITIVE_INFINITY) {\n                        throw new Error('found a second subscription point \\'^\\' in a ' +\n                            'subscription marble diagram. There can only be one.');\n                    }\n                    unsubscriptionFrame = groupStart > -1 ? groupStart : frame;\n                    break;\n                default:\n                    throw new Error('there can only be \\'^\\' and \\'!\\' markers in a ' +\n                        'subscription marble diagram. Found instead \\'' + c + '\\'.');\n            }\n        }\n        if (unsubscriptionFrame < 0) {\n            return new SubscriptionLog_1.SubscriptionLog(subscriptionFrame);\n        }\n        else {\n            return new SubscriptionLog_1.SubscriptionLog(subscriptionFrame, unsubscriptionFrame);\n        }\n    };\n    TestScheduler.parseMarbles = function (marbles, values, errorValue, materializeInnerObservables) {\n        if (materializeInnerObservables === void 0) { materializeInnerObservables = false; }\n        if (marbles.indexOf('!') !== -1) {\n            throw new Error('conventional marble diagrams cannot have the ' +\n                'unsubscription marker \"!\"');\n        }\n        var len = marbles.length;\n        var testMessages = [];\n        var subIndex = marbles.indexOf('^');\n        var frameOffset = subIndex === -1 ? 0 : (subIndex * -this.frameTimeFactor);\n        var getValue = typeof values !== 'object' ?\n            function (x) { return x; } :\n            function (x) {\n                // Support Observable-of-Observables\n                if (materializeInnerObservables && values[x] instanceof ColdObservable_1.ColdObservable) {\n                    return values[x].messages;\n                }\n                return values[x];\n            };\n        var groupStart = -1;\n        for (var i = 0; i < len; i++) {\n            var frame = i * this.frameTimeFactor + frameOffset;\n            var notification = void 0;\n            var c = marbles[i];\n            switch (c) {\n                case '-':\n                case ' ':\n                    break;\n                case '(':\n                    groupStart = frame;\n                    break;\n                case ')':\n                    groupStart = -1;\n                    break;\n                case '|':\n                    notification = Notification_1.Notification.createComplete();\n                    break;\n                case '^':\n                    break;\n                case '#':\n                    notification = Notification_1.Notification.createError(errorValue || 'error');\n                    break;\n                default:\n                    notification = Notification_1.Notification.createNext(getValue(c));\n                    break;\n            }\n            if (notification) {\n                testMessages.push({ frame: groupStart > -1 ? groupStart : frame, notification: notification });\n            }\n        }\n        return testMessages;\n    };\n    return TestScheduler;\n}(VirtualTimeScheduler_1.VirtualTimeScheduler));\nexports.TestScheduler = TestScheduler;\n//# sourceMappingURL=TestScheduler.js.map","\"use strict\";\nvar windowToggle_1 = require('../operators/windowToggle');\n/**\n * Branch out the source Observable values as a nested Observable starting from\n * an emission from `openings` and ending when the output of `closingSelector`\n * emits.\n *\n * <span class=\"informal\">It's like {@link bufferToggle}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowToggle.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows that contain those items\n * emitted by the source Observable between the time when the `openings`\n * Observable emits an item and when the Observable returned by\n * `closingSelector` emits an item.\n *\n * @example <caption>Every other second, emit the click events from the next 500ms</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var openings = Rx.Observable.interval(1000);\n * var result = clicks.windowToggle(openings, i =>\n *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()\n * ).mergeAll();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowWhen}\n * @see {@link bufferToggle}\n *\n * @param {Observable<O>} openings An observable of notifications to start new\n * windows.\n * @param {function(value: O): Observable} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns an Observable,\n * which, when it emits (either `next` or `complete`), signals that the\n * associated window should complete.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowToggle\n * @owner Observable\n */\nfunction windowToggle(openings, closingSelector) {\n    return windowToggle_1.windowToggle(openings, closingSelector)(this);\n}\nexports.windowToggle = windowToggle;\n//# sourceMappingURL=windowToggle.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\nvar isScheduler_1 = require('../util/isScheduler');\nvar selfSelector = function (value) { return value; };\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar GenerateObservable = (function (_super) {\n    __extends(GenerateObservable, _super);\n    function GenerateObservable(initialState, condition, iterate, resultSelector, scheduler) {\n        _super.call(this);\n        this.initialState = initialState;\n        this.condition = condition;\n        this.iterate = iterate;\n        this.resultSelector = resultSelector;\n        this.scheduler = scheduler;\n    }\n    GenerateObservable.create = function (initialStateOrOptions, condition, iterate, resultSelectorOrObservable, scheduler) {\n        if (arguments.length == 1) {\n            return new GenerateObservable(initialStateOrOptions.initialState, initialStateOrOptions.condition, initialStateOrOptions.iterate, initialStateOrOptions.resultSelector || selfSelector, initialStateOrOptions.scheduler);\n        }\n        if (resultSelectorOrObservable === undefined || isScheduler_1.isScheduler(resultSelectorOrObservable)) {\n            return new GenerateObservable(initialStateOrOptions, condition, iterate, selfSelector, resultSelectorOrObservable);\n        }\n        return new GenerateObservable(initialStateOrOptions, condition, iterate, resultSelectorOrObservable, scheduler);\n    };\n    /** @deprecated internal use only */ GenerateObservable.prototype._subscribe = function (subscriber) {\n        var state = this.initialState;\n        if (this.scheduler) {\n            return this.scheduler.schedule(GenerateObservable.dispatch, 0, {\n                subscriber: subscriber,\n                iterate: this.iterate,\n                condition: this.condition,\n                resultSelector: this.resultSelector,\n                state: state });\n        }\n        var _a = this, condition = _a.condition, resultSelector = _a.resultSelector, iterate = _a.iterate;\n        do {\n            if (condition) {\n                var conditionResult = void 0;\n                try {\n                    conditionResult = condition(state);\n                }\n                catch (err) {\n                    subscriber.error(err);\n                    return;\n                }\n                if (!conditionResult) {\n                    subscriber.complete();\n                    break;\n                }\n            }\n            var value = void 0;\n            try {\n                value = resultSelector(state);\n            }\n            catch (err) {\n                subscriber.error(err);\n                return;\n            }\n            subscriber.next(value);\n            if (subscriber.closed) {\n                break;\n            }\n            try {\n                state = iterate(state);\n            }\n            catch (err) {\n                subscriber.error(err);\n                return;\n            }\n        } while (true);\n    };\n    GenerateObservable.dispatch = function (state) {\n        var subscriber = state.subscriber, condition = state.condition;\n        if (subscriber.closed) {\n            return;\n        }\n        if (state.needIterate) {\n            try {\n                state.state = state.iterate(state.state);\n            }\n            catch (err) {\n                subscriber.error(err);\n                return;\n            }\n        }\n        else {\n            state.needIterate = true;\n        }\n        if (condition) {\n            var conditionResult = void 0;\n            try {\n                conditionResult = condition(state.state);\n            }\n            catch (err) {\n                subscriber.error(err);\n                return;\n            }\n            if (!conditionResult) {\n                subscriber.complete();\n                return;\n            }\n            if (subscriber.closed) {\n                return;\n            }\n        }\n        var value;\n        try {\n            value = state.resultSelector(state.state);\n        }\n        catch (err) {\n            subscriber.error(err);\n            return;\n        }\n        if (subscriber.closed) {\n            return;\n        }\n        subscriber.next(value);\n        if (subscriber.closed) {\n            return;\n        }\n        return this.schedule(state);\n    };\n    return GenerateObservable;\n}(Observable_1.Observable));\nexports.GenerateObservable = GenerateObservable;\n//# sourceMappingURL=GenerateObservable.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Returns an Observable that skips the first `count` items emitted by the source Observable.\n *\n * <img src=\"./img/skip.png\" width=\"100%\">\n *\n * @param {Number} count - The number of times, items emitted by source Observable should be skipped.\n * @return {Observable} An Observable that skips values emitted by the source Observable.\n *\n * @method skip\n * @owner Observable\n */\nfunction skip(count) {\n    return function (source) { return source.lift(new SkipOperator(count)); };\n}\nexports.skip = skip;\nvar SkipOperator = (function () {\n    function SkipOperator(total) {\n        this.total = total;\n    }\n    SkipOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SkipSubscriber(subscriber, this.total));\n    };\n    return SkipOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SkipSubscriber = (function (_super) {\n    __extends(SkipSubscriber, _super);\n    function SkipSubscriber(destination, total) {\n        _super.call(this, destination);\n        this.total = total;\n        this.count = 0;\n    }\n    SkipSubscriber.prototype._next = function (x) {\n        if (++this.count > this.total) {\n            this.destination.next(x);\n        }\n    };\n    return SkipSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=skip.js.map","var isObject = require('../internals/is-object');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\n\n// makes subclassing work correct for wrapped built-ins\nmodule.exports = function ($this, dummy, Wrapper) {\n  var NewTarget, NewTargetPrototype;\n  if (\n    // it can work only with native `setPrototypeOf`\n    setPrototypeOf &&\n    // we haven't completely correct pre-ES6 way for getting `new.target`, so use this\n    typeof (NewTarget = dummy.constructor) == 'function' &&\n    NewTarget !== Wrapper &&\n    isObject(NewTargetPrototype = NewTarget.prototype) &&\n    NewTargetPrototype !== Wrapper.prototype\n  ) setPrototypeOf($this, NewTargetPrototype);\n  return $this;\n};\n","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar EmptyError_1 = require('../util/EmptyError');\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits only the last item emitted by the source Observable.\n * It optionally takes a predicate function as a parameter, in which case, rather than emitting\n * the last item from the source Observable, the resulting Observable will emit the last item\n * from the source Observable that satisfies the predicate.\n *\n * <img src=\"./img/last.png\" width=\"100%\">\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {function} predicate - The condition any source emitted item has to satisfy.\n * @return {Observable} An Observable that emits only the last item satisfying the given condition\n * from the source, or an NoSuchElementException if no such items are emitted.\n * @throws - Throws if no items that match the predicate are emitted by the source Observable.\n * @method last\n * @owner Observable\n */\nfunction last(predicate, resultSelector, defaultValue) {\n    return function (source) { return source.lift(new LastOperator(predicate, resultSelector, defaultValue, source)); };\n}\nexports.last = last;\nvar LastOperator = (function () {\n    function LastOperator(predicate, resultSelector, defaultValue, source) {\n        this.predicate = predicate;\n        this.resultSelector = resultSelector;\n        this.defaultValue = defaultValue;\n        this.source = source;\n    }\n    LastOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new LastSubscriber(observer, this.predicate, this.resultSelector, this.defaultValue, this.source));\n    };\n    return LastOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar LastSubscriber = (function (_super) {\n    __extends(LastSubscriber, _super);\n    function LastSubscriber(destination, predicate, resultSelector, defaultValue, source) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.resultSelector = resultSelector;\n        this.defaultValue = defaultValue;\n        this.source = source;\n        this.hasValue = false;\n        this.index = 0;\n        if (typeof defaultValue !== 'undefined') {\n            this.lastValue = defaultValue;\n            this.hasValue = true;\n        }\n    }\n    LastSubscriber.prototype._next = function (value) {\n        var index = this.index++;\n        if (this.predicate) {\n            this._tryPredicate(value, index);\n        }\n        else {\n            if (this.resultSelector) {\n                this._tryResultSelector(value, index);\n                return;\n            }\n            this.lastValue = value;\n            this.hasValue = true;\n        }\n    };\n    LastSubscriber.prototype._tryPredicate = function (value, index) {\n        var result;\n        try {\n            result = this.predicate(value, index, this.source);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            if (this.resultSelector) {\n                this._tryResultSelector(value, index);\n                return;\n            }\n            this.lastValue = value;\n            this.hasValue = true;\n        }\n    };\n    LastSubscriber.prototype._tryResultSelector = function (value, index) {\n        var result;\n        try {\n            result = this.resultSelector(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.lastValue = result;\n        this.hasValue = true;\n    };\n    LastSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        if (this.hasValue) {\n            destination.next(this.lastValue);\n            destination.complete();\n        }\n        else {\n            destination.error(new EmptyError_1.EmptyError);\n        }\n    };\n    return LastSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=last.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Emits the most recently emitted value from the source Observable whenever\n * another Observable, the `notifier`, emits.\n *\n * <span class=\"informal\">It's like {@link sampleTime}, but samples whenever\n * the `notifier` Observable emits something.</span>\n *\n * <img src=\"./img/sample.png\" width=\"100%\">\n *\n * Whenever the `notifier` Observable emits a value or completes, `sample`\n * looks at the source Observable and emits whichever value it has most recently\n * emitted since the previous sampling, unless the source has not emitted\n * anything since the previous sampling. The `notifier` is subscribed to as soon\n * as the output Observable is subscribed.\n *\n * @example <caption>On every click, sample the most recent \"seconds\" timer</caption>\n * var seconds = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = seconds.sample(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {Observable<any>} notifier The Observable to use for sampling the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable whenever the notifier Observable\n * emits value or completes.\n * @method sample\n * @owner Observable\n */\nfunction sample(notifier) {\n    return function (source) { return source.lift(new SampleOperator(notifier)); };\n}\nexports.sample = sample;\nvar SampleOperator = (function () {\n    function SampleOperator(notifier) {\n        this.notifier = notifier;\n    }\n    SampleOperator.prototype.call = function (subscriber, source) {\n        var sampleSubscriber = new SampleSubscriber(subscriber);\n        var subscription = source.subscribe(sampleSubscriber);\n        subscription.add(subscribeToResult_1.subscribeToResult(sampleSubscriber, this.notifier));\n        return subscription;\n    };\n    return SampleOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SampleSubscriber = (function (_super) {\n    __extends(SampleSubscriber, _super);\n    function SampleSubscriber() {\n        _super.apply(this, arguments);\n        this.hasValue = false;\n    }\n    SampleSubscriber.prototype._next = function (value) {\n        this.value = value;\n        this.hasValue = true;\n    };\n    SampleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.emitValue();\n    };\n    SampleSubscriber.prototype.notifyComplete = function () {\n        this.emitValue();\n    };\n    SampleSubscriber.prototype.emitValue = function () {\n        if (this.hasValue) {\n            this.hasValue = false;\n            this.destination.next(this.value);\n        }\n    };\n    return SampleSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=sample.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar subscribeToResult_1 = require('../util/subscribeToResult');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * <img src=\"./img/mergeMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * @example <caption>Map and flatten each letter to an Observable ticking every 1 second</caption>\n * var letters = Rx.Observable.of('a', 'b', 'c');\n * var result = letters.mergeMap(x =>\n *   Rx.Observable.interval(1000).map(i => x+i)\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a,b,c with respective ascending integers\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and merging the results of the Observables obtained\n * from this transformation.\n * @method mergeMap\n * @owner Observable\n */\nfunction mergeMap(project, resultSelector, concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    return function mergeMapOperatorFunction(source) {\n        if (typeof resultSelector === 'number') {\n            concurrent = resultSelector;\n            resultSelector = null;\n        }\n        return source.lift(new MergeMapOperator(project, resultSelector, concurrent));\n    };\n}\nexports.mergeMap = mergeMap;\nvar MergeMapOperator = (function () {\n    function MergeMapOperator(project, resultSelector, concurrent) {\n        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.concurrent = concurrent;\n    }\n    MergeMapOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new MergeMapSubscriber(observer, this.project, this.resultSelector, this.concurrent));\n    };\n    return MergeMapOperator;\n}());\nexports.MergeMapOperator = MergeMapOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MergeMapSubscriber = (function (_super) {\n    __extends(MergeMapSubscriber, _super);\n    function MergeMapSubscriber(destination, project, resultSelector, concurrent) {\n        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n        _super.call(this, destination);\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.concurrent = concurrent;\n        this.hasCompleted = false;\n        this.buffer = [];\n        this.active = 0;\n        this.index = 0;\n    }\n    MergeMapSubscriber.prototype._next = function (value) {\n        if (this.active < this.concurrent) {\n            this._tryNext(value);\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    MergeMapSubscriber.prototype._tryNext = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.active++;\n        this._innerSub(result, value, index);\n    };\n    MergeMapSubscriber.prototype._innerSub = function (ish, value, index) {\n        this.add(subscribeToResult_1.subscribeToResult(this, ish, value, index));\n    };\n    MergeMapSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            this.destination.complete();\n        }\n    };\n    MergeMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (this.resultSelector) {\n            this._notifyResultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            this.destination.next(innerValue);\n        }\n    };\n    MergeMapSubscriber.prototype._notifyResultSelector = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var result;\n        try {\n            result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    MergeMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return MergeMapSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nexports.MergeMapSubscriber = MergeMapSubscriber;\n//# sourceMappingURL=mergeMap.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar async_1 = require('../scheduler/async');\n/**\n * Emits a value from the source Observable only after a particular time span\n * has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link delay}, but passes only the most\n * recent value from each burst of emissions.</span>\n *\n * <img src=\"./img/debounceTime.png\" width=\"100%\">\n *\n * `debounceTime` delays values emitted by the source Observable, but drops\n * previous pending delayed emissions if a new value arrives on the source\n * Observable. This operator keeps track of the most recent value from the\n * source Observable, and emits that only when `dueTime` enough time has passed\n * without any other value appearing on the source Observable. If a new value\n * appears before `dueTime` silence occurs, the previous value will be dropped\n * and will not be emitted on the output Observable.\n *\n * This is a rate-limiting operator, because it is impossible for more than one\n * value to be emitted in any time window of duration `dueTime`, but it is also\n * a delay-like operator since output emissions do not occur at the same time as\n * they did on the source Observable. Optionally takes a {@link IScheduler} for\n * managing timers.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounceTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} dueTime The timeout duration in milliseconds (or the time\n * unit determined internally by the optional `scheduler`) for the window of\n * time required to wait for emission silence before emitting the most recent\n * source value.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the timeout for each value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified `dueTime`, and may drop some values if they occur\n * too frequently.\n * @method debounceTime\n * @owner Observable\n */\nfunction debounceTime(dueTime, scheduler) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    return function (source) { return source.lift(new DebounceTimeOperator(dueTime, scheduler)); };\n}\nexports.debounceTime = debounceTime;\nvar DebounceTimeOperator = (function () {\n    function DebounceTimeOperator(dueTime, scheduler) {\n        this.dueTime = dueTime;\n        this.scheduler = scheduler;\n    }\n    DebounceTimeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DebounceTimeSubscriber(subscriber, this.dueTime, this.scheduler));\n    };\n    return DebounceTimeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DebounceTimeSubscriber = (function (_super) {\n    __extends(DebounceTimeSubscriber, _super);\n    function DebounceTimeSubscriber(destination, dueTime, scheduler) {\n        _super.call(this, destination);\n        this.dueTime = dueTime;\n        this.scheduler = scheduler;\n        this.debouncedSubscription = null;\n        this.lastValue = null;\n        this.hasValue = false;\n    }\n    DebounceTimeSubscriber.prototype._next = function (value) {\n        this.clearDebounce();\n        this.lastValue = value;\n        this.hasValue = true;\n        this.add(this.debouncedSubscription = this.scheduler.schedule(dispatchNext, this.dueTime, this));\n    };\n    DebounceTimeSubscriber.prototype._complete = function () {\n        this.debouncedNext();\n        this.destination.complete();\n    };\n    DebounceTimeSubscriber.prototype.debouncedNext = function () {\n        this.clearDebounce();\n        if (this.hasValue) {\n            this.destination.next(this.lastValue);\n            this.lastValue = null;\n            this.hasValue = false;\n        }\n    };\n    DebounceTimeSubscriber.prototype.clearDebounce = function () {\n        var debouncedSubscription = this.debouncedSubscription;\n        if (debouncedSubscription !== null) {\n            this.remove(debouncedSubscription);\n            debouncedSubscription.unsubscribe();\n            this.debouncedSubscription = null;\n        }\n    };\n    return DebounceTimeSubscriber;\n}(Subscriber_1.Subscriber));\nfunction dispatchNext(subscriber) {\n    subscriber.debouncedNext();\n}\n//# sourceMappingURL=debounceTime.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link switch}.</span>\n *\n * <img src=\"./img/switchMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMap((ev) => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switch}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking only the values from the most recently\n * projected inner Observable.\n * @method switchMap\n * @owner Observable\n */\nfunction switchMap(project, resultSelector) {\n    return function switchMapOperatorFunction(source) {\n        return source.lift(new SwitchMapOperator(project, resultSelector));\n    };\n}\nexports.switchMap = switchMap;\nvar SwitchMapOperator = (function () {\n    function SwitchMapOperator(project, resultSelector) {\n        this.project = project;\n        this.resultSelector = resultSelector;\n    }\n    SwitchMapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SwitchMapSubscriber(subscriber, this.project, this.resultSelector));\n    };\n    return SwitchMapOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SwitchMapSubscriber = (function (_super) {\n    __extends(SwitchMapSubscriber, _super);\n    function SwitchMapSubscriber(destination, project, resultSelector) {\n        _super.call(this, destination);\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.index = 0;\n    }\n    SwitchMapSubscriber.prototype._next = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (error) {\n            this.destination.error(error);\n            return;\n        }\n        this._innerSub(result, value, index);\n    };\n    SwitchMapSubscriber.prototype._innerSub = function (result, value, index) {\n        var innerSubscription = this.innerSubscription;\n        if (innerSubscription) {\n            innerSubscription.unsubscribe();\n        }\n        this.add(this.innerSubscription = subscribeToResult_1.subscribeToResult(this, result, value, index));\n    };\n    SwitchMapSubscriber.prototype._complete = function () {\n        var innerSubscription = this.innerSubscription;\n        if (!innerSubscription || innerSubscription.closed) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    /** @deprecated internal use only */ SwitchMapSubscriber.prototype._unsubscribe = function () {\n        this.innerSubscription = null;\n    };\n    SwitchMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.remove(innerSub);\n        this.innerSubscription = null;\n        if (this.isStopped) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    SwitchMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (this.resultSelector) {\n            this._tryNotifyNext(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            this.destination.next(innerValue);\n        }\n    };\n    SwitchMapSubscriber.prototype._tryNotifyNext = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var result;\n        try {\n            result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return SwitchMapSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=switchMap.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar partition_1 = require('../../operator/partition');\nObservable_1.Observable.prototype.partition = partition_1.partition;\n//# sourceMappingURL=partition.js.map","exports.f = Object.getOwnPropertySymbols;\n","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n *\n * <img src=\"./img/catch.png\" width=\"100%\">\n *\n * @example <caption>Continues with a different Observable when there's an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n == 4) {\n * \t     throw 'four!';\n *     }\n *\t   return n;\n *   })\n *   .catch(err => Observable.of('I', 'II', 'III', 'IV', 'V'))\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, I, II, III, IV, V\n *\n * @example <caption>Retries the caught source Observable again in case of error, similar to retry() operator</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n === 4) {\n * \t     throw 'four!';\n *     }\n * \t   return n;\n *   })\n *   .catch((err, caught) => caught)\n *   .take(30)\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, 1, 2, 3, ...\n *\n * @example <caption>Throws a new error when the source Observable throws an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n *     if (n == 4) {\n *       throw 'four!';\n *     }\n *     return n;\n *   })\n *   .catch(err => {\n *     throw 'error in source. Details: ' + err;\n *   })\n *   .subscribe(\n *     x => console.log(x),\n *     err => console.log(err)\n *   );\n *   // 1, 2, 3, error in source. Details: four!\n *\n * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\n *  is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\n *  is returned by the `selector` will be used to continue the observable chain.\n * @return {Observable} An observable that originates from either the source or the observable returned by the\n *  catch `selector` function.\n * @name catchError\n */\nfunction catchError(selector) {\n    return function catchErrorOperatorFunction(source) {\n        var operator = new CatchOperator(selector);\n        var caught = source.lift(operator);\n        return (operator.caught = caught);\n    };\n}\nexports.catchError = catchError;\nvar CatchOperator = (function () {\n    function CatchOperator(selector) {\n        this.selector = selector;\n    }\n    CatchOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new CatchSubscriber(subscriber, this.selector, this.caught));\n    };\n    return CatchOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar CatchSubscriber = (function (_super) {\n    __extends(CatchSubscriber, _super);\n    function CatchSubscriber(destination, selector, caught) {\n        _super.call(this, destination);\n        this.selector = selector;\n        this.caught = caught;\n    }\n    // NOTE: overriding `error` instead of `_error` because we don't want\n    // to have this flag this subscriber as `isStopped`. We can mimic the\n    // behavior of the RetrySubscriber (from the `retry` operator), where\n    // we unsubscribe from our source chain, reset our Subscriber flags,\n    // then subscribe to the selector result.\n    CatchSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var result = void 0;\n            try {\n                result = this.selector(err, this.caught);\n            }\n            catch (err2) {\n                _super.prototype.error.call(this, err2);\n                return;\n            }\n            this._unsubscribeAndRecycle();\n            this.add(subscribeToResult_1.subscribeToResult(this, result));\n        }\n    };\n    return CatchSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=catchError.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Returns an Observable that emits whether or not every item of the source satisfies the condition specified.\n *\n * @example <caption>A simple example emitting true if all elements are less than 5, false otherwise</caption>\n *  Observable.of(1, 2, 3, 4, 5, 6)\n *     .every(x => x < 5)\n *     .subscribe(x => console.log(x)); // -> false\n *\n * @param {function} predicate A function for determining if an item meets a specified condition.\n * @param {any} [thisArg] Optional object to use for `this` in the callback.\n * @return {Observable} An Observable of booleans that determines if all items of the source Observable meet the condition specified.\n * @method every\n * @owner Observable\n */\nfunction every(predicate, thisArg) {\n    return function (source) { return source.lift(new EveryOperator(predicate, thisArg, source)); };\n}\nexports.every = every;\nvar EveryOperator = (function () {\n    function EveryOperator(predicate, thisArg, source) {\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n        this.source = source;\n    }\n    EveryOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new EverySubscriber(observer, this.predicate, this.thisArg, this.source));\n    };\n    return EveryOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar EverySubscriber = (function (_super) {\n    __extends(EverySubscriber, _super);\n    function EverySubscriber(destination, predicate, thisArg, source) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n        this.source = source;\n        this.index = 0;\n        this.thisArg = thisArg || this;\n    }\n    EverySubscriber.prototype.notifyComplete = function (everyValueMatch) {\n        this.destination.next(everyValueMatch);\n        this.destination.complete();\n    };\n    EverySubscriber.prototype._next = function (value) {\n        var result = false;\n        try {\n            result = this.predicate.call(this.thisArg, value, this.index++, this.source);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (!result) {\n            this.notifyComplete(false);\n        }\n    };\n    EverySubscriber.prototype._complete = function () {\n        this.notifyComplete(true);\n    };\n    return EverySubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=every.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar multicast_1 = require('../../operator/multicast');\nObservable_1.Observable.prototype.multicast = multicast_1.multicast;\n//# sourceMappingURL=multicast.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nfunction isEmpty() {\n    return function (source) { return source.lift(new IsEmptyOperator()); };\n}\nexports.isEmpty = isEmpty;\nvar IsEmptyOperator = (function () {\n    function IsEmptyOperator() {\n    }\n    IsEmptyOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new IsEmptySubscriber(observer));\n    };\n    return IsEmptyOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar IsEmptySubscriber = (function (_super) {\n    __extends(IsEmptySubscriber, _super);\n    function IsEmptySubscriber(destination) {\n        _super.call(this, destination);\n    }\n    IsEmptySubscriber.prototype.notifyComplete = function (isEmpty) {\n        var destination = this.destination;\n        destination.next(isEmpty);\n        destination.complete();\n    };\n    IsEmptySubscriber.prototype._next = function (value) {\n        this.notifyComplete(false);\n    };\n    IsEmptySubscriber.prototype._complete = function () {\n        this.notifyComplete(true);\n    };\n    return IsEmptySubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=isEmpty.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar root_1 = require('../util/root');\nvar Observable_1 = require('../Observable');\nvar iterator_1 = require('../symbol/iterator');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar IteratorObservable = (function (_super) {\n    __extends(IteratorObservable, _super);\n    function IteratorObservable(iterator, scheduler) {\n        _super.call(this);\n        this.scheduler = scheduler;\n        if (iterator == null) {\n            throw new Error('iterator cannot be null.');\n        }\n        this.iterator = getIterator(iterator);\n    }\n    IteratorObservable.create = function (iterator, scheduler) {\n        return new IteratorObservable(iterator, scheduler);\n    };\n    IteratorObservable.dispatch = function (state) {\n        var index = state.index, hasError = state.hasError, iterator = state.iterator, subscriber = state.subscriber;\n        if (hasError) {\n            subscriber.error(state.error);\n            return;\n        }\n        var result = iterator.next();\n        if (result.done) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(result.value);\n        state.index = index + 1;\n        if (subscriber.closed) {\n            if (typeof iterator.return === 'function') {\n                iterator.return();\n            }\n            return;\n        }\n        this.schedule(state);\n    };\n    /** @deprecated internal use only */ IteratorObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var _a = this, iterator = _a.iterator, scheduler = _a.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(IteratorObservable.dispatch, 0, {\n                index: index, iterator: iterator, subscriber: subscriber\n            });\n        }\n        else {\n            do {\n                var result = iterator.next();\n                if (result.done) {\n                    subscriber.complete();\n                    break;\n                }\n                else {\n                    subscriber.next(result.value);\n                }\n                if (subscriber.closed) {\n                    if (typeof iterator.return === 'function') {\n                        iterator.return();\n                    }\n                    break;\n                }\n            } while (true);\n        }\n    };\n    return IteratorObservable;\n}(Observable_1.Observable));\nexports.IteratorObservable = IteratorObservable;\nvar StringIterator = (function () {\n    function StringIterator(str, idx, len) {\n        if (idx === void 0) { idx = 0; }\n        if (len === void 0) { len = str.length; }\n        this.str = str;\n        this.idx = idx;\n        this.len = len;\n    }\n    StringIterator.prototype[iterator_1.iterator] = function () { return (this); };\n    StringIterator.prototype.next = function () {\n        return this.idx < this.len ? {\n            done: false,\n            value: this.str.charAt(this.idx++)\n        } : {\n            done: true,\n            value: undefined\n        };\n    };\n    return StringIterator;\n}());\nvar ArrayIterator = (function () {\n    function ArrayIterator(arr, idx, len) {\n        if (idx === void 0) { idx = 0; }\n        if (len === void 0) { len = toLength(arr); }\n        this.arr = arr;\n        this.idx = idx;\n        this.len = len;\n    }\n    ArrayIterator.prototype[iterator_1.iterator] = function () { return this; };\n    ArrayIterator.prototype.next = function () {\n        return this.idx < this.len ? {\n            done: false,\n            value: this.arr[this.idx++]\n        } : {\n            done: true,\n            value: undefined\n        };\n    };\n    return ArrayIterator;\n}());\nfunction getIterator(obj) {\n    var i = obj[iterator_1.iterator];\n    if (!i && typeof obj === 'string') {\n        return new StringIterator(obj);\n    }\n    if (!i && obj.length !== undefined) {\n        return new ArrayIterator(obj);\n    }\n    if (!i) {\n        throw new TypeError('object is not iterable');\n    }\n    return obj[iterator_1.iterator]();\n}\nvar maxSafeInteger = Math.pow(2, 53) - 1;\nfunction toLength(o) {\n    var len = +o.length;\n    if (isNaN(len)) {\n        return 0;\n    }\n    if (len === 0 || !numberIsFinite(len)) {\n        return len;\n    }\n    len = sign(len) * Math.floor(Math.abs(len));\n    if (len <= 0) {\n        return 0;\n    }\n    if (len > maxSafeInteger) {\n        return maxSafeInteger;\n    }\n    return len;\n}\nfunction numberIsFinite(value) {\n    return typeof value === 'number' && root_1.root.isFinite(value);\n}\nfunction sign(value) {\n    var valueAsNumber = +value;\n    if (valueAsNumber === 0) {\n        return valueAsNumber;\n    }\n    if (isNaN(valueAsNumber)) {\n        return valueAsNumber;\n    }\n    return valueAsNumber < 0 ? -1 : 1;\n}\n//# sourceMappingURL=IteratorObservable.js.map","// IE8- don't enum bug keys\nmodule.exports = [\n  'constructor',\n  'hasOwnProperty',\n  'isPrototypeOf',\n  'propertyIsEnumerable',\n  'toLocaleString',\n  'toString',\n  'valueOf'\n];\n","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar bufferWhen_1 = require('../../operator/bufferWhen');\nObservable_1.Observable.prototype.bufferWhen = bufferWhen_1.bufferWhen;\n//# sourceMappingURL=bufferWhen.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar share_1 = require('../../operator/share');\nObservable_1.Observable.prototype.share = share_1.share;\n//# sourceMappingURL=share.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\nexports.defaultThrottleConfig = {\n    leading: true,\n    trailing: false\n};\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for a duration determined by another Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link throttleTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/throttle.png\" width=\"100%\">\n *\n * `throttle` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled by calling the `durationSelector` function with the source value,\n * which returns the \"duration\" Observable. When the duration Observable emits a\n * value or completes, the timer is disabled, and this process repeats for the\n * next source value.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.throttle(ev => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration for each source value, returned as an Observable or a Promise.\n * @param {Object} config a configuration object to define `leading` and `trailing` behavior. Defaults\n * to `{ leading: true, trailing: false }`.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttle\n * @owner Observable\n */\nfunction throttle(durationSelector, config) {\n    if (config === void 0) { config = exports.defaultThrottleConfig; }\n    return function (source) { return source.lift(new ThrottleOperator(durationSelector, config.leading, config.trailing)); };\n}\nexports.throttle = throttle;\nvar ThrottleOperator = (function () {\n    function ThrottleOperator(durationSelector, leading, trailing) {\n        this.durationSelector = durationSelector;\n        this.leading = leading;\n        this.trailing = trailing;\n    }\n    ThrottleOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ThrottleSubscriber(subscriber, this.durationSelector, this.leading, this.trailing));\n    };\n    return ThrottleOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc\n * @ignore\n * @extends {Ignored}\n */\nvar ThrottleSubscriber = (function (_super) {\n    __extends(ThrottleSubscriber, _super);\n    function ThrottleSubscriber(destination, durationSelector, _leading, _trailing) {\n        _super.call(this, destination);\n        this.destination = destination;\n        this.durationSelector = durationSelector;\n        this._leading = _leading;\n        this._trailing = _trailing;\n        this._hasTrailingValue = false;\n    }\n    ThrottleSubscriber.prototype._next = function (value) {\n        if (this.throttled) {\n            if (this._trailing) {\n                this._hasTrailingValue = true;\n                this._trailingValue = value;\n            }\n        }\n        else {\n            var duration = this.tryDurationSelector(value);\n            if (duration) {\n                this.add(this.throttled = subscribeToResult_1.subscribeToResult(this, duration));\n            }\n            if (this._leading) {\n                this.destination.next(value);\n                if (this._trailing) {\n                    this._hasTrailingValue = true;\n                    this._trailingValue = value;\n                }\n            }\n        }\n    };\n    ThrottleSubscriber.prototype.tryDurationSelector = function (value) {\n        try {\n            return this.durationSelector(value);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return null;\n        }\n    };\n    /** @deprecated internal use only */ ThrottleSubscriber.prototype._unsubscribe = function () {\n        var _a = this, throttled = _a.throttled, _trailingValue = _a._trailingValue, _hasTrailingValue = _a._hasTrailingValue, _trailing = _a._trailing;\n        this._trailingValue = null;\n        this._hasTrailingValue = false;\n        if (throttled) {\n            this.remove(throttled);\n            this.throttled = null;\n            throttled.unsubscribe();\n        }\n    };\n    ThrottleSubscriber.prototype._sendTrailing = function () {\n        var _a = this, destination = _a.destination, throttled = _a.throttled, _trailing = _a._trailing, _trailingValue = _a._trailingValue, _hasTrailingValue = _a._hasTrailingValue;\n        if (throttled && _trailing && _hasTrailingValue) {\n            destination.next(_trailingValue);\n            this._trailingValue = null;\n            this._hasTrailingValue = false;\n        }\n    };\n    ThrottleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this._sendTrailing();\n        this._unsubscribe();\n    };\n    ThrottleSubscriber.prototype.notifyComplete = function () {\n        this._sendTrailing();\n        this._unsubscribe();\n    };\n    return ThrottleSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=throttle.js.map","\"use strict\";\nvar ignoreElements_1 = require('../operators/ignoreElements');\n/**\n * Ignores all items emitted by the source Observable and only passes calls of `complete` or `error`.\n *\n * <img src=\"./img/ignoreElements.png\" width=\"100%\">\n *\n * @return {Observable} An empty Observable that only calls `complete`\n * or `error`, based on which one is called by the source Observable.\n * @method ignoreElements\n * @owner Observable\n */\nfunction ignoreElements() {\n    return ignoreElements_1.ignoreElements()(this);\n}\nexports.ignoreElements = ignoreElements;\n;\n//# sourceMappingURL=ignoreElements.js.map","\"use strict\";\nvar last_1 = require('../operators/last');\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits only the last item emitted by the source Observable.\n * It optionally takes a predicate function as a parameter, in which case, rather than emitting\n * the last item from the source Observable, the resulting Observable will emit the last item\n * from the source Observable that satisfies the predicate.\n *\n * <img src=\"./img/last.png\" width=\"100%\">\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {function} predicate - The condition any source emitted item has to satisfy.\n * @return {Observable} An Observable that emits only the last item satisfying the given condition\n * from the source, or an NoSuchElementException if no such items are emitted.\n * @throws - Throws if no items that match the predicate are emitted by the source Observable.\n * @method last\n * @owner Observable\n */\nfunction last(predicate, resultSelector, defaultValue) {\n    return last_1.last(predicate, resultSelector, defaultValue)(this);\n}\nexports.last = last;\n//# sourceMappingURL=last.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar dematerialize_1 = require('../../operator/dematerialize');\nObservable_1.Observable.prototype.dematerialize = dematerialize_1.dematerialize;\n//# sourceMappingURL=dematerialize.js.map","\"use strict\";\nvar MapPolyfill = (function () {\n    function MapPolyfill() {\n        this.size = 0;\n        this._values = [];\n        this._keys = [];\n    }\n    MapPolyfill.prototype.get = function (key) {\n        var i = this._keys.indexOf(key);\n        return i === -1 ? undefined : this._values[i];\n    };\n    MapPolyfill.prototype.set = function (key, value) {\n        var i = this._keys.indexOf(key);\n        if (i === -1) {\n            this._keys.push(key);\n            this._values.push(value);\n            this.size++;\n        }\n        else {\n            this._values[i] = value;\n        }\n        return this;\n    };\n    MapPolyfill.prototype.delete = function (key) {\n        var i = this._keys.indexOf(key);\n        if (i === -1) {\n            return false;\n        }\n        this._values.splice(i, 1);\n        this._keys.splice(i, 1);\n        this.size--;\n        return true;\n    };\n    MapPolyfill.prototype.clear = function () {\n        this._keys.length = 0;\n        this._values.length = 0;\n        this.size = 0;\n    };\n    MapPolyfill.prototype.forEach = function (cb, thisArg) {\n        for (var i = 0; i < this.size; i++) {\n            cb.call(thisArg, this._values[i], this._keys[i]);\n        }\n    };\n    return MapPolyfill;\n}());\nexports.MapPolyfill = MapPolyfill;\n//# sourceMappingURL=MapPolyfill.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Emits the values emitted by the source Observable until a `notifier`\n * Observable emits a value.\n *\n * <span class=\"informal\">Lets values pass until a second Observable,\n * `notifier`, emits something. Then, it completes.</span>\n *\n * <img src=\"./img/takeUntil.png\" width=\"100%\">\n *\n * `takeUntil` subscribes and begins mirroring the source Observable. It also\n * monitors a second Observable, `notifier` that you provide. If the `notifier`\n * emits a value or a complete notification, the output Observable stops\n * mirroring the source Observable and completes.\n *\n * @example <caption>Tick every second until the first click happens</caption>\n * var interval = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = interval.takeUntil(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param {Observable} notifier The Observable whose first emitted value will\n * cause the output Observable of `takeUntil` to stop emitting values from the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable until such time as `notifier` emits its first value.\n * @method takeUntil\n * @owner Observable\n */\nfunction takeUntil(notifier) {\n    return function (source) { return source.lift(new TakeUntilOperator(notifier)); };\n}\nexports.takeUntil = takeUntil;\nvar TakeUntilOperator = (function () {\n    function TakeUntilOperator(notifier) {\n        this.notifier = notifier;\n    }\n    TakeUntilOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TakeUntilSubscriber(subscriber, this.notifier));\n    };\n    return TakeUntilOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TakeUntilSubscriber = (function (_super) {\n    __extends(TakeUntilSubscriber, _super);\n    function TakeUntilSubscriber(destination, notifier) {\n        _super.call(this, destination);\n        this.notifier = notifier;\n        this.add(subscribeToResult_1.subscribeToResult(this, notifier));\n    }\n    TakeUntilSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.complete();\n    };\n    TakeUntilSubscriber.prototype.notifyComplete = function () {\n        // noop\n    };\n    return TakeUntilSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=takeUntil.js.map","var anObject = require('../internals/an-object');\nvar defineProperties = require('../internals/object-define-properties');\nvar enumBugKeys = require('../internals/enum-bug-keys');\nvar hiddenKeys = require('../internals/hidden-keys');\nvar html = require('../internals/html');\nvar documentCreateElement = require('../internals/document-create-element');\nvar sharedKey = require('../internals/shared-key');\n\nvar GT = '>';\nvar LT = '<';\nvar PROTOTYPE = 'prototype';\nvar SCRIPT = 'script';\nvar IE_PROTO = sharedKey('IE_PROTO');\n\nvar EmptyConstructor = function () { /* empty */ };\n\nvar scriptTag = function (content) {\n  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;\n};\n\n// Create object with fake `null` prototype: use ActiveX Object with cleared prototype\nvar NullProtoObjectViaActiveX = function (activeXDocument) {\n  activeXDocument.write(scriptTag(''));\n  activeXDocument.close();\n  var temp = activeXDocument.parentWindow.Object;\n  activeXDocument = null; // avoid memory leak\n  return temp;\n};\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar NullProtoObjectViaIFrame = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = documentCreateElement('iframe');\n  var JS = 'java' + SCRIPT + ':';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  html.appendChild(iframe);\n  // https://github.com/zloirock/core-js/issues/475\n  iframe.src = String(JS);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(scriptTag('document.F=Object'));\n  iframeDocument.close();\n  return iframeDocument.F;\n};\n\n// Check for document.domain and active x support\n// No need to use active x approach when document.domain is not set\n// see https://github.com/es-shims/es5-shim/issues/150\n// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346\n// avoid IE GC bug\nvar activeXDocument;\nvar NullProtoObject = function () {\n  try {\n    /* global ActiveXObject */\n    activeXDocument = document.domain && new ActiveXObject('htmlfile');\n  } catch (error) { /* ignore */ }\n  NullProtoObject = activeXDocument ? NullProtoObjectViaActiveX(activeXDocument) : NullProtoObjectViaIFrame();\n  var length = enumBugKeys.length;\n  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];\n  return NullProtoObject();\n};\n\nhiddenKeys[IE_PROTO] = true;\n\n// `Object.create` method\n// https://tc39.github.io/ecma262/#sec-object.create\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    EmptyConstructor[PROTOTYPE] = anObject(O);\n    result = new EmptyConstructor();\n    EmptyConstructor[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = NullProtoObject();\n  return Properties === undefined ? result : defineProperties(result, Properties);\n};\n","\"use strict\";\nvar publishReplay_1 = require('../operators/publishReplay');\n/* tslint:enable:max-line-length */\n/**\n * @param bufferSize\n * @param windowTime\n * @param selectorOrScheduler\n * @param scheduler\n * @return {Observable<T> | ConnectableObservable<T>}\n * @method publishReplay\n * @owner Observable\n */\nfunction publishReplay(bufferSize, windowTime, selectorOrScheduler, scheduler) {\n    return publishReplay_1.publishReplay(bufferSize, windowTime, selectorOrScheduler, scheduler)(this);\n}\nexports.publishReplay = publishReplay;\n//# sourceMappingURL=publishReplay.js.map","\"use strict\";\nvar max_1 = require('../operators/max');\n/**\n * The Max operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\n * and when source Observable completes it emits a single item: the item with the largest value.\n *\n * <img src=\"./img/max.png\" width=\"100%\">\n *\n * @example <caption>Get the maximal value of a series of numbers</caption>\n * Rx.Observable.of(5, 4, 7, 2, 8)\n *   .max()\n *   .subscribe(x => console.log(x)); // -> 8\n *\n * @example <caption>Use a comparer function to get the maximal item</caption>\n * interface Person {\n *   age: number,\n *   name: string\n * }\n * Observable.of<Person>({age: 7, name: 'Foo'},\n *                       {age: 5, name: 'Bar'},\n *                       {age: 9, name: 'Beer'})\n *           .max<Person>((a: Person, b: Person) => a.age < b.age ? -1 : 1)\n *           .subscribe((x: Person) => console.log(x.name)); // -> 'Beer'\n * }\n *\n * @see {@link min}\n *\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\n * value of two items.\n * @return {Observable} An Observable that emits item with the largest value.\n * @method max\n * @owner Observable\n */\nfunction max(comparer) {\n    return max_1.max(comparer)(this);\n}\nexports.max = max;\n//# sourceMappingURL=max.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar filter_1 = require('../../operator/filter');\nObservable_1.Observable.prototype.filter = filter_1.filter;\n//# sourceMappingURL=filter.js.map","\"use strict\";\nvar catchError_1 = require('../operators/catchError');\n/**\n * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n *\n * <img src=\"./img/catch.png\" width=\"100%\">\n *\n * @example <caption>Continues with a different Observable when there's an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n == 4) {\n * \t     throw 'four!';\n *     }\n *\t   return n;\n *   })\n *   .catch(err => Observable.of('I', 'II', 'III', 'IV', 'V'))\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, I, II, III, IV, V\n *\n * @example <caption>Retries the caught source Observable again in case of error, similar to retry() operator</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n === 4) {\n * \t     throw 'four!';\n *     }\n * \t   return n;\n *   })\n *   .catch((err, caught) => caught)\n *   .take(30)\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, 1, 2, 3, ...\n *\n * @example <caption>Throws a new error when the source Observable throws an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n *     if (n == 4) {\n *       throw 'four!';\n *     }\n *     return n;\n *   })\n *   .catch(err => {\n *     throw 'error in source. Details: ' + err;\n *   })\n *   .subscribe(\n *     x => console.log(x),\n *     err => console.log(err)\n *   );\n *   // 1, 2, 3, error in source. Details: four!\n *\n * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\n *  is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\n *  is returned by the `selector` will be used to continue the observable chain.\n * @return {Observable} An observable that originates from either the source or the observable returned by the\n *  catch `selector` function.\n * @method catch\n * @name catch\n * @owner Observable\n */\nfunction _catch(selector) {\n    return catchError_1.catchError(selector)(this);\n}\nexports._catch = _catch;\n//# sourceMappingURL=catch.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar takeWhile_1 = require('../../operator/takeWhile');\nObservable_1.Observable.prototype.takeWhile = takeWhile_1.takeWhile;\n//# sourceMappingURL=takeWhile.js.map","\"use strict\";\nvar elementAt_1 = require('../operators/elementAt');\n/**\n * Emits the single value at the specified `index` in a sequence of emissions\n * from the source Observable.\n *\n * <span class=\"informal\">Emits only the i-th value, then completes.</span>\n *\n * <img src=\"./img/elementAt.png\" width=\"100%\">\n *\n * `elementAt` returns an Observable that emits the item at the specified\n * `index` in the source Observable, or a default value if that `index` is out\n * of range and the `default` argument is provided. If the `default` argument is\n * not given and the `index` is out of range, the output Observable will emit an\n * `ArgumentOutOfRangeError` error.\n *\n * @example <caption>Emit only the third click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.elementAt(2);\n * result.subscribe(x => console.log(x));\n *\n * // Results in:\n * // click 1 = nothing\n * // click 2 = nothing\n * // click 3 = MouseEvent object logged to console\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link skip}\n * @see {@link single}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `elementAt(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0` or the\n * Observable has completed before emitting the i-th `next` notification.\n *\n * @param {number} index Is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {T} [defaultValue] The default value returned for missing indices.\n * @return {Observable} An Observable that emits a single item, if it is found.\n * Otherwise, will emit the default value if given. If not, then emits an error.\n * @method elementAt\n * @owner Observable\n */\nfunction elementAt(index, defaultValue) {\n    return elementAt_1.elementAt(index, defaultValue)(this);\n}\nexports.elementAt = elementAt;\n//# sourceMappingURL=elementAt.js.map","\"use strict\";\nvar async_1 = require('../scheduler/async');\nvar timeInterval_1 = require('../operators/timeInterval');\nexports.TimeInterval = timeInterval_1.TimeInterval;\n/**\n * @param scheduler\n * @return {Observable<TimeInterval<any>>|WebSocketSubject<T>|Observable<T>}\n * @method timeInterval\n * @owner Observable\n */\nfunction timeInterval(scheduler) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    return timeInterval_1.timeInterval(scheduler)(this);\n}\nexports.timeInterval = timeInterval;\n//# sourceMappingURL=timeInterval.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscription_1 = require('../Subscription');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\n/**\n * Buffers the source Observable values starting from an emission from\n * `openings` and ending when the output of `closingSelector` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array. Starts\n * collecting only when `opening` emits, and calls the `closingSelector`\n * function to get an Observable that tells when to close the buffer.</span>\n *\n * <img src=\"./img/bufferToggle.png\" width=\"100%\">\n *\n * Buffers values from the source by opening the buffer via signals from an\n * Observable provided to `openings`, and closing and sending the buffers when\n * a Subscribable or Promise returned by the `closingSelector` function emits.\n *\n * @example <caption>Every other second, emit the click events from the next 500ms</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var openings = Rx.Observable.interval(1000);\n * var buffered = clicks.bufferToggle(openings, i =>\n *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()\n * );\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferWhen}\n * @see {@link windowToggle}\n *\n * @param {SubscribableOrPromise<O>} openings A Subscribable or Promise of notifications to start new\n * buffers.\n * @param {function(value: O): SubscribableOrPromise} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns a Subscribable or Promise,\n * which, when it emits, signals that the associated buffer should be emitted\n * and cleared.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferToggle\n * @owner Observable\n */\nfunction bufferToggle(openings, closingSelector) {\n    return function bufferToggleOperatorFunction(source) {\n        return source.lift(new BufferToggleOperator(openings, closingSelector));\n    };\n}\nexports.bufferToggle = bufferToggle;\nvar BufferToggleOperator = (function () {\n    function BufferToggleOperator(openings, closingSelector) {\n        this.openings = openings;\n        this.closingSelector = closingSelector;\n    }\n    BufferToggleOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new BufferToggleSubscriber(subscriber, this.openings, this.closingSelector));\n    };\n    return BufferToggleOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar BufferToggleSubscriber = (function (_super) {\n    __extends(BufferToggleSubscriber, _super);\n    function BufferToggleSubscriber(destination, openings, closingSelector) {\n        _super.call(this, destination);\n        this.openings = openings;\n        this.closingSelector = closingSelector;\n        this.contexts = [];\n        this.add(subscribeToResult_1.subscribeToResult(this, openings));\n    }\n    BufferToggleSubscriber.prototype._next = function (value) {\n        var contexts = this.contexts;\n        var len = contexts.length;\n        for (var i = 0; i < len; i++) {\n            contexts[i].buffer.push(value);\n        }\n    };\n    BufferToggleSubscriber.prototype._error = function (err) {\n        var contexts = this.contexts;\n        while (contexts.length > 0) {\n            var context = contexts.shift();\n            context.subscription.unsubscribe();\n            context.buffer = null;\n            context.subscription = null;\n        }\n        this.contexts = null;\n        _super.prototype._error.call(this, err);\n    };\n    BufferToggleSubscriber.prototype._complete = function () {\n        var contexts = this.contexts;\n        while (contexts.length > 0) {\n            var context = contexts.shift();\n            this.destination.next(context.buffer);\n            context.subscription.unsubscribe();\n            context.buffer = null;\n            context.subscription = null;\n        }\n        this.contexts = null;\n        _super.prototype._complete.call(this);\n    };\n    BufferToggleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        outerValue ? this.closeBuffer(outerValue) : this.openBuffer(innerValue);\n    };\n    BufferToggleSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.closeBuffer(innerSub.context);\n    };\n    BufferToggleSubscriber.prototype.openBuffer = function (value) {\n        try {\n            var closingSelector = this.closingSelector;\n            var closingNotifier = closingSelector.call(this, value);\n            if (closingNotifier) {\n                this.trySubscribe(closingNotifier);\n            }\n        }\n        catch (err) {\n            this._error(err);\n        }\n    };\n    BufferToggleSubscriber.prototype.closeBuffer = function (context) {\n        var contexts = this.contexts;\n        if (contexts && context) {\n            var buffer = context.buffer, subscription = context.subscription;\n            this.destination.next(buffer);\n            contexts.splice(contexts.indexOf(context), 1);\n            this.remove(subscription);\n            subscription.unsubscribe();\n        }\n    };\n    BufferToggleSubscriber.prototype.trySubscribe = function (closingNotifier) {\n        var contexts = this.contexts;\n        var buffer = [];\n        var subscription = new Subscription_1.Subscription();\n        var context = { buffer: buffer, subscription: subscription };\n        contexts.push(context);\n        var innerSubscription = subscribeToResult_1.subscribeToResult(this, closingNotifier, context);\n        if (!innerSubscription || innerSubscription.closed) {\n            this.closeBuffer(context);\n        }\n        else {\n            innerSubscription.context = context;\n            this.add(innerSubscription);\n            subscription.add(innerSubscription);\n        }\n    };\n    return BufferToggleSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=bufferToggle.js.map","\"use strict\";\nvar mergeAll_1 = require('../operators/mergeAll');\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * <img src=\"./img/mergeAll.png\" width=\"100%\">\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Spawn a new interval Observable for each click event, and blend their outputs as one Observable</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));\n * var firstOrder = higherOrder.mergeAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * @example <caption>Count from 0 to 9 every second for each click, but only allow 2 concurrent timers</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(10));\n * var firstOrder = higherOrder.mergeAll(2);\n * firstOrder.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits values coming from all the\n * inner Observables emitted by the source Observable.\n * @method mergeAll\n * @owner Observable\n */\nfunction mergeAll(concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    return mergeAll_1.mergeAll(concurrent)(this);\n}\nexports.mergeAll = mergeAll;\n//# sourceMappingURL=mergeAll.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Converts an Observable of {@link Notification} objects into the emissions\n * that they represent.\n *\n * <span class=\"informal\">Unwraps {@link Notification} objects as actual `next`,\n * `error` and `complete` emissions. The opposite of {@link materialize}.</span>\n *\n * <img src=\"./img/dematerialize.png\" width=\"100%\">\n *\n * `dematerialize` is assumed to operate an Observable that only emits\n * {@link Notification} objects as `next` emissions, and does not emit any\n * `error`. Such Observable is the output of a `materialize` operation. Those\n * notifications are then unwrapped using the metadata they contain, and emitted\n * as `next`, `error`, and `complete` on the output Observable.\n *\n * Use this operator in conjunction with {@link materialize}.\n *\n * @example <caption>Convert an Observable of Notifications to an actual Observable</caption>\n * var notifA = new Rx.Notification('N', 'A');\n * var notifB = new Rx.Notification('N', 'B');\n * var notifE = new Rx.Notification('E', void 0,\n *   new TypeError('x.toUpperCase is not a function')\n * );\n * var materialized = Rx.Observable.of(notifA, notifB, notifE);\n * var upperCase = materialized.dematerialize();\n * upperCase.subscribe(x => console.log(x), e => console.error(e));\n *\n * // Results in:\n * // A\n * // B\n * // TypeError: x.toUpperCase is not a function\n *\n * @see {@link Notification}\n * @see {@link materialize}\n *\n * @return {Observable} An Observable that emits items and notifications\n * embedded in Notification objects emitted by the source Observable.\n * @method dematerialize\n * @owner Observable\n */\nfunction dematerialize() {\n    return function dematerializeOperatorFunction(source) {\n        return source.lift(new DeMaterializeOperator());\n    };\n}\nexports.dematerialize = dematerialize;\nvar DeMaterializeOperator = (function () {\n    function DeMaterializeOperator() {\n    }\n    DeMaterializeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DeMaterializeSubscriber(subscriber));\n    };\n    return DeMaterializeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DeMaterializeSubscriber = (function (_super) {\n    __extends(DeMaterializeSubscriber, _super);\n    function DeMaterializeSubscriber(destination) {\n        _super.call(this, destination);\n    }\n    DeMaterializeSubscriber.prototype._next = function (value) {\n        value.observe(this.destination);\n    };\n    return DeMaterializeSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=dematerialize.js.map","\"use strict\";\nvar reduce_1 = require('../operators/reduce');\n/* tslint:enable:max-line-length */\n/**\n * Applies an accumulator function over the source Observable, and returns the\n * accumulated result when the source completes, given an optional seed value.\n *\n * <span class=\"informal\">Combines together all values emitted on the source,\n * using an accumulator function that knows how to join a new source value into\n * the accumulation from the past.</span>\n *\n * <img src=\"./img/reduce.png\" width=\"100%\">\n *\n * Like\n * [Array.prototype.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce),\n * `reduce` applies an `accumulator` function against an accumulation and each\n * value of the source Observable (from the past) to reduce it to a single\n * value, emitted on the output Observable. Note that `reduce` will only emit\n * one value, only when the source Observable completes. It is equivalent to\n * applying operator {@link scan} followed by operator {@link last}.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * @example <caption>Count the number of click events that happened in 5 seconds</caption>\n * var clicksInFiveSeconds = Rx.Observable.fromEvent(document, 'click')\n *   .takeUntil(Rx.Observable.interval(5000));\n * var ones = clicksInFiveSeconds.mapTo(1);\n * var seed = 0;\n * var count = ones.reduce((acc, one) => acc + one, seed);\n * count.subscribe(x => console.log(x));\n *\n * @see {@link count}\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link scan}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator The accumulator function\n * called on each source value.\n * @param {R} [seed] The initial accumulation value.\n * @return {Observable<R>} An Observable that emits a single value that is the\n * result of accumulating the values emitted by the source Observable.\n * @method reduce\n * @owner Observable\n */\nfunction reduce(accumulator, seed) {\n    // providing a seed of `undefined` *should* be valid and trigger\n    // hasSeed! so don't use `seed !== undefined` checks!\n    // For this reason, we have to check it here at the original call site\n    // otherwise inside Operator/Subscriber we won't know if `undefined`\n    // means they didn't provide anything or if they literally provided `undefined`\n    if (arguments.length >= 2) {\n        return reduce_1.reduce(accumulator, seed)(this);\n    }\n    return reduce_1.reduce(accumulator)(this);\n}\nexports.reduce = reduce;\n//# sourceMappingURL=reduce.js.map","\"use strict\";\nvar DeferObservable_1 = require('./DeferObservable');\nexports.defer = DeferObservable_1.DeferObservable.create;\n//# sourceMappingURL=defer.js.map","\"use strict\";\nvar publish_1 = require('../operators/publish');\n/* tslint:enable:max-line-length */\n/**\n * Returns a ConnectableObservable, which is a variety of Observable that waits until its connect method is called\n * before it begins emitting items to those Observers that have subscribed to it.\n *\n * <img src=\"./img/publish.png\" width=\"100%\">\n *\n * @param {Function} [selector] - Optional selector function which can use the multicasted source sequence as many times\n * as needed, without causing multiple subscriptions to the source sequence.\n * Subscribers to the given source will receive all notifications of the source from the time of the subscription on.\n * @return A ConnectableObservable that upon connection causes the source Observable to emit items to its Observers.\n * @method publish\n * @owner Observable\n */\nfunction publish(selector) {\n    return publish_1.publish(selector)(this);\n}\nexports.publish = publish;\n//# sourceMappingURL=publish.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar defaultIfEmpty_1 = require('../../operator/defaultIfEmpty');\nObservable_1.Observable.prototype.defaultIfEmpty = defaultIfEmpty_1.defaultIfEmpty;\n//# sourceMappingURL=defaultIfEmpty.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar first_1 = require('../../operator/first');\nObservable_1.Observable.prototype.first = first_1.first;\n//# sourceMappingURL=first.js.map","\"use strict\";\nvar pluck_1 = require('../operators/pluck');\n/**\n * Maps each source value (an object) to its specified nested property.\n *\n * <span class=\"informal\">Like {@link map}, but meant only for picking one of\n * the nested properties of every emitted object.</span>\n *\n * <img src=\"./img/pluck.png\" width=\"100%\">\n *\n * Given a list of strings describing a path to an object property, retrieves\n * the value of a specified nested property from all values in the source\n * Observable. If a property can't be resolved, it will return `undefined` for\n * that value.\n *\n * @example <caption>Map every click to the tagName of the clicked target element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var tagNames = clicks.pluck('target', 'tagName');\n * tagNames.subscribe(x => console.log(x));\n *\n * @see {@link map}\n *\n * @param {...string} properties The nested properties to pluck from each source\n * value (an object).\n * @return {Observable} A new Observable of property values from the source values.\n * @method pluck\n * @owner Observable\n */\nfunction pluck() {\n    var properties = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        properties[_i - 0] = arguments[_i];\n    }\n    return pluck_1.pluck.apply(void 0, properties)(this);\n}\nexports.pluck = pluck;\n//# sourceMappingURL=pluck.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = require('./Subject');\nvar Subscription_1 = require('./Subscription');\n/**\n * @class AsyncSubject<T>\n */\nvar AsyncSubject = (function (_super) {\n    __extends(AsyncSubject, _super);\n    function AsyncSubject() {\n        _super.apply(this, arguments);\n        this.value = null;\n        this.hasNext = false;\n        this.hasCompleted = false;\n    }\n    /** @deprecated internal use only */ AsyncSubject.prototype._subscribe = function (subscriber) {\n        if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else if (this.hasCompleted && this.hasNext) {\n            subscriber.next(this.value);\n            subscriber.complete();\n            return Subscription_1.Subscription.EMPTY;\n        }\n        return _super.prototype._subscribe.call(this, subscriber);\n    };\n    AsyncSubject.prototype.next = function (value) {\n        if (!this.hasCompleted) {\n            this.value = value;\n            this.hasNext = true;\n        }\n    };\n    AsyncSubject.prototype.error = function (error) {\n        if (!this.hasCompleted) {\n            _super.prototype.error.call(this, error);\n        }\n    };\n    AsyncSubject.prototype.complete = function () {\n        this.hasCompleted = true;\n        if (this.hasNext) {\n            _super.prototype.next.call(this, this.value);\n        }\n        _super.prototype.complete.call(this);\n    };\n    return AsyncSubject;\n}(Subject_1.Subject));\nexports.AsyncSubject = AsyncSubject;\n//# sourceMappingURL=AsyncSubject.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar timeout_1 = require('../../operator/timeout');\nObservable_1.Observable.prototype.timeout = timeout_1.timeout;\n//# sourceMappingURL=timeout.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar switchMapTo_1 = require('../../operator/switchMapTo');\nObservable_1.Observable.prototype.switchMapTo = switchMapTo_1.switchMapTo;\n//# sourceMappingURL=switchMapTo.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ArrayObservable_1 = require('../observable/ArrayObservable');\nvar isArray_1 = require('../util/isArray');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\nvar none = {};\n/* tslint:enable:max-line-length */\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * <img src=\"./img/combineLatest.png\" width=\"100%\">\n *\n * `combineLatest` combines the values from this Observable with values from\n * Observables passed as arguments. This is done by subscribing to each\n * Observable, in order, and collecting an array of each of the most recent\n * values any time any of the input Observables emits, then either taking that\n * array and passing it as arguments to an optional `project` function and\n * emitting the return value of that, or just emitting the array of recent\n * values directly if there is no `project` function.\n *\n * @example <caption>Dynamically calculate the Body-Mass Index from an Observable of weight and one for height</caption>\n * var weight = Rx.Observable.of(70, 72, 76, 79, 75);\n * var height = Rx.Observable.of(1.76, 1.77, 1.78);\n * var bmi = weight.combineLatest(height, (w, h) => w / (h * h));\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method combineLatest\n * @owner Observable\n */\nfunction combineLatest() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    var project = null;\n    if (typeof observables[observables.length - 1] === 'function') {\n        project = observables.pop();\n    }\n    // if the first and only other argument besides the resultSelector is an array\n    // assume it's been called with `combineLatest([obs1, obs2, obs3], project)`\n    if (observables.length === 1 && isArray_1.isArray(observables[0])) {\n        observables = observables[0].slice();\n    }\n    return function (source) { return source.lift.call(new ArrayObservable_1.ArrayObservable([source].concat(observables)), new CombineLatestOperator(project)); };\n}\nexports.combineLatest = combineLatest;\nvar CombineLatestOperator = (function () {\n    function CombineLatestOperator(project) {\n        this.project = project;\n    }\n    CombineLatestOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new CombineLatestSubscriber(subscriber, this.project));\n    };\n    return CombineLatestOperator;\n}());\nexports.CombineLatestOperator = CombineLatestOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar CombineLatestSubscriber = (function (_super) {\n    __extends(CombineLatestSubscriber, _super);\n    function CombineLatestSubscriber(destination, project) {\n        _super.call(this, destination);\n        this.project = project;\n        this.active = 0;\n        this.values = [];\n        this.observables = [];\n    }\n    CombineLatestSubscriber.prototype._next = function (observable) {\n        this.values.push(none);\n        this.observables.push(observable);\n    };\n    CombineLatestSubscriber.prototype._complete = function () {\n        var observables = this.observables;\n        var len = observables.length;\n        if (len === 0) {\n            this.destination.complete();\n        }\n        else {\n            this.active = len;\n            this.toRespond = len;\n            for (var i = 0; i < len; i++) {\n                var observable = observables[i];\n                this.add(subscribeToResult_1.subscribeToResult(this, observable, observable, i));\n            }\n        }\n    };\n    CombineLatestSubscriber.prototype.notifyComplete = function (unused) {\n        if ((this.active -= 1) === 0) {\n            this.destination.complete();\n        }\n    };\n    CombineLatestSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var values = this.values;\n        var oldVal = values[outerIndex];\n        var toRespond = !this.toRespond\n            ? 0\n            : oldVal === none ? --this.toRespond : this.toRespond;\n        values[outerIndex] = innerValue;\n        if (toRespond === 0) {\n            if (this.project) {\n                this._tryProject(values);\n            }\n            else {\n                this.destination.next(values.slice());\n            }\n        }\n    };\n    CombineLatestSubscriber.prototype._tryProject = function (values) {\n        var result;\n        try {\n            result = this.project.apply(this, values);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return CombineLatestSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nexports.CombineLatestSubscriber = CombineLatestSubscriber;\n//# sourceMappingURL=combineLatest.js.map","import { Observable } from 'rxjs';\nimport { checkAvailability, getPlugin } from './common';\nfunction overrideFunction(pluginObj, methodName) {\n    return new Observable(function (observer) {\n        var availabilityCheck = checkAvailability(pluginObj, methodName);\n        if (availabilityCheck === true) {\n            var pluginInstance_1 = getPlugin(pluginObj.constructor.getPluginRef());\n            pluginInstance_1[methodName] = observer.next.bind(observer);\n            return function () { return (pluginInstance_1[methodName] = function () { }); };\n        }\n        else {\n            observer.error(availabilityCheck);\n            observer.complete();\n        }\n    });\n}\nexport function cordovaFunctionOverride(pluginObj, methodName, args) {\n    if (args === void 0) { args = []; }\n    return overrideFunction(pluginObj, methodName);\n}\n//# sourceMappingURL=cordova-function-override.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Groups pairs of consecutive emissions together and emits them as an array of\n * two values.\n *\n * <span class=\"informal\">Puts the current value and previous value together as\n * an array, and emits that.</span>\n *\n * <img src=\"./img/pairwise.png\" width=\"100%\">\n *\n * The Nth emission from the source Observable will cause the output Observable\n * to emit an array [(N-1)th, Nth] of the previous and the current value, as a\n * pair. For this reason, `pairwise` emits on the second and subsequent\n * emissions from the source Observable, but not on the first emission, because\n * there is no previous value in that case.\n *\n * @example <caption>On every click (starting from the second), emit the relative distance to the previous click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var pairs = clicks.pairwise();\n * var distance = pairs.map(pair => {\n *   var x0 = pair[0].clientX;\n *   var y0 = pair[0].clientY;\n *   var x1 = pair[1].clientX;\n *   var y1 = pair[1].clientY;\n *   return Math.sqrt(Math.pow(x0 - x1, 2) + Math.pow(y0 - y1, 2));\n * });\n * distance.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n *\n * @return {Observable<Array<T>>} An Observable of pairs (as arrays) of\n * consecutive values from the source Observable.\n * @method pairwise\n * @owner Observable\n */\nfunction pairwise() {\n    return function (source) { return source.lift(new PairwiseOperator()); };\n}\nexports.pairwise = pairwise;\nvar PairwiseOperator = (function () {\n    function PairwiseOperator() {\n    }\n    PairwiseOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new PairwiseSubscriber(subscriber));\n    };\n    return PairwiseOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar PairwiseSubscriber = (function (_super) {\n    __extends(PairwiseSubscriber, _super);\n    function PairwiseSubscriber(destination) {\n        _super.call(this, destination);\n        this.hasPrev = false;\n    }\n    PairwiseSubscriber.prototype._next = function (value) {\n        if (this.hasPrev) {\n            this.destination.next([this.prev, value]);\n        }\n        else {\n            this.hasPrev = true;\n        }\n        this.prev = value;\n    };\n    return PairwiseSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=pairwise.js.map","\"use strict\";\nvar switchMap_1 = require('./switchMap');\nvar identity_1 = require('../util/identity');\nfunction switchAll() {\n    return switchMap_1.switchMap(identity_1.identity);\n}\nexports.switchAll = switchAll;\n//# sourceMappingURL=switchAll.js.map","\"use strict\";\nvar root_1 = require('./root');\nvar isArrayLike_1 = require('./isArrayLike');\nvar isPromise_1 = require('./isPromise');\nvar isObject_1 = require('./isObject');\nvar Observable_1 = require('../Observable');\nvar iterator_1 = require('../symbol/iterator');\nvar InnerSubscriber_1 = require('../InnerSubscriber');\nvar observable_1 = require('../symbol/observable');\nfunction subscribeToResult(outerSubscriber, result, outerValue, outerIndex) {\n    var destination = new InnerSubscriber_1.InnerSubscriber(outerSubscriber, outerValue, outerIndex);\n    if (destination.closed) {\n        return null;\n    }\n    if (result instanceof Observable_1.Observable) {\n        if (result._isScalar) {\n            destination.next(result.value);\n            destination.complete();\n            return null;\n        }\n        else {\n            destination.syncErrorThrowable = true;\n            return result.subscribe(destination);\n        }\n    }\n    else if (isArrayLike_1.isArrayLike(result)) {\n        for (var i = 0, len = result.length; i < len && !destination.closed; i++) {\n            destination.next(result[i]);\n        }\n        if (!destination.closed) {\n            destination.complete();\n        }\n    }\n    else if (isPromise_1.isPromise(result)) {\n        result.then(function (value) {\n            if (!destination.closed) {\n                destination.next(value);\n                destination.complete();\n            }\n        }, function (err) { return destination.error(err); })\n            .then(null, function (err) {\n            // Escaping the Promise trap: globally throw unhandled errors\n            root_1.root.setTimeout(function () { throw err; });\n        });\n        return destination;\n    }\n    else if (result && typeof result[iterator_1.iterator] === 'function') {\n        var iterator = result[iterator_1.iterator]();\n        do {\n            var item = iterator.next();\n            if (item.done) {\n                destination.complete();\n                break;\n            }\n            destination.next(item.value);\n            if (destination.closed) {\n                break;\n            }\n        } while (true);\n    }\n    else if (result && typeof result[observable_1.observable] === 'function') {\n        var obs = result[observable_1.observable]();\n        if (typeof obs.subscribe !== 'function') {\n            destination.error(new TypeError('Provided object does not correctly implement Symbol.observable'));\n        }\n        else {\n            return obs.subscribe(new InnerSubscriber_1.InnerSubscriber(outerSubscriber, outerValue, outerIndex));\n        }\n    }\n    else {\n        var value = isObject_1.isObject(result) ? 'an invalid object' : \"'\" + result + \"'\";\n        var msg = (\"You provided \" + value + \" where a stream was expected.\")\n            + ' You can provide an Observable, Promise, Array, or Iterable.';\n        destination.error(new TypeError(msg));\n    }\n    return null;\n}\nexports.subscribeToResult = subscribeToResult;\n//# sourceMappingURL=subscribeToResult.js.map","\"use strict\";\nvar bufferWhen_1 = require('../operators/bufferWhen');\n/**\n * Buffers the source Observable values, using a factory function of closing\n * Observables to determine when to close, emit, and reset the buffer.\n *\n * <span class=\"informal\">Collects values from the past as an array. When it\n * starts collecting values, it calls a function that returns an Observable that\n * tells when to close the buffer and restart collecting.</span>\n *\n * <img src=\"./img/bufferWhen.png\" width=\"100%\">\n *\n * Opens a buffer immediately, then closes the buffer when the observable\n * returned by calling `closingSelector` function emits a value. When it closes\n * the buffer, it immediately opens a new buffer and repeats the process.\n *\n * @example <caption>Emit an array of the last clicks every [1-5] random seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferWhen(() =>\n *   Rx.Observable.interval(1000 + Math.random() * 4000)\n * );\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link windowWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals buffer closure.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferWhen\n * @owner Observable\n */\nfunction bufferWhen(closingSelector) {\n    return bufferWhen_1.bufferWhen(closingSelector)(this);\n}\nexports.bufferWhen = bufferWhen;\n//# sourceMappingURL=bufferWhen.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar concatMap_1 = require('../../operator/concatMap');\nObservable_1.Observable.prototype.concatMap = concatMap_1.concatMap;\n//# sourceMappingURL=concatMap.js.map","export { default } from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Tab1.vue?vue&type=style&index=0&id=5466b762&lang=scss&scoped=true\"; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Tab1.vue?vue&type=style&index=0&id=5466b762&lang=scss&scoped=true\"","\"use strict\";\nvar observeOn_1 = require('../operators/observeOn');\n/**\n *\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * @example <caption>Ensure values in subscribe are called just before browser repaint.</caption>\n * const intervals = Rx.Observable.interval(10); // Intervals are scheduled\n *                                               // with async scheduler by default...\n *\n * intervals\n * .observeOn(Rx.Scheduler.animationFrame)       // ...but we will observe on animationFrame\n * .subscribe(val => {                           // scheduler to ensure smooth animation.\n *   someDiv.style.height = val + 'px';\n * });\n *\n * @see {@link delay}\n *\n * @param {IScheduler} scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param {number} [delay] Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return {Observable<T>} Observable that emits the same notifications as the source Observable,\n * but with provided scheduler.\n *\n * @method observeOn\n * @owner Observable\n */\nfunction observeOn(scheduler, delay) {\n    if (delay === void 0) { delay = 0; }\n    return observeOn_1.observeOn(scheduler, delay)(this);\n}\nexports.observeOn = observeOn;\n//# sourceMappingURL=observeOn.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar concat_1 = require('../../operator/concat');\nObservable_1.Observable.prototype.concat = concat_1.concat;\n//# sourceMappingURL=concat.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\nvar ScalarObservable_1 = require('./ScalarObservable');\nvar EmptyObservable_1 = require('./EmptyObservable');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ArrayLikeObservable = (function (_super) {\n    __extends(ArrayLikeObservable, _super);\n    function ArrayLikeObservable(arrayLike, scheduler) {\n        _super.call(this);\n        this.arrayLike = arrayLike;\n        this.scheduler = scheduler;\n        if (!scheduler && arrayLike.length === 1) {\n            this._isScalar = true;\n            this.value = arrayLike[0];\n        }\n    }\n    ArrayLikeObservable.create = function (arrayLike, scheduler) {\n        var length = arrayLike.length;\n        if (length === 0) {\n            return new EmptyObservable_1.EmptyObservable();\n        }\n        else if (length === 1) {\n            return new ScalarObservable_1.ScalarObservable(arrayLike[0], scheduler);\n        }\n        else {\n            return new ArrayLikeObservable(arrayLike, scheduler);\n        }\n    };\n    ArrayLikeObservable.dispatch = function (state) {\n        var arrayLike = state.arrayLike, index = state.index, length = state.length, subscriber = state.subscriber;\n        if (subscriber.closed) {\n            return;\n        }\n        if (index >= length) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(arrayLike[index]);\n        state.index = index + 1;\n        this.schedule(state);\n    };\n    /** @deprecated internal use only */ ArrayLikeObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var _a = this, arrayLike = _a.arrayLike, scheduler = _a.scheduler;\n        var length = arrayLike.length;\n        if (scheduler) {\n            return scheduler.schedule(ArrayLikeObservable.dispatch, 0, {\n                arrayLike: arrayLike, index: index, length: length, subscriber: subscriber\n            });\n        }\n        else {\n            for (var i = 0; i < length && !subscriber.closed; i++) {\n                subscriber.next(arrayLike[i]);\n            }\n            subscriber.complete();\n        }\n    };\n    return ArrayLikeObservable;\n}(Observable_1.Observable));\nexports.ArrayLikeObservable = ArrayLikeObservable;\n//# sourceMappingURL=ArrayLikeObservable.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar ArgumentOutOfRangeError_1 = require('../util/ArgumentOutOfRangeError');\n/**\n * Skip the last `count` values emitted by the source Observable.\n *\n * <img src=\"./img/skipLast.png\" width=\"100%\">\n *\n * `skipLast` returns an Observable that accumulates a queue with a length\n * enough to store the first `count` values. As more values are received,\n * values are taken from the front of the queue and produced on the result\n * sequence. This causes values to be delayed.\n *\n * @example <caption>Skip the last 2 values of an Observable with many values</caption>\n * var many = Rx.Observable.range(1, 5);\n * var skipLastTwo = many.skipLast(2);\n * skipLastTwo.subscribe(x => console.log(x));\n *\n * // Results in:\n * // 1 2 3\n *\n * @see {@link skip}\n * @see {@link skipUntil}\n * @see {@link skipWhile}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `skipLast(i)`, it throws\n * ArgumentOutOrRangeError if `i < 0`.\n *\n * @param {number} count Number of elements to skip from the end of the source Observable.\n * @returns {Observable<T>} An Observable that skips the last count values\n * emitted by the source Observable.\n * @method skipLast\n * @owner Observable\n */\nfunction skipLast(count) {\n    return function (source) { return source.lift(new SkipLastOperator(count)); };\n}\nexports.skipLast = skipLast;\nvar SkipLastOperator = (function () {\n    function SkipLastOperator(_skipCount) {\n        this._skipCount = _skipCount;\n        if (this._skipCount < 0) {\n            throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;\n        }\n    }\n    SkipLastOperator.prototype.call = function (subscriber, source) {\n        if (this._skipCount === 0) {\n            // If we don't want to skip any values then just subscribe\n            // to Subscriber without any further logic.\n            return source.subscribe(new Subscriber_1.Subscriber(subscriber));\n        }\n        else {\n            return source.subscribe(new SkipLastSubscriber(subscriber, this._skipCount));\n        }\n    };\n    return SkipLastOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SkipLastSubscriber = (function (_super) {\n    __extends(SkipLastSubscriber, _super);\n    function SkipLastSubscriber(destination, _skipCount) {\n        _super.call(this, destination);\n        this._skipCount = _skipCount;\n        this._count = 0;\n        this._ring = new Array(_skipCount);\n    }\n    SkipLastSubscriber.prototype._next = function (value) {\n        var skipCount = this._skipCount;\n        var count = this._count++;\n        if (count < skipCount) {\n            this._ring[count] = value;\n        }\n        else {\n            var currentIndex = count % skipCount;\n            var ring = this._ring;\n            var oldValue = ring[currentIndex];\n            ring[currentIndex] = value;\n            this.destination.next(oldValue);\n        }\n    };\n    return SkipLastSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=skipLast.js.map","\"use strict\";\nvar Observable_1 = require('./Observable');\n/**\n * Represents a push-based event or value that an {@link Observable} can emit.\n * This class is particularly useful for operators that manage notifications,\n * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\n * others. Besides wrapping the actual delivered value, it also annotates it\n * with metadata of, for instance, what type of push message it is (`next`,\n * `error`, or `complete`).\n *\n * @see {@link materialize}\n * @see {@link dematerialize}\n * @see {@link observeOn}\n *\n * @class Notification<T>\n */\nvar Notification = (function () {\n    function Notification(kind, value, error) {\n        this.kind = kind;\n        this.value = value;\n        this.error = error;\n        this.hasValue = kind === 'N';\n    }\n    /**\n     * Delivers to the given `observer` the value wrapped by this Notification.\n     * @param {Observer} observer\n     * @return\n     */\n    Notification.prototype.observe = function (observer) {\n        switch (this.kind) {\n            case 'N':\n                return observer.next && observer.next(this.value);\n            case 'E':\n                return observer.error && observer.error(this.error);\n            case 'C':\n                return observer.complete && observer.complete();\n        }\n    };\n    /**\n     * Given some {@link Observer} callbacks, deliver the value represented by the\n     * current Notification to the correctly corresponding callback.\n     * @param {function(value: T): void} next An Observer `next` callback.\n     * @param {function(err: any): void} [error] An Observer `error` callback.\n     * @param {function(): void} [complete] An Observer `complete` callback.\n     * @return {any}\n     */\n    Notification.prototype.do = function (next, error, complete) {\n        var kind = this.kind;\n        switch (kind) {\n            case 'N':\n                return next && next(this.value);\n            case 'E':\n                return error && error(this.error);\n            case 'C':\n                return complete && complete();\n        }\n    };\n    /**\n     * Takes an Observer or its individual callback functions, and calls `observe`\n     * or `do` methods accordingly.\n     * @param {Observer|function(value: T): void} nextOrObserver An Observer or\n     * the `next` callback.\n     * @param {function(err: any): void} [error] An Observer `error` callback.\n     * @param {function(): void} [complete] An Observer `complete` callback.\n     * @return {any}\n     */\n    Notification.prototype.accept = function (nextOrObserver, error, complete) {\n        if (nextOrObserver && typeof nextOrObserver.next === 'function') {\n            return this.observe(nextOrObserver);\n        }\n        else {\n            return this.do(nextOrObserver, error, complete);\n        }\n    };\n    /**\n     * Returns a simple Observable that just delivers the notification represented\n     * by this Notification instance.\n     * @return {any}\n     */\n    Notification.prototype.toObservable = function () {\n        var kind = this.kind;\n        switch (kind) {\n            case 'N':\n                return Observable_1.Observable.of(this.value);\n            case 'E':\n                return Observable_1.Observable.throw(this.error);\n            case 'C':\n                return Observable_1.Observable.empty();\n        }\n        throw new Error('unexpected notification kind value');\n    };\n    /**\n     * A shortcut to create a Notification instance of the type `next` from a\n     * given value.\n     * @param {T} value The `next` value.\n     * @return {Notification<T>} The \"next\" Notification representing the\n     * argument.\n     */\n    Notification.createNext = function (value) {\n        if (typeof value !== 'undefined') {\n            return new Notification('N', value);\n        }\n        return Notification.undefinedValueNotification;\n    };\n    /**\n     * A shortcut to create a Notification instance of the type `error` from a\n     * given error.\n     * @param {any} [err] The `error` error.\n     * @return {Notification<T>} The \"error\" Notification representing the\n     * argument.\n     */\n    Notification.createError = function (err) {\n        return new Notification('E', undefined, err);\n    };\n    /**\n     * A shortcut to create a Notification instance of the type `complete`.\n     * @return {Notification<any>} The valueless \"complete\" Notification.\n     */\n    Notification.createComplete = function () {\n        return Notification.completeNotification;\n    };\n    Notification.completeNotification = new Notification('C');\n    Notification.undefinedValueNotification = new Notification('N', undefined);\n    return Notification;\n}());\nexports.Notification = Notification;\n//# sourceMappingURL=Notification.js.map","\"use strict\";\nvar IfObservable_1 = require('./IfObservable');\nexports._if = IfObservable_1.IfObservable.create;\n//# sourceMappingURL=if.js.map","\"use strict\";\nvar startWith_1 = require('../operators/startWith');\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits the items you specify as arguments before it begins to emit\n * items emitted by the source Observable.\n *\n * <img src=\"./img/startWith.png\" width=\"100%\">\n *\n * @param {...T} values - Items you want the modified Observable to emit first.\n * @param {Scheduler} [scheduler] - A {@link IScheduler} to use for scheduling\n * the emissions of the `next` notifications.\n * @return {Observable} An Observable that emits the items in the specified Iterable and then emits the items\n * emitted by the source Observable.\n * @method startWith\n * @owner Observable\n */\nfunction startWith() {\n    var array = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        array[_i - 0] = arguments[_i];\n    }\n    return startWith_1.startWith.apply(void 0, array)(this);\n}\nexports.startWith = startWith;\n//# sourceMappingURL=startWith.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar defer_1 = require('../../observable/defer');\nObservable_1.Observable.defer = defer_1.defer;\n//# sourceMappingURL=defer.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\nvar Set_1 = require('../util/Set');\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from previous items.\n *\n * If a keySelector function is provided, then it will project each value from the source observable into a new value that it will\n * check for equality with previously projected values. If a keySelector function is not provided, it will use each value from the\n * source observable directly with an equality check against previous values.\n *\n * In JavaScript runtimes that support `Set`, this operator will use a `Set` to improve performance of the distinct value checking.\n *\n * In other runtimes, this operator will use a minimal implementation of `Set` that relies on an `Array` and `indexOf` under the\n * hood, so performance will degrade as more values are checked for distinction. Even in newer browsers, a long-running `distinct`\n * use might result in memory leaks. To help alleviate this in some scenarios, an optional `flushes` parameter is also provided so\n * that the internal `Set` can be \"flushed\", basically clearing it of values.\n *\n * @example <caption>A simple example with numbers</caption>\n * Observable.of(1, 1, 2, 2, 2, 1, 2, 3, 4, 3, 2, 1)\n *   .distinct()\n *   .subscribe(x => console.log(x)); // 1, 2, 3, 4\n *\n * @example <caption>An example using a keySelector function</caption>\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'})\n *     .distinct((p: Person) => p.name)\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n *\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [keySelector] Optional function to select which value you want to check as distinct.\n * @param {Observable} [flushes] Optional Observable for flushing the internal HashSet of the operator.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinct\n * @owner Observable\n */\nfunction distinct(keySelector, flushes) {\n    return function (source) { return source.lift(new DistinctOperator(keySelector, flushes)); };\n}\nexports.distinct = distinct;\nvar DistinctOperator = (function () {\n    function DistinctOperator(keySelector, flushes) {\n        this.keySelector = keySelector;\n        this.flushes = flushes;\n    }\n    DistinctOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DistinctSubscriber(subscriber, this.keySelector, this.flushes));\n    };\n    return DistinctOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DistinctSubscriber = (function (_super) {\n    __extends(DistinctSubscriber, _super);\n    function DistinctSubscriber(destination, keySelector, flushes) {\n        _super.call(this, destination);\n        this.keySelector = keySelector;\n        this.values = new Set_1.Set();\n        if (flushes) {\n            this.add(subscribeToResult_1.subscribeToResult(this, flushes));\n        }\n    }\n    DistinctSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.values.clear();\n    };\n    DistinctSubscriber.prototype.notifyError = function (error, innerSub) {\n        this._error(error);\n    };\n    DistinctSubscriber.prototype._next = function (value) {\n        if (this.keySelector) {\n            this._useKeySelector(value);\n        }\n        else {\n            this._finalizeNext(value, value);\n        }\n    };\n    DistinctSubscriber.prototype._useKeySelector = function (value) {\n        var key;\n        var destination = this.destination;\n        try {\n            key = this.keySelector(value);\n        }\n        catch (err) {\n            destination.error(err);\n            return;\n        }\n        this._finalizeNext(key, value);\n    };\n    DistinctSubscriber.prototype._finalizeNext = function (key, value) {\n        var values = this.values;\n        if (!values.has(key)) {\n            values.add(key);\n            this.destination.next(value);\n        }\n    };\n    return DistinctSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nexports.DistinctSubscriber = DistinctSubscriber;\n//# sourceMappingURL=distinct.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar observeOn_1 = require('../../operator/observeOn');\nObservable_1.Observable.prototype.observeOn = observeOn_1.observeOn;\n//# sourceMappingURL=observeOn.js.map","\"use strict\";\nvar mergeScan_1 = require('../operators/mergeScan');\n/**\n * Applies an accumulator function over the source Observable where the\n * accumulator function itself returns an Observable, then each intermediate\n * Observable returned is merged into the output Observable.\n *\n * <span class=\"informal\">It's like {@link scan}, but the Observables returned\n * by the accumulator are merged into the outer Observable.</span>\n *\n * @example <caption>Count the number of click events</caption>\n * const click$ = Rx.Observable.fromEvent(document, 'click');\n * const one$ = click$.mapTo(1);\n * const seed = 0;\n * const count$ = one$.mergeScan((acc, one) => Rx.Observable.of(acc + one), seed);\n * count$.subscribe(x => console.log(x));\n *\n * // Results:\n * 1\n * 2\n * 3\n * 4\n * // ...and so on for each click\n *\n * @param {function(acc: R, value: T): Observable<R>} accumulator\n * The accumulator function called on each source value.\n * @param seed The initial accumulation value.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of\n * input Observables being subscribed to concurrently.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method mergeScan\n * @owner Observable\n */\nfunction mergeScan(accumulator, seed, concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    return mergeScan_1.mergeScan(accumulator, seed, concurrent)(this);\n}\nexports.mergeScan = mergeScan;\n//# sourceMappingURL=mergeScan.js.map","\"use strict\";\nvar root_1 = require('./root');\nfunction assignImpl(target) {\n    var sources = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        sources[_i - 1] = arguments[_i];\n    }\n    var len = sources.length;\n    for (var i = 0; i < len; i++) {\n        var source = sources[i];\n        for (var k in source) {\n            if (source.hasOwnProperty(k)) {\n                target[k] = source[k];\n            }\n        }\n    }\n    return target;\n}\nexports.assignImpl = assignImpl;\n;\nfunction getAssign(root) {\n    return root.Object.assign || assignImpl;\n}\nexports.getAssign = getAssign;\nexports.assign = getAssign(root_1.root);\n//# sourceMappingURL=assign.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Emits only the first value emitted by the source Observable that meets some\n * condition.\n *\n * <span class=\"informal\">Finds the first value that passes some test and emits\n * that.</span>\n *\n * <img src=\"./img/find.png\" width=\"100%\">\n *\n * `find` searches for the first item in the source Observable that matches the\n * specified condition embodied by the `predicate`, and returns the first\n * occurrence in the source. Unlike {@link first}, the `predicate` is required\n * in `find`, and does not emit an error if a valid value is not found.\n *\n * @example <caption>Find and emit the first click that happens on a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.find(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link first}\n * @see {@link findIndex}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable<T>} An Observable of the first item that matches the\n * condition.\n * @method find\n * @owner Observable\n */\nfunction find(predicate, thisArg) {\n    if (typeof predicate !== 'function') {\n        throw new TypeError('predicate is not a function');\n    }\n    return function (source) { return source.lift(new FindValueOperator(predicate, source, false, thisArg)); };\n}\nexports.find = find;\nvar FindValueOperator = (function () {\n    function FindValueOperator(predicate, source, yieldIndex, thisArg) {\n        this.predicate = predicate;\n        this.source = source;\n        this.yieldIndex = yieldIndex;\n        this.thisArg = thisArg;\n    }\n    FindValueOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new FindValueSubscriber(observer, this.predicate, this.source, this.yieldIndex, this.thisArg));\n    };\n    return FindValueOperator;\n}());\nexports.FindValueOperator = FindValueOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar FindValueSubscriber = (function (_super) {\n    __extends(FindValueSubscriber, _super);\n    function FindValueSubscriber(destination, predicate, source, yieldIndex, thisArg) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.source = source;\n        this.yieldIndex = yieldIndex;\n        this.thisArg = thisArg;\n        this.index = 0;\n    }\n    FindValueSubscriber.prototype.notifyComplete = function (value) {\n        var destination = this.destination;\n        destination.next(value);\n        destination.complete();\n    };\n    FindValueSubscriber.prototype._next = function (value) {\n        var _a = this, predicate = _a.predicate, thisArg = _a.thisArg;\n        var index = this.index++;\n        try {\n            var result = predicate.call(thisArg || this, value, index, this.source);\n            if (result) {\n                this.notifyComplete(this.yieldIndex ? index : value);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    FindValueSubscriber.prototype._complete = function () {\n        this.notifyComplete(this.yieldIndex ? -1 : undefined);\n    };\n    return FindValueSubscriber;\n}(Subscriber_1.Subscriber));\nexports.FindValueSubscriber = FindValueSubscriber;\n//# sourceMappingURL=find.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar merge_1 = require('../../operator/merge');\nObservable_1.Observable.prototype.merge = merge_1.merge;\n//# sourceMappingURL=merge.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar expand_1 = require('../../operator/expand');\nObservable_1.Observable.prototype.expand = expand_1.expand;\n//# sourceMappingURL=expand.js.map","\"use strict\";\n/**\n * @param func\n * @return {Observable<R>}\n * @method let\n * @owner Observable\n */\nfunction letProto(func) {\n    return func(this);\n}\nexports.letProto = letProto;\n//# sourceMappingURL=let.js.map","\"use strict\";\nvar first_1 = require('../operators/first');\n/**\n * Emits only the first value (or the first value that meets some condition)\n * emitted by the source Observable.\n *\n * <span class=\"informal\">Emits only the first value. Or emits only the first\n * value that passes some test.</span>\n *\n * <img src=\"./img/first.png\" width=\"100%\">\n *\n * If called with no arguments, `first` emits the first value of the source\n * Observable, then completes. If called with a `predicate` function, `first`\n * emits the first value of the source that matches the specified condition. It\n * may also take a `resultSelector` function to produce the output value from\n * the input value, and a `defaultValue` to emit in case the source completes\n * before it is able to emit a valid value. Throws an error if `defaultValue`\n * was not provided and a matching element is not found.\n *\n * @example <caption>Emit only the first click that happens on the DOM</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first();\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Emits the first click that happens on a DIV</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link take}\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} [predicate]\n * An optional function called with each item to test for condition matching.\n * @param {function(value: T, index: number): R} [resultSelector] A function to\n * produce the value on the output Observable based on the values\n * and the indices of the source Observable. The arguments passed to this\n * function are:\n * - `value`: the value that was emitted on the source.\n * - `index`: the \"index\" of the value from the source.\n * @param {R} [defaultValue] The default value emitted in case no valid value\n * was found on the source.\n * @return {Observable<T|R>} An Observable of the first item that matches the\n * condition.\n * @method first\n * @owner Observable\n */\nfunction first(predicate, resultSelector, defaultValue) {\n    return first_1.first(predicate, resultSelector, defaultValue)(this);\n}\nexports.first = first;\n//# sourceMappingURL=first.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar buffer_1 = require('../../operator/buffer');\nObservable_1.Observable.prototype.buffer = buffer_1.buffer;\n//# sourceMappingURL=buffer.js.map","var fails = require('../internals/fails');\n\nvar replacement = /#|\\.prototype\\./;\n\nvar isForced = function (feature, detection) {\n  var value = data[normalize(feature)];\n  return value == POLYFILL ? true\n    : value == NATIVE ? false\n    : typeof detection == 'function' ? fails(detection)\n    : !!detection;\n};\n\nvar normalize = isForced.normalize = function (string) {\n  return String(string).replace(replacement, '.').toLowerCase();\n};\n\nvar data = isForced.data = {};\nvar NATIVE = isForced.NATIVE = 'N';\nvar POLYFILL = isForced.POLYFILL = 'P';\n\nmodule.exports = isForced;\n","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar toArray_1 = require('../../operator/toArray');\nObservable_1.Observable.prototype.toArray = toArray_1.toArray;\n//# sourceMappingURL=toArray.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar repeat_1 = require('../../operator/repeat');\nObservable_1.Observable.prototype.repeat = repeat_1.repeat;\n//# sourceMappingURL=repeat.js.map","\"use strict\";\nexports.isArray = Array.isArray || (function (x) { return x && typeof x.length === 'number'; });\n//# sourceMappingURL=isArray.js.map","\"use strict\";\nvar SubscribeOnObservable_1 = require('../observable/SubscribeOnObservable');\n/**\n * Asynchronously subscribes Observers to this Observable on the specified IScheduler.\n *\n * <img src=\"./img/subscribeOn.png\" width=\"100%\">\n *\n * @param {Scheduler} scheduler - The IScheduler to perform subscription actions on.\n * @return {Observable<T>} The source Observable modified so that its subscriptions happen on the specified IScheduler.\n .\n * @method subscribeOn\n * @owner Observable\n */\nfunction subscribeOn(scheduler, delay) {\n    if (delay === void 0) { delay = 0; }\n    return function subscribeOnOperatorFunction(source) {\n        return source.lift(new SubscribeOnOperator(scheduler, delay));\n    };\n}\nexports.subscribeOn = subscribeOn;\nvar SubscribeOnOperator = (function () {\n    function SubscribeOnOperator(scheduler, delay) {\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    SubscribeOnOperator.prototype.call = function (subscriber, source) {\n        return new SubscribeOnObservable_1.SubscribeOnObservable(source, this.delay, this.scheduler).subscribe(subscriber);\n    };\n    return SubscribeOnOperator;\n}());\n//# sourceMappingURL=subscribeOn.js.map","\"use strict\";\nvar switchMap_1 = require('../operators/switchMap');\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link switch}.</span>\n *\n * <img src=\"./img/switchMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMap((ev) => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switch}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking only the values from the most recently\n * projected inner Observable.\n * @method switchMap\n * @owner Observable\n */\nfunction switchMap(project, resultSelector) {\n    return switchMap_1.switchMap(project, resultSelector)(this);\n}\nexports.switchMap = switchMap;\n//# sourceMappingURL=switchMap.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Buffers the source Observable values until `closingNotifier` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when another Observable emits.</span>\n *\n * <img src=\"./img/buffer.png\" width=\"100%\">\n *\n * Buffers the incoming Observable values until the given `closingNotifier`\n * Observable emits a value, at which point it emits the buffer on the output\n * Observable and starts a new buffer internally, awaiting the next time\n * `closingNotifier` emits.\n *\n * @example <caption>On every click, emit array of most recent interval events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var interval = Rx.Observable.interval(1000);\n * var buffered = interval.buffer(clicks);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link window}\n *\n * @param {Observable<any>} closingNotifier An Observable that signals the\n * buffer to be emitted on the output Observable.\n * @return {Observable<T[]>} An Observable of buffers, which are arrays of\n * values.\n * @method buffer\n * @owner Observable\n */\nfunction buffer(closingNotifier) {\n    return function bufferOperatorFunction(source) {\n        return source.lift(new BufferOperator(closingNotifier));\n    };\n}\nexports.buffer = buffer;\nvar BufferOperator = (function () {\n    function BufferOperator(closingNotifier) {\n        this.closingNotifier = closingNotifier;\n    }\n    BufferOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new BufferSubscriber(subscriber, this.closingNotifier));\n    };\n    return BufferOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar BufferSubscriber = (function (_super) {\n    __extends(BufferSubscriber, _super);\n    function BufferSubscriber(destination, closingNotifier) {\n        _super.call(this, destination);\n        this.buffer = [];\n        this.add(subscribeToResult_1.subscribeToResult(this, closingNotifier));\n    }\n    BufferSubscriber.prototype._next = function (value) {\n        this.buffer.push(value);\n    };\n    BufferSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var buffer = this.buffer;\n        this.buffer = [];\n        this.destination.next(buffer);\n    };\n    return BufferSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=buffer.js.map","\"use strict\";\nvar finalize_1 = require('../operators/finalize');\n/**\n * Returns an Observable that mirrors the source Observable, but will call a specified function when\n * the source terminates on complete or error.\n * @param {function} callback Function to be called when source terminates.\n * @return {Observable} An Observable that mirrors the source, but will call the specified function on termination.\n * @method finally\n * @owner Observable\n */\nfunction _finally(callback) {\n    return finalize_1.finalize(callback)(this);\n}\nexports._finally = _finally;\n//# sourceMappingURL=finally.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to the same Observable which is flattened multiple\n * times with {@link switch} in the output Observable.\n *\n * <span class=\"informal\">It's like {@link switchMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * <img src=\"./img/switchMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. The output Observables\n * emits values only from the most recently emitted instance of\n * `innerObservable`.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMapTo(Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMapTo}\n * @see {@link switch}\n * @see {@link switchMap}\n * @see {@link mergeMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable` (and optionally transformed through `resultSelector`) every\n * time a value is emitted on the source Observable, and taking only the values\n * from the most recently projected inner Observable.\n * @method switchMapTo\n * @owner Observable\n */\nfunction switchMapTo(innerObservable, resultSelector) {\n    return function (source) { return source.lift(new SwitchMapToOperator(innerObservable, resultSelector)); };\n}\nexports.switchMapTo = switchMapTo;\nvar SwitchMapToOperator = (function () {\n    function SwitchMapToOperator(observable, resultSelector) {\n        this.observable = observable;\n        this.resultSelector = resultSelector;\n    }\n    SwitchMapToOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SwitchMapToSubscriber(subscriber, this.observable, this.resultSelector));\n    };\n    return SwitchMapToOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SwitchMapToSubscriber = (function (_super) {\n    __extends(SwitchMapToSubscriber, _super);\n    function SwitchMapToSubscriber(destination, inner, resultSelector) {\n        _super.call(this, destination);\n        this.inner = inner;\n        this.resultSelector = resultSelector;\n        this.index = 0;\n    }\n    SwitchMapToSubscriber.prototype._next = function (value) {\n        var innerSubscription = this.innerSubscription;\n        if (innerSubscription) {\n            innerSubscription.unsubscribe();\n        }\n        this.add(this.innerSubscription = subscribeToResult_1.subscribeToResult(this, this.inner, value, this.index++));\n    };\n    SwitchMapToSubscriber.prototype._complete = function () {\n        var innerSubscription = this.innerSubscription;\n        if (!innerSubscription || innerSubscription.closed) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    /** @deprecated internal use only */ SwitchMapToSubscriber.prototype._unsubscribe = function () {\n        this.innerSubscription = null;\n    };\n    SwitchMapToSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.remove(innerSub);\n        this.innerSubscription = null;\n        if (this.isStopped) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    SwitchMapToSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;\n        if (resultSelector) {\n            this.tryResultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            destination.next(innerValue);\n        }\n    };\n    SwitchMapToSubscriber.prototype.tryResultSelector = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;\n        var result;\n        try {\n            result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        catch (err) {\n            destination.error(err);\n            return;\n        }\n        destination.next(result);\n    };\n    return SwitchMapToSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=switchMapTo.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar publishReplay_1 = require('../../operator/publishReplay');\nObservable_1.Observable.prototype.publishReplay = publishReplay_1.publishReplay;\n//# sourceMappingURL=publishReplay.js.map","\"use strict\";\nvar subscribeOn_1 = require('../operators/subscribeOn');\n/**\n * Asynchronously subscribes Observers to this Observable on the specified IScheduler.\n *\n * <img src=\"./img/subscribeOn.png\" width=\"100%\">\n *\n * @param {Scheduler} scheduler - The IScheduler to perform subscription actions on.\n * @return {Observable<T>} The source Observable modified so that its subscriptions happen on the specified IScheduler.\n .\n * @method subscribeOn\n * @owner Observable\n */\nfunction subscribeOn(scheduler, delay) {\n    if (delay === void 0) { delay = 0; }\n    return subscribeOn_1.subscribeOn(scheduler, delay)(this);\n}\nexports.subscribeOn = subscribeOn;\n//# sourceMappingURL=subscribeOn.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = require('../Subject');\nvar Subscription_1 = require('../Subscription');\nvar SubscriptionLoggable_1 = require('./SubscriptionLoggable');\nvar applyMixins_1 = require('../util/applyMixins');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar HotObservable = (function (_super) {\n    __extends(HotObservable, _super);\n    function HotObservable(messages, scheduler) {\n        _super.call(this);\n        this.messages = messages;\n        this.subscriptions = [];\n        this.scheduler = scheduler;\n    }\n    /** @deprecated internal use only */ HotObservable.prototype._subscribe = function (subscriber) {\n        var subject = this;\n        var index = subject.logSubscribedFrame();\n        subscriber.add(new Subscription_1.Subscription(function () {\n            subject.logUnsubscribedFrame(index);\n        }));\n        return _super.prototype._subscribe.call(this, subscriber);\n    };\n    HotObservable.prototype.setup = function () {\n        var subject = this;\n        var messagesLength = subject.messages.length;\n        /* tslint:disable:no-var-keyword */\n        for (var i = 0; i < messagesLength; i++) {\n            (function () {\n                var message = subject.messages[i];\n                /* tslint:enable */\n                subject.scheduler.schedule(function () { message.notification.observe(subject); }, message.frame);\n            })();\n        }\n    };\n    return HotObservable;\n}(Subject_1.Subject));\nexports.HotObservable = HotObservable;\napplyMixins_1.applyMixins(HotObservable, [SubscriptionLoggable_1.SubscriptionLoggable]);\n//# sourceMappingURL=HotObservable.js.map","\"use strict\";\nvar multicast_1 = require('../operators/multicast');\n/* tslint:enable:max-line-length */\n/**\n * Allows source Observable to be subscribed only once with a Subject of choice,\n * while still sharing its values between multiple subscribers.\n *\n * <span class=\"informal\">Subscribe to Observable once, but send its values to multiple subscribers.</span>\n *\n * <img src=\"./img/multicast.png\" width=\"100%\">\n *\n * `multicast` is an operator that works in two modes.\n *\n * In the first mode you provide a single argument to it, which can be either an initialized Subject or a Subject\n * factory. As a result you will get a special kind of an Observable - a {@link ConnectableObservable}. It can be\n * subscribed multiple times, just as regular Observable, but it won't subscribe to the source Observable at that\n * moment. It will do it only if you call its `connect` method. This means you can essentially control by hand, when\n * source Observable will be actually subscribed. What is more, ConnectableObservable will share this one subscription\n * between all of its subscribers. This means that, for example, `ajax` Observable will only send a request once,\n * even though usually it would send a request per every subscriber. Since it sends a request at the moment of\n * subscription, here request would be sent when the `connect` method of a ConnectableObservable is called.\n *\n * The most common pattern of using ConnectableObservable is calling `connect` when the first consumer subscribes,\n * keeping the subscription alive while several consumers come and go and finally unsubscribing from the source\n * Observable, when the last consumer unsubscribes. To not implement that logic over and over again,\n * ConnectableObservable has a special operator, `refCount`. When called, it returns an Observable, which will count\n * the number of consumers subscribed to it and keep ConnectableObservable connected as long as there is at least\n * one consumer. So if you don't actually need to decide yourself when to connect and disconnect a\n * ConnectableObservable, use `refCount`.\n *\n * The second mode is invoked by calling `multicast` with an additional, second argument - selector function.\n * This function accepts an Observable - which basically mirrors the source Observable - and returns Observable\n * as well, which should be the input stream modified by any operators you want. Note that in this\n * mode you cannot provide initialized Subject as a first argument - it has to be a Subject factory. If\n * you provide selector function, `multicast` returns just a regular Observable, instead of ConnectableObservable.\n * Thus, as usual, each subscription to this stream triggers subscription to the source Observable. However,\n * if inside the selector function you subscribe to the input Observable multiple times, actual source stream\n * will be subscribed only once. So if you have a chain of operators that use some Observable many times,\n * but you want to subscribe to that Observable only once, this is the mode you would use.\n *\n * Subject provided as a first parameter of `multicast` is used as a proxy for the single subscription to the\n * source Observable. It means that all values from the source stream go through that Subject. Thus, if a Subject\n * has some special properties, Observable returned by `multicast` will have them as well. If you want to use\n * `multicast` with a Subject that is one of the ones included in RxJS by default - {@link Subject},\n * {@link AsyncSubject}, {@link BehaviorSubject}, or {@link ReplaySubject} - simply use {@link publish},\n * {@link publishLast}, {@link publishBehavior} or {@link publishReplay} respectively. These are actually\n * just wrappers around `multicast`, with a specific Subject hardcoded inside.\n *\n * Also, if you use {@link publish} or {@link publishReplay} with a ConnectableObservables `refCount` operator,\n * you can simply use {@link share} and {@link shareReplay} respectively, which chain these two.\n *\n * @example <caption>Use ConnectableObservable</caption>\n * const seconds = Rx.Observable.interval(1000);\n * const connectableSeconds = seconds.multicast(new Subject());\n *\n * connectableSeconds.subscribe(value => console.log('first: ' + value));\n * connectableSeconds.subscribe(value => console.log('second: ' + value));\n *\n * // At this point still nothing happens, even though we subscribed twice.\n *\n * connectableSeconds.connect();\n *\n * // From now on `seconds` are being logged to the console,\n * // twice per every second. `seconds` Observable was however only subscribed once,\n * // so under the hood Observable.interval had only one clock started.\n *\n * @example <caption>Use selector</caption>\n * const seconds = Rx.Observable.interval(1000);\n *\n * seconds\n *     .multicast(\n *         () => new Subject(),\n *         seconds => seconds.zip(seconds) // Usually zip would subscribe to `seconds` twice.\n *                                         // Because we are inside selector, `seconds` is subscribed once,\n *     )                                   // thus starting only one clock used internally by Observable.interval.\n *     .subscribe();\n *\n * @see {@link publish}\n * @see {@link publishLast}\n * @see {@link publishBehavior}\n * @see {@link publishReplay}\n * @see {@link share}\n * @see {@link shareReplay}\n *\n * @param {Function|Subject} subjectOrSubjectFactory - Factory function to create an intermediate Subject through\n * which the source sequence's elements will be multicast to the selector function input Observable or\n * ConnectableObservable returned by the operator.\n * @param {Function} [selector] - Optional selector function that can use the input stream\n * as many times as needed, without causing multiple subscriptions to the source stream.\n * Subscribers to the input source will receive all notifications of the source from the\n * time of the subscription forward.\n * @return {Observable<T>|ConnectableObservable<T>} An Observable that emits the results of invoking the selector\n * on the source stream or a special {@link ConnectableObservable}, if selector was not provided.\n *\n * @method multicast\n * @owner Observable\n */\nfunction multicast(subjectOrSubjectFactory, selector) {\n    return multicast_1.multicast(subjectOrSubjectFactory, selector)(this);\n}\nexports.multicast = multicast;\n//# sourceMappingURL=multicast.js.map","\"use strict\";\nvar concatMapTo_1 = require('../operators/concatMapTo');\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in a serialized fashion on the output Observable.\n *\n * <span class=\"informal\">It's like {@link concatMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * <img src=\"./img/concatMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. Each new `innerObservable`\n * instance emitted on the output Observable is concatenated with the previous\n * `innerObservable` instance.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMapTo` is equivalent to `mergeMapTo` with concurrency parameter\n * set to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.concatMapTo(Rx.Observable.interval(1000).take(4));\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link mergeMapTo}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An observable of values merged together by joining the\n * passed observable with itself, one after the other, for each value emitted\n * from the source.\n * @method concatMapTo\n * @owner Observable\n */\nfunction concatMapTo(innerObservable, resultSelector) {\n    return concatMapTo_1.concatMapTo(innerObservable, resultSelector)(this);\n}\nexports.concatMapTo = concatMapTo;\n//# sourceMappingURL=concatMapTo.js.map","\"use strict\";\nvar materialize_1 = require('../operators/materialize');\n/**\n * Represents all of the notifications from the source Observable as `next`\n * emissions marked with their original types within {@link Notification}\n * objects.\n *\n * <span class=\"informal\">Wraps `next`, `error` and `complete` emissions in\n * {@link Notification} objects, emitted as `next` on the output Observable.\n * </span>\n *\n * <img src=\"./img/materialize.png\" width=\"100%\">\n *\n * `materialize` returns an Observable that emits a `next` notification for each\n * `next`, `error`, or `complete` emission of the source Observable. When the\n * source Observable emits `complete`, the output Observable will emit `next` as\n * a Notification of type \"complete\", and then it will emit `complete` as well.\n * When the source Observable emits `error`, the output will emit `next` as a\n * Notification of type \"error\", and then `complete`.\n *\n * This operator is useful for producing metadata of the source Observable, to\n * be consumed as `next` emissions. Use it in conjunction with\n * {@link dematerialize}.\n *\n * @example <caption>Convert a faulty Observable to an Observable of Notifications</caption>\n * var letters = Rx.Observable.of('a', 'b', 13, 'd');\n * var upperCase = letters.map(x => x.toUpperCase());\n * var materialized = upperCase.materialize();\n * materialized.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - Notification {kind: \"N\", value: \"A\", error: undefined, hasValue: true}\n * // - Notification {kind: \"N\", value: \"B\", error: undefined, hasValue: true}\n * // - Notification {kind: \"E\", value: undefined, error: TypeError:\n * //   x.toUpperCase is not a function at MapSubscriber.letters.map.x\n * //   [as project] (http://1…, hasValue: false}\n *\n * @see {@link Notification}\n * @see {@link dematerialize}\n *\n * @return {Observable<Notification<T>>} An Observable that emits\n * {@link Notification} objects that wrap the original emissions from the source\n * Observable with metadata.\n * @method materialize\n * @owner Observable\n */\nfunction materialize() {\n    return materialize_1.materialize()(this);\n}\nexports.materialize = materialize;\n//# sourceMappingURL=materialize.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar isEmpty_1 = require('../../operator/isEmpty');\nObservable_1.Observable.prototype.isEmpty = isEmpty_1.isEmpty;\n//# sourceMappingURL=isEmpty.js.map","\"use strict\";\nvar dematerialize_1 = require('../operators/dematerialize');\n/**\n * Converts an Observable of {@link Notification} objects into the emissions\n * that they represent.\n *\n * <span class=\"informal\">Unwraps {@link Notification} objects as actual `next`,\n * `error` and `complete` emissions. The opposite of {@link materialize}.</span>\n *\n * <img src=\"./img/dematerialize.png\" width=\"100%\">\n *\n * `dematerialize` is assumed to operate an Observable that only emits\n * {@link Notification} objects as `next` emissions, and does not emit any\n * `error`. Such Observable is the output of a `materialize` operation. Those\n * notifications are then unwrapped using the metadata they contain, and emitted\n * as `next`, `error`, and `complete` on the output Observable.\n *\n * Use this operator in conjunction with {@link materialize}.\n *\n * @example <caption>Convert an Observable of Notifications to an actual Observable</caption>\n * var notifA = new Rx.Notification('N', 'A');\n * var notifB = new Rx.Notification('N', 'B');\n * var notifE = new Rx.Notification('E', void 0,\n *   new TypeError('x.toUpperCase is not a function')\n * );\n * var materialized = Rx.Observable.of(notifA, notifB, notifE);\n * var upperCase = materialized.dematerialize();\n * upperCase.subscribe(x => console.log(x), e => console.error(e));\n *\n * // Results in:\n * // A\n * // B\n * // TypeError: x.toUpperCase is not a function\n *\n * @see {@link Notification}\n * @see {@link materialize}\n *\n * @return {Observable} An Observable that emits items and notifications\n * embedded in Notification objects emitted by the source Observable.\n * @method dematerialize\n * @owner Observable\n */\nfunction dematerialize() {\n    return dematerialize_1.dematerialize()(this);\n}\nexports.dematerialize = dematerialize;\n//# sourceMappingURL=dematerialize.js.map","\"use strict\";\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an {@link Action}.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n */\nvar Scheduler = (function () {\n    function Scheduler(SchedulerAction, now) {\n        if (now === void 0) { now = Scheduler.now; }\n        this.SchedulerAction = SchedulerAction;\n        this.now = now;\n    }\n    /**\n     * Schedules a function, `work`, for execution. May happen at some point in\n     * the future, according to the `delay` parameter, if specified. May be passed\n     * some context object, `state`, which will be passed to the `work` function.\n     *\n     * The given arguments will be processed an stored as an Action object in a\n     * queue of actions.\n     *\n     * @param {function(state: ?T): ?Subscription} work A function representing a\n     * task, or some unit of work to be executed by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler itself.\n     * @param {T} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @return {Subscription} A subscription in order to be able to unsubscribe\n     * the scheduled work.\n     */\n    Scheduler.prototype.schedule = function (work, delay, state) {\n        if (delay === void 0) { delay = 0; }\n        return new this.SchedulerAction(this, work).schedule(state, delay);\n    };\n    Scheduler.now = Date.now ? Date.now : function () { return +new Date(); };\n    return Scheduler;\n}());\nexports.Scheduler = Scheduler;\n//# sourceMappingURL=Scheduler.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar root_1 = require('../../util/root');\nvar tryCatch_1 = require('../../util/tryCatch');\nvar errorObject_1 = require('../../util/errorObject');\nvar Observable_1 = require('../../Observable');\nvar Subscriber_1 = require('../../Subscriber');\nvar map_1 = require('../../operators/map');\nfunction getCORSRequest() {\n    if (root_1.root.XMLHttpRequest) {\n        return new root_1.root.XMLHttpRequest();\n    }\n    else if (!!root_1.root.XDomainRequest) {\n        return new root_1.root.XDomainRequest();\n    }\n    else {\n        throw new Error('CORS is not supported by your browser');\n    }\n}\nfunction getXMLHttpRequest() {\n    if (root_1.root.XMLHttpRequest) {\n        return new root_1.root.XMLHttpRequest();\n    }\n    else {\n        var progId = void 0;\n        try {\n            var progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'];\n            for (var i = 0; i < 3; i++) {\n                try {\n                    progId = progIds[i];\n                    if (new root_1.root.ActiveXObject(progId)) {\n                        break;\n                    }\n                }\n                catch (e) {\n                }\n            }\n            return new root_1.root.ActiveXObject(progId);\n        }\n        catch (e) {\n            throw new Error('XMLHttpRequest is not supported by your browser');\n        }\n    }\n}\nfunction ajaxGet(url, headers) {\n    if (headers === void 0) { headers = null; }\n    return new AjaxObservable({ method: 'GET', url: url, headers: headers });\n}\nexports.ajaxGet = ajaxGet;\n;\nfunction ajaxPost(url, body, headers) {\n    return new AjaxObservable({ method: 'POST', url: url, body: body, headers: headers });\n}\nexports.ajaxPost = ajaxPost;\n;\nfunction ajaxDelete(url, headers) {\n    return new AjaxObservable({ method: 'DELETE', url: url, headers: headers });\n}\nexports.ajaxDelete = ajaxDelete;\n;\nfunction ajaxPut(url, body, headers) {\n    return new AjaxObservable({ method: 'PUT', url: url, body: body, headers: headers });\n}\nexports.ajaxPut = ajaxPut;\n;\nfunction ajaxPatch(url, body, headers) {\n    return new AjaxObservable({ method: 'PATCH', url: url, body: body, headers: headers });\n}\nexports.ajaxPatch = ajaxPatch;\n;\nvar mapResponse = map_1.map(function (x, index) { return x.response; });\nfunction ajaxGetJSON(url, headers) {\n    return mapResponse(new AjaxObservable({\n        method: 'GET',\n        url: url,\n        responseType: 'json',\n        headers: headers\n    }));\n}\nexports.ajaxGetJSON = ajaxGetJSON;\n;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar AjaxObservable = (function (_super) {\n    __extends(AjaxObservable, _super);\n    function AjaxObservable(urlOrRequest) {\n        _super.call(this);\n        var request = {\n            async: true,\n            createXHR: function () {\n                return this.crossDomain ? getCORSRequest.call(this) : getXMLHttpRequest();\n            },\n            crossDomain: false,\n            withCredentials: false,\n            headers: {},\n            method: 'GET',\n            responseType: 'json',\n            timeout: 0\n        };\n        if (typeof urlOrRequest === 'string') {\n            request.url = urlOrRequest;\n        }\n        else {\n            for (var prop in urlOrRequest) {\n                if (urlOrRequest.hasOwnProperty(prop)) {\n                    request[prop] = urlOrRequest[prop];\n                }\n            }\n        }\n        this.request = request;\n    }\n    /** @deprecated internal use only */ AjaxObservable.prototype._subscribe = function (subscriber) {\n        return new AjaxSubscriber(subscriber, this.request);\n    };\n    /**\n     * Creates an observable for an Ajax request with either a request object with\n     * url, headers, etc or a string for a URL.\n     *\n     * @example\n     * source = Rx.Observable.ajax('/products');\n     * source = Rx.Observable.ajax({ url: 'products', method: 'GET' });\n     *\n     * @param {string|Object} request Can be one of the following:\n     *   A string of the URL to make the Ajax call.\n     *   An object with the following properties\n     *   - url: URL of the request\n     *   - body: The body of the request\n     *   - method: Method of the request, such as GET, POST, PUT, PATCH, DELETE\n     *   - async: Whether the request is async\n     *   - headers: Optional headers\n     *   - crossDomain: true if a cross domain request, else false\n     *   - createXHR: a function to override if you need to use an alternate\n     *   XMLHttpRequest implementation.\n     *   - resultSelector: a function to use to alter the output value type of\n     *   the Observable. Gets {@link AjaxResponse} as an argument.\n     * @return {Observable} An observable sequence containing the XMLHttpRequest.\n     * @static true\n     * @name ajax\n     * @owner Observable\n    */\n    AjaxObservable.create = (function () {\n        var create = function (urlOrRequest) {\n            return new AjaxObservable(urlOrRequest);\n        };\n        create.get = ajaxGet;\n        create.post = ajaxPost;\n        create.delete = ajaxDelete;\n        create.put = ajaxPut;\n        create.patch = ajaxPatch;\n        create.getJSON = ajaxGetJSON;\n        return create;\n    })();\n    return AjaxObservable;\n}(Observable_1.Observable));\nexports.AjaxObservable = AjaxObservable;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AjaxSubscriber = (function (_super) {\n    __extends(AjaxSubscriber, _super);\n    function AjaxSubscriber(destination, request) {\n        _super.call(this, destination);\n        this.request = request;\n        this.done = false;\n        var headers = request.headers = request.headers || {};\n        // force CORS if requested\n        if (!request.crossDomain && !headers['X-Requested-With']) {\n            headers['X-Requested-With'] = 'XMLHttpRequest';\n        }\n        // ensure content type is set\n        if (!('Content-Type' in headers) && !(root_1.root.FormData && request.body instanceof root_1.root.FormData) && typeof request.body !== 'undefined') {\n            headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=UTF-8';\n        }\n        // properly serialize body\n        request.body = this.serializeBody(request.body, request.headers['Content-Type']);\n        this.send();\n    }\n    AjaxSubscriber.prototype.next = function (e) {\n        this.done = true;\n        var _a = this, xhr = _a.xhr, request = _a.request, destination = _a.destination;\n        var response = new AjaxResponse(e, xhr, request);\n        destination.next(response);\n    };\n    AjaxSubscriber.prototype.send = function () {\n        var _a = this, request = _a.request, _b = _a.request, user = _b.user, method = _b.method, url = _b.url, async = _b.async, password = _b.password, headers = _b.headers, body = _b.body;\n        var createXHR = request.createXHR;\n        var xhr = tryCatch_1.tryCatch(createXHR).call(request);\n        if (xhr === errorObject_1.errorObject) {\n            this.error(errorObject_1.errorObject.e);\n        }\n        else {\n            this.xhr = xhr;\n            // set up the events before open XHR\n            // https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest\n            // You need to add the event listeners before calling open() on the request.\n            // Otherwise the progress events will not fire.\n            this.setupEvents(xhr, request);\n            // open XHR\n            var result = void 0;\n            if (user) {\n                result = tryCatch_1.tryCatch(xhr.open).call(xhr, method, url, async, user, password);\n            }\n            else {\n                result = tryCatch_1.tryCatch(xhr.open).call(xhr, method, url, async);\n            }\n            if (result === errorObject_1.errorObject) {\n                this.error(errorObject_1.errorObject.e);\n                return null;\n            }\n            // timeout, responseType and withCredentials can be set once the XHR is open\n            if (async) {\n                xhr.timeout = request.timeout;\n                xhr.responseType = request.responseType;\n            }\n            if ('withCredentials' in xhr) {\n                xhr.withCredentials = !!request.withCredentials;\n            }\n            // set headers\n            this.setHeaders(xhr, headers);\n            // finally send the request\n            result = body ? tryCatch_1.tryCatch(xhr.send).call(xhr, body) : tryCatch_1.tryCatch(xhr.send).call(xhr);\n            if (result === errorObject_1.errorObject) {\n                this.error(errorObject_1.errorObject.e);\n                return null;\n            }\n        }\n        return xhr;\n    };\n    AjaxSubscriber.prototype.serializeBody = function (body, contentType) {\n        if (!body || typeof body === 'string') {\n            return body;\n        }\n        else if (root_1.root.FormData && body instanceof root_1.root.FormData) {\n            return body;\n        }\n        if (contentType) {\n            var splitIndex = contentType.indexOf(';');\n            if (splitIndex !== -1) {\n                contentType = contentType.substring(0, splitIndex);\n            }\n        }\n        switch (contentType) {\n            case 'application/x-www-form-urlencoded':\n                return Object.keys(body).map(function (key) { return (encodeURIComponent(key) + \"=\" + encodeURIComponent(body[key])); }).join('&');\n            case 'application/json':\n                return JSON.stringify(body);\n            default:\n                return body;\n        }\n    };\n    AjaxSubscriber.prototype.setHeaders = function (xhr, headers) {\n        for (var key in headers) {\n            if (headers.hasOwnProperty(key)) {\n                xhr.setRequestHeader(key, headers[key]);\n            }\n        }\n    };\n    AjaxSubscriber.prototype.setupEvents = function (xhr, request) {\n        var progressSubscriber = request.progressSubscriber;\n        function xhrTimeout(e) {\n            var _a = xhrTimeout, subscriber = _a.subscriber, progressSubscriber = _a.progressSubscriber, request = _a.request;\n            if (progressSubscriber) {\n                progressSubscriber.error(e);\n            }\n            subscriber.error(new AjaxTimeoutError(this, request)); //TODO: Make betterer.\n        }\n        ;\n        xhr.ontimeout = xhrTimeout;\n        xhrTimeout.request = request;\n        xhrTimeout.subscriber = this;\n        xhrTimeout.progressSubscriber = progressSubscriber;\n        if (xhr.upload && 'withCredentials' in xhr) {\n            if (progressSubscriber) {\n                var xhrProgress_1;\n                xhrProgress_1 = function (e) {\n                    var progressSubscriber = xhrProgress_1.progressSubscriber;\n                    progressSubscriber.next(e);\n                };\n                if (root_1.root.XDomainRequest) {\n                    xhr.onprogress = xhrProgress_1;\n                }\n                else {\n                    xhr.upload.onprogress = xhrProgress_1;\n                }\n                xhrProgress_1.progressSubscriber = progressSubscriber;\n            }\n            var xhrError_1;\n            xhrError_1 = function (e) {\n                var _a = xhrError_1, progressSubscriber = _a.progressSubscriber, subscriber = _a.subscriber, request = _a.request;\n                if (progressSubscriber) {\n                    progressSubscriber.error(e);\n                }\n                subscriber.error(new AjaxError('ajax error', this, request));\n            };\n            xhr.onerror = xhrError_1;\n            xhrError_1.request = request;\n            xhrError_1.subscriber = this;\n            xhrError_1.progressSubscriber = progressSubscriber;\n        }\n        function xhrReadyStateChange(e) {\n            var _a = xhrReadyStateChange, subscriber = _a.subscriber, progressSubscriber = _a.progressSubscriber, request = _a.request;\n            if (this.readyState === 4) {\n                // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\n                var status_1 = this.status === 1223 ? 204 : this.status;\n                var response = (this.responseType === 'text' ? (this.response || this.responseText) : this.response);\n                // fix status code when it is 0 (0 status is undocumented).\n                // Occurs when accessing file resources or on Android 4.1 stock browser\n                // while retrieving files from application cache.\n                if (status_1 === 0) {\n                    status_1 = response ? 200 : 0;\n                }\n                if (200 <= status_1 && status_1 < 300) {\n                    if (progressSubscriber) {\n                        progressSubscriber.complete();\n                    }\n                    subscriber.next(e);\n                    subscriber.complete();\n                }\n                else {\n                    if (progressSubscriber) {\n                        progressSubscriber.error(e);\n                    }\n                    subscriber.error(new AjaxError('ajax error ' + status_1, this, request));\n                }\n            }\n        }\n        ;\n        xhr.onreadystatechange = xhrReadyStateChange;\n        xhrReadyStateChange.subscriber = this;\n        xhrReadyStateChange.progressSubscriber = progressSubscriber;\n        xhrReadyStateChange.request = request;\n    };\n    AjaxSubscriber.prototype.unsubscribe = function () {\n        var _a = this, done = _a.done, xhr = _a.xhr;\n        if (!done && xhr && xhr.readyState !== 4 && typeof xhr.abort === 'function') {\n            xhr.abort();\n        }\n        _super.prototype.unsubscribe.call(this);\n    };\n    return AjaxSubscriber;\n}(Subscriber_1.Subscriber));\nexports.AjaxSubscriber = AjaxSubscriber;\n/**\n * A normalized AJAX response.\n *\n * @see {@link ajax}\n *\n * @class AjaxResponse\n */\nvar AjaxResponse = (function () {\n    function AjaxResponse(originalEvent, xhr, request) {\n        this.originalEvent = originalEvent;\n        this.xhr = xhr;\n        this.request = request;\n        this.status = xhr.status;\n        this.responseType = xhr.responseType || request.responseType;\n        this.response = parseXhrResponse(this.responseType, xhr);\n    }\n    return AjaxResponse;\n}());\nexports.AjaxResponse = AjaxResponse;\n/**\n * A normalized AJAX error.\n *\n * @see {@link ajax}\n *\n * @class AjaxError\n */\nvar AjaxError = (function (_super) {\n    __extends(AjaxError, _super);\n    function AjaxError(message, xhr, request) {\n        _super.call(this, message);\n        this.message = message;\n        this.xhr = xhr;\n        this.request = request;\n        this.status = xhr.status;\n        this.responseType = xhr.responseType || request.responseType;\n        this.response = parseXhrResponse(this.responseType, xhr);\n    }\n    return AjaxError;\n}(Error));\nexports.AjaxError = AjaxError;\nfunction parseXhrResponse(responseType, xhr) {\n    switch (responseType) {\n        case 'json':\n            if ('response' in xhr) {\n                //IE does not support json as responseType, parse it internally\n                return xhr.responseType ? xhr.response : JSON.parse(xhr.response || xhr.responseText || 'null');\n            }\n            else {\n                // HACK(benlesh): TypeScript shennanigans\n                // tslint:disable-next-line:no-any latest TS seems to think xhr is \"never\" here.\n                return JSON.parse(xhr.responseText || 'null');\n            }\n        case 'xml':\n            return xhr.responseXML;\n        case 'text':\n        default:\n            // HACK(benlesh): TypeScript shennanigans\n            // tslint:disable-next-line:no-any latest TS seems to think xhr is \"never\" here.\n            return ('response' in xhr) ? xhr.response : xhr.responseText;\n    }\n}\n/**\n * @see {@link ajax}\n *\n * @class AjaxTimeoutError\n */\nvar AjaxTimeoutError = (function (_super) {\n    __extends(AjaxTimeoutError, _super);\n    function AjaxTimeoutError(xhr, request) {\n        _super.call(this, 'ajax timeout', xhr, request);\n    }\n    return AjaxTimeoutError;\n}(AjaxError));\nexports.AjaxTimeoutError = AjaxTimeoutError;\n//# sourceMappingURL=AjaxObservable.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar combineLatest_1 = require('../../operator/combineLatest');\nObservable_1.Observable.prototype.combineLatest = combineLatest_1.combineLatest;\n//# sourceMappingURL=combineLatest.js.map","\"use strict\";\nvar Subscriber_1 = require('../Subscriber');\nvar rxSubscriber_1 = require('../symbol/rxSubscriber');\nvar Observer_1 = require('../Observer');\nfunction toSubscriber(nextOrObserver, error, complete) {\n    if (nextOrObserver) {\n        if (nextOrObserver instanceof Subscriber_1.Subscriber) {\n            return nextOrObserver;\n        }\n        if (nextOrObserver[rxSubscriber_1.rxSubscriber]) {\n            return nextOrObserver[rxSubscriber_1.rxSubscriber]();\n        }\n    }\n    if (!nextOrObserver && !error && !complete) {\n        return new Subscriber_1.Subscriber(Observer_1.empty);\n    }\n    return new Subscriber_1.Subscriber(nextOrObserver, error, complete);\n}\nexports.toSubscriber = toSubscriber;\n//# sourceMappingURL=toSubscriber.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = require('./Subject');\nvar ObjectUnsubscribedError_1 = require('./util/ObjectUnsubscribedError');\n/**\n * @class BehaviorSubject<T>\n */\nvar BehaviorSubject = (function (_super) {\n    __extends(BehaviorSubject, _super);\n    function BehaviorSubject(_value) {\n        _super.call(this);\n        this._value = _value;\n    }\n    Object.defineProperty(BehaviorSubject.prototype, \"value\", {\n        get: function () {\n            return this.getValue();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @deprecated internal use only */ BehaviorSubject.prototype._subscribe = function (subscriber) {\n        var subscription = _super.prototype._subscribe.call(this, subscriber);\n        if (subscription && !subscription.closed) {\n            subscriber.next(this._value);\n        }\n        return subscription;\n    };\n    BehaviorSubject.prototype.getValue = function () {\n        if (this.hasError) {\n            throw this.thrownError;\n        }\n        else if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else {\n            return this._value;\n        }\n    };\n    BehaviorSubject.prototype.next = function (value) {\n        _super.prototype.next.call(this, this._value = value);\n    };\n    return BehaviorSubject;\n}(Subject_1.Subject));\nexports.BehaviorSubject = BehaviorSubject;\n//# sourceMappingURL=BehaviorSubject.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('./Subscriber');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar InnerSubscriber = (function (_super) {\n    __extends(InnerSubscriber, _super);\n    function InnerSubscriber(parent, outerValue, outerIndex) {\n        _super.call(this);\n        this.parent = parent;\n        this.outerValue = outerValue;\n        this.outerIndex = outerIndex;\n        this.index = 0;\n    }\n    InnerSubscriber.prototype._next = function (value) {\n        this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n    };\n    InnerSubscriber.prototype._error = function (error) {\n        this.parent.notifyError(error, this);\n        this.unsubscribe();\n    };\n    InnerSubscriber.prototype._complete = function () {\n        this.parent.notifyComplete(this);\n        this.unsubscribe();\n    };\n    return InnerSubscriber;\n}(Subscriber_1.Subscriber));\nexports.InnerSubscriber = InnerSubscriber;\n//# sourceMappingURL=InnerSubscriber.js.map","\"use strict\";\nvar distinctUntilChanged_1 = require('../operators/distinctUntilChanged');\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * @example <caption>A simple example with numbers</caption>\n * Observable.of(1, 1, 2, 2, 2, 1, 1, 2, 3, 3, 4)\n *   .distinctUntilChanged()\n *   .subscribe(x => console.log(x)); // 1, 2, 1, 2, 3, 4\n *\n * @example <caption>An example using a compare function</caption>\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'})\n *     { age: 6, name: 'Foo'})\n *     .distinctUntilChanged((p: Person, q: Person) => p.name === q.name)\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n *\n * @see {@link distinct}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinctUntilChanged\n * @owner Observable\n */\nfunction distinctUntilChanged(compare, keySelector) {\n    return distinctUntilChanged_1.distinctUntilChanged(compare, keySelector)(this);\n}\nexports.distinctUntilChanged = distinctUntilChanged;\n//# sourceMappingURL=distinctUntilChanged.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar of_1 = require('../../observable/of');\nObservable_1.Observable.of = of_1.of;\n//# sourceMappingURL=of.js.map","\"use strict\";\nvar async_1 = require('../scheduler/async');\nvar auditTime_1 = require('../operators/auditTime');\n/**\n * Ignores source values for `duration` milliseconds, then emits the most recent\n * value from the source Observable, then repeats this process.\n *\n * <span class=\"informal\">When it sees a source values, it ignores that plus\n * the next ones for `duration` milliseconds, and then it emits the most recent\n * value from the source.</span>\n *\n * <img src=\"./img/auditTime.png\" width=\"100%\">\n *\n * `auditTime` is similar to `throttleTime`, but emits the last value from the\n * silenced time window, instead of the first value. `auditTime` emits the most\n * recent value from the source Observable on the output Observable as soon as\n * its internal timer becomes disabled, and ignores source values while the\n * timer is enabled. Initially, the timer is disabled. As soon as the first\n * source value arrives, the timer is enabled. After `duration` milliseconds (or\n * the time unit determined internally by the optional `scheduler`) has passed,\n * the timer is disabled, then the most recent source value is emitted on the\n * output Observable, and this process repeats for the next source value.\n * Optionally takes a {@link IScheduler} for managing timers.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.auditTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} duration Time to wait before emitting the most recent source\n * value, measured in milliseconds or the time unit determined internally\n * by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the rate-limiting behavior.\n * @return {Observable<T>} An Observable that performs rate-limiting of\n * emissions from the source Observable.\n * @method auditTime\n * @owner Observable\n */\nfunction auditTime(duration, scheduler) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    return auditTime_1.auditTime(duration, scheduler)(this);\n}\nexports.auditTime = auditTime;\n//# sourceMappingURL=auditTime.js.map","\"use strict\";\nvar bufferToggle_1 = require('../operators/bufferToggle');\n/**\n * Buffers the source Observable values starting from an emission from\n * `openings` and ending when the output of `closingSelector` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array. Starts\n * collecting only when `opening` emits, and calls the `closingSelector`\n * function to get an Observable that tells when to close the buffer.</span>\n *\n * <img src=\"./img/bufferToggle.png\" width=\"100%\">\n *\n * Buffers values from the source by opening the buffer via signals from an\n * Observable provided to `openings`, and closing and sending the buffers when\n * a Subscribable or Promise returned by the `closingSelector` function emits.\n *\n * @example <caption>Every other second, emit the click events from the next 500ms</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var openings = Rx.Observable.interval(1000);\n * var buffered = clicks.bufferToggle(openings, i =>\n *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()\n * );\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferWhen}\n * @see {@link windowToggle}\n *\n * @param {SubscribableOrPromise<O>} openings A Subscribable or Promise of notifications to start new\n * buffers.\n * @param {function(value: O): SubscribableOrPromise} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns a Subscribable or Promise,\n * which, when it emits, signals that the associated buffer should be emitted\n * and cleared.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferToggle\n * @owner Observable\n */\nfunction bufferToggle(openings, closingSelector) {\n    return bufferToggle_1.bufferToggle(openings, closingSelector)(this);\n}\nexports.bufferToggle = bufferToggle;\n//# sourceMappingURL=bufferToggle.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar zip_1 = require('../../operator/zip');\nObservable_1.Observable.prototype.zip = zip_1.zipProto;\n//# sourceMappingURL=zip.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\nvar tryCatch_1 = require('../util/tryCatch');\nvar errorObject_1 = require('../util/errorObject');\nvar AsyncSubject_1 = require('../AsyncSubject');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar BoundCallbackObservable = (function (_super) {\n    __extends(BoundCallbackObservable, _super);\n    function BoundCallbackObservable(callbackFunc, selector, args, context, scheduler) {\n        _super.call(this);\n        this.callbackFunc = callbackFunc;\n        this.selector = selector;\n        this.args = args;\n        this.context = context;\n        this.scheduler = scheduler;\n    }\n    /* tslint:enable:max-line-length */\n    /**\n     * Converts a callback API to a function that returns an Observable.\n     *\n     * <span class=\"informal\">Give it a function `f` of type `f(x, callback)` and\n     * it will return a function `g` that when called as `g(x)` will output an\n     * Observable.</span>\n     *\n     * `bindCallback` is not an operator because its input and output are not\n     * Observables. The input is a function `func` with some parameters, the\n     * last parameter must be a callback function that `func` calls when it is\n     * done.\n     *\n     * The output of `bindCallback` is a function that takes the same parameters\n     * as `func`, except the last one (the callback). When the output function\n     * is called with arguments it will return an Observable. If function `func`\n     * calls its callback with one argument the Observable will emit that value.\n     * If on the other hand the callback is called with multiple values the resulting\n     * Observable will emit an array with said values as arguments.\n     *\n     * It is very important to remember that input function `func` is not called\n     * when the output function is, but rather when the Observable returned by the output\n     * function is subscribed. This means if `func` makes an AJAX request, that request\n     * will be made every time someone subscribes to the resulting Observable, but not before.\n     *\n     * Optionally, a selector function can be passed to `bindObservable`. The selector function\n     * takes the same arguments as the callback and returns the value that will be emitted by the Observable.\n     * Even though by default multiple arguments passed to callback appear in the stream as an array\n     * the selector function will be called with arguments directly, just as the callback would.\n     * This means you can imagine the default selector (when one is not provided explicitly)\n     * as a function that aggregates all its arguments into an array, or simply returns first argument\n     * if there is only one.\n     *\n     * The last optional parameter - {@link Scheduler} - can be used to control when the call\n     * to `func` happens after someone subscribes to Observable, as well as when results\n     * passed to callback will be emitted. By default, the subscription to  an Observable calls `func`\n     * synchronously, but using `Scheduler.async` as the last parameter will defer the call to `func`,\n     * just like wrapping the call in `setTimeout` with a timeout of `0` would. If you use the async Scheduler\n     * and call `subscribe` on the output Observable all function calls that are currently executing\n     * will end before `func` is invoked.\n     *\n     * By default results passed to the callback are emitted immediately after `func` invokes the callback.\n     * In particular, if the callback is called synchronously the subscription of the resulting Observable\n     * will call the `next` function synchronously as well.  If you want to defer that call,\n     * you may use `Scheduler.async` just as before.  This means that by using `Scheduler.async` you can\n     * ensure that `func` always calls its callback asynchronously, thus avoiding terrifying Zalgo.\n     *\n     * Note that the Observable created by the output function will always emit a single value\n     * and then complete immediately. If `func` calls the callback multiple times, values from subsequent\n     * calls will not appear in the stream. If you need to listen for multiple calls,\n     *  you probably want to use {@link fromEvent} or {@link fromEventPattern} instead.\n     *\n     * If `func` depends on some context (`this` property) and is not already bound the context of `func`\n     * will be the context that the output function has at call time. In particular, if `func`\n     * is called as a method of some objec and if `func` is not already bound, in order to preserve the context\n     * it is recommended that the context of the output function is set to that object as well.\n     *\n     * If the input function calls its callback in the \"node style\" (i.e. first argument to callback is\n     * optional error parameter signaling whether the call failed or not), {@link bindNodeCallback}\n     * provides convenient error handling and probably is a better choice.\n     * `bindCallback` will treat such functions the same as any other and error parameters\n     * (whether passed or not) will always be interpreted as regular callback argument.\n     *\n     *\n     * @example <caption>Convert jQuery's getJSON to an Observable API</caption>\n     * // Suppose we have jQuery.getJSON('/my/url', callback)\n     * var getJSONAsObservable = Rx.Observable.bindCallback(jQuery.getJSON);\n     * var result = getJSONAsObservable('/my/url');\n     * result.subscribe(x => console.log(x), e => console.error(e));\n     *\n     *\n     * @example <caption>Receive an array of arguments passed to a callback</caption>\n     * someFunction((a, b, c) => {\n     *   console.log(a); // 5\n     *   console.log(b); // 'some string'\n     *   console.log(c); // {someProperty: 'someValue'}\n     * });\n     *\n     * const boundSomeFunction = Rx.Observable.bindCallback(someFunction);\n     * boundSomeFunction().subscribe(values => {\n     *   console.log(values) // [5, 'some string', {someProperty: 'someValue'}]\n     * });\n     *\n     *\n     * @example <caption>Use bindCallback with a selector function</caption>\n     * someFunction((a, b, c) => {\n     *   console.log(a); // 'a'\n     *   console.log(b); // 'b'\n     *   console.log(c); // 'c'\n     * });\n     *\n     * const boundSomeFunction = Rx.Observable.bindCallback(someFunction, (a, b, c) => a + b + c);\n     * boundSomeFunction().subscribe(value => {\n     *   console.log(value) // 'abc'\n     * });\n     *\n     *\n     * @example <caption>Compare behaviour with and without async Scheduler</caption>\n     * function iCallMyCallbackSynchronously(cb) {\n     *   cb();\n     * }\n     *\n     * const boundSyncFn = Rx.Observable.bindCallback(iCallMyCallbackSynchronously);\n     * const boundAsyncFn = Rx.Observable.bindCallback(iCallMyCallbackSynchronously, null, Rx.Scheduler.async);\n     *\n     * boundSyncFn().subscribe(() => console.log('I was sync!'));\n     * boundAsyncFn().subscribe(() => console.log('I was async!'));\n     * console.log('This happened...');\n     *\n     * // Logs:\n     * // I was sync!\n     * // This happened...\n     * // I was async!\n     *\n     *\n     * @example <caption>Use bindCallback on an object method</caption>\n     * const boundMethod = Rx.Observable.bindCallback(someObject.methodWithCallback);\n     * boundMethod.call(someObject) // make sure methodWithCallback has access to someObject\n     * .subscribe(subscriber);\n     *\n     *\n     * @see {@link bindNodeCallback}\n     * @see {@link from}\n     * @see {@link fromPromise}\n     *\n     * @param {function} func A function with a callback as the last parameter.\n     * @param {function} [selector] A function which takes the arguments from the\n     * callback and maps them to a value that is emitted on the output Observable.\n     * @param {Scheduler} [scheduler] The scheduler on which to schedule the\n     * callbacks.\n     * @return {function(...params: *): Observable} A function which returns the\n     * Observable that delivers the same values the callback would deliver.\n     * @static true\n     * @name bindCallback\n     * @owner Observable\n     */\n    BoundCallbackObservable.create = function (func, selector, scheduler) {\n        if (selector === void 0) { selector = undefined; }\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i - 0] = arguments[_i];\n            }\n            return new BoundCallbackObservable(func, selector, args, this, scheduler);\n        };\n    };\n    /** @deprecated internal use only */ BoundCallbackObservable.prototype._subscribe = function (subscriber) {\n        var callbackFunc = this.callbackFunc;\n        var args = this.args;\n        var scheduler = this.scheduler;\n        var subject = this.subject;\n        if (!scheduler) {\n            if (!subject) {\n                subject = this.subject = new AsyncSubject_1.AsyncSubject();\n                var handler = function handlerFn() {\n                    var innerArgs = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        innerArgs[_i - 0] = arguments[_i];\n                    }\n                    var source = handlerFn.source;\n                    var selector = source.selector, subject = source.subject;\n                    if (selector) {\n                        var result_1 = tryCatch_1.tryCatch(selector).apply(this, innerArgs);\n                        if (result_1 === errorObject_1.errorObject) {\n                            subject.error(errorObject_1.errorObject.e);\n                        }\n                        else {\n                            subject.next(result_1);\n                            subject.complete();\n                        }\n                    }\n                    else {\n                        subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n                        subject.complete();\n                    }\n                };\n                // use named function instance to avoid closure.\n                handler.source = this;\n                var result = tryCatch_1.tryCatch(callbackFunc).apply(this.context, args.concat(handler));\n                if (result === errorObject_1.errorObject) {\n                    subject.error(errorObject_1.errorObject.e);\n                }\n            }\n            return subject.subscribe(subscriber);\n        }\n        else {\n            return scheduler.schedule(BoundCallbackObservable.dispatch, 0, { source: this, subscriber: subscriber, context: this.context });\n        }\n    };\n    BoundCallbackObservable.dispatch = function (state) {\n        var self = this;\n        var source = state.source, subscriber = state.subscriber, context = state.context;\n        var callbackFunc = source.callbackFunc, args = source.args, scheduler = source.scheduler;\n        var subject = source.subject;\n        if (!subject) {\n            subject = source.subject = new AsyncSubject_1.AsyncSubject();\n            var handler = function handlerFn() {\n                var innerArgs = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    innerArgs[_i - 0] = arguments[_i];\n                }\n                var source = handlerFn.source;\n                var selector = source.selector, subject = source.subject;\n                if (selector) {\n                    var result_2 = tryCatch_1.tryCatch(selector).apply(this, innerArgs);\n                    if (result_2 === errorObject_1.errorObject) {\n                        self.add(scheduler.schedule(dispatchError, 0, { err: errorObject_1.errorObject.e, subject: subject }));\n                    }\n                    else {\n                        self.add(scheduler.schedule(dispatchNext, 0, { value: result_2, subject: subject }));\n                    }\n                }\n                else {\n                    var value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n                    self.add(scheduler.schedule(dispatchNext, 0, { value: value, subject: subject }));\n                }\n            };\n            // use named function to pass values in without closure\n            handler.source = source;\n            var result = tryCatch_1.tryCatch(callbackFunc).apply(context, args.concat(handler));\n            if (result === errorObject_1.errorObject) {\n                subject.error(errorObject_1.errorObject.e);\n            }\n        }\n        self.add(subject.subscribe(subscriber));\n    };\n    return BoundCallbackObservable;\n}(Observable_1.Observable));\nexports.BoundCallbackObservable = BoundCallbackObservable;\nfunction dispatchNext(arg) {\n    var value = arg.value, subject = arg.subject;\n    subject.next(value);\n    subject.complete();\n}\nfunction dispatchError(arg) {\n    var err = arg.err, subject = arg.subject;\n    subject.error(err);\n}\n//# sourceMappingURL=BoundCallbackObservable.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\nvar noop_1 = require('../util/noop');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar NeverObservable = (function (_super) {\n    __extends(NeverObservable, _super);\n    function NeverObservable() {\n        _super.call(this);\n    }\n    /**\n     * Creates an Observable that emits no items to the Observer.\n     *\n     * <span class=\"informal\">An Observable that never emits anything.</span>\n     *\n     * <img src=\"./img/never.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that emits\n     * neither values nor errors nor the completion notification. It can be used\n     * for testing purposes or for composing with other Observables. Please note\n     * that by never emitting a complete notification, this Observable keeps the\n     * subscription from being disposed automatically. Subscriptions need to be\n     * manually disposed.\n     *\n     * @example <caption>Emit the number 7, then never emit anything else (not even complete).</caption>\n     * function info() {\n     *   console.log('Will not be called');\n     * }\n     * var result = Rx.Observable.never().startWith(7);\n     * result.subscribe(x => console.log(x), info, info);\n     *\n     * @see {@link create}\n     * @see {@link empty}\n     * @see {@link of}\n     * @see {@link throw}\n     *\n     * @return {Observable} A \"never\" Observable: never emits anything.\n     * @static true\n     * @name never\n     * @owner Observable\n     */\n    NeverObservable.create = function () {\n        return new NeverObservable();\n    };\n    /** @deprecated internal use only */ NeverObservable.prototype._subscribe = function (subscriber) {\n        noop_1.noop();\n    };\n    return NeverObservable;\n}(Observable_1.Observable));\nexports.NeverObservable = NeverObservable;\n//# sourceMappingURL=NeverObservable.js.map","\"use strict\";\nvar isScheduler_1 = require('../util/isScheduler');\nvar isArray_1 = require('../util/isArray');\nvar ArrayObservable_1 = require('./ArrayObservable');\nvar combineLatest_1 = require('../operators/combineLatest');\n/* tslint:enable:max-line-length */\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * <img src=\"./img/combineLatest.png\" width=\"100%\">\n *\n * `combineLatest` combines the values from all the Observables passed as\n * arguments. This is done by subscribing to each Observable in order and,\n * whenever any Observable emits, collecting an array of the most recent\n * values from each Observable. So if you pass `n` Observables to operator,\n * returned Observable will always emit an array of `n` values, in order\n * corresponding to order of passed Observables (value from the first Observable\n * on the first place and so on).\n *\n * Static version of `combineLatest` accepts either an array of Observables\n * or each Observable can be put directly as an argument. Note that array of\n * Observables is good choice, if you don't know beforehand how many Observables\n * you will combine. Passing empty array will result in Observable that\n * completes immediately.\n *\n * To ensure output array has always the same length, `combineLatest` will\n * actually wait for all input Observables to emit at least once,\n * before it starts emitting results. This means if some Observable emits\n * values before other Observables started emitting, all that values but last\n * will be lost. On the other hand, is some Observable does not emit value but\n * completes, resulting Observable will complete at the same moment without\n * emitting anything, since it will be now impossible to include value from\n * completed Observable in resulting array. Also, if some input Observable does\n * not emit any value and never completes, `combineLatest` will also never emit\n * and never complete, since, again, it will wait for all streams to emit some\n * value.\n *\n * If at least one Observable was passed to `combineLatest` and all passed Observables\n * emitted something, resulting Observable will complete when all combined\n * streams complete. So even if some Observable completes, result of\n * `combineLatest` will still emit values when other Observables do. In case\n * of completed Observable, its value from now on will always be the last\n * emitted value. On the other hand, if any Observable errors, `combineLatest`\n * will error immediately as well, and all other Observables will be unsubscribed.\n *\n * `combineLatest` accepts as optional parameter `project` function, which takes\n * as arguments all values that would normally be emitted by resulting Observable.\n * `project` can return any kind of value, which will be then emitted by Observable\n * instead of default array. Note that `project` does not take as argument that array\n * of values, but values themselves. That means default `project` can be imagined\n * as function that takes all its arguments and puts them into an array.\n *\n *\n * @example <caption>Combine two timer Observables</caption>\n * const firstTimer = Rx.Observable.timer(0, 1000); // emit 0, 1, 2... after every second, starting from now\n * const secondTimer = Rx.Observable.timer(500, 1000); // emit 0, 1, 2... after every second, starting 0,5s from now\n * const combinedTimers = Rx.Observable.combineLatest(firstTimer, secondTimer);\n * combinedTimers.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0] after 0.5s\n * // [1, 0] after 1s\n * // [1, 1] after 1.5s\n * // [2, 1] after 2s\n *\n *\n * @example <caption>Combine an array of Observables</caption>\n * const observables = [1, 5, 10].map(\n *   n => Rx.Observable.of(n).delay(n * 1000).startWith(0) // emit 0 and then emit n after n seconds\n * );\n * const combined = Rx.Observable.combineLatest(observables);\n * combined.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0, 0] immediately\n * // [1, 0, 0] after 1s\n * // [1, 5, 0] after 5s\n * // [1, 5, 10] after 10s\n *\n *\n * @example <caption>Use project function to dynamically calculate the Body-Mass Index</caption>\n * var weight = Rx.Observable.of(70, 72, 76, 79, 75);\n * var height = Rx.Observable.of(1.76, 1.77, 1.78);\n * var bmi = Rx.Observable.combineLatest(weight, height, (w, h) => w / (h * h));\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n *\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} observable1 An input Observable to combine with other Observables.\n * @param {ObservableInput} observable2 An input Observable to combine with other Observables.\n * More than one input Observables may be given as arguments\n * or an array of Observables may be given as the first argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for subscribing to\n * each input Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @static true\n * @name combineLatest\n * @owner Observable\n */\nfunction combineLatest() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    var project = null;\n    var scheduler = null;\n    if (isScheduler_1.isScheduler(observables[observables.length - 1])) {\n        scheduler = observables.pop();\n    }\n    if (typeof observables[observables.length - 1] === 'function') {\n        project = observables.pop();\n    }\n    // if the first and only other argument besides the resultSelector is an array\n    // assume it's been called with `combineLatest([obs1, obs2, obs3], project)`\n    if (observables.length === 1 && isArray_1.isArray(observables[0])) {\n        observables = observables[0];\n    }\n    return new ArrayObservable_1.ArrayObservable(observables, scheduler).lift(new combineLatest_1.CombineLatestOperator(project));\n}\nexports.combineLatest = combineLatest;\n//# sourceMappingURL=combineLatest.js.map","\"use strict\";\nvar take_1 = require('../operators/take');\n/**\n * Emits only the first `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Takes the first `count` values from the source, then\n * completes.</span>\n *\n * <img src=\"./img/take.png\" width=\"100%\">\n *\n * `take` returns an Observable that emits only the first `count` values emitted\n * by the source Observable. If the source emits fewer than `count` values then\n * all of its values are emitted. After that, it completes, regardless if the\n * source completes.\n *\n * @example <caption>Take the first 5 seconds of an infinite 1-second interval Observable</caption>\n * var interval = Rx.Observable.interval(1000);\n * var five = interval.take(5);\n * five.subscribe(x => console.log(x));\n *\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `take(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of `next` values to emit.\n * @return {Observable<T>} An Observable that emits only the first `count`\n * values emitted by the source Observable, or all of the values from the source\n * if the source emits fewer than `count` values.\n * @method take\n * @owner Observable\n */\nfunction take(count) {\n    return take_1.take(count)(this);\n}\nexports.take = take;\n//# sourceMappingURL=take.js.map","\"use strict\";\nvar retryWhen_1 = require('../operators/retryWhen');\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will emit the Throwable that caused the error to the Observable returned from `notifier`.\n * If that Observable calls `complete` or `error` then this method will call `complete` or `error` on the child\n * subscription. Otherwise this method will resubscribe to the source Observable.\n *\n * <img src=\"./img/retryWhen.png\" width=\"100%\">\n *\n * @param {function(errors: Observable): Observable} notifier - Receives an Observable of notifications with which a\n * user can `complete` or `error`, aborting the retry.\n * @return {Observable} The source Observable modified with retry logic.\n * @method retryWhen\n * @owner Observable\n */\nfunction retryWhen(notifier) {\n    return retryWhen_1.retryWhen(notifier)(this);\n}\nexports.retryWhen = retryWhen;\n//# sourceMappingURL=retryWhen.js.map","\"use strict\";\nvar reduce_1 = require('./reduce');\nfunction toArrayReducer(arr, item, index) {\n    if (index === 0) {\n        return [item];\n    }\n    arr.push(item);\n    return arr;\n}\nfunction toArray() {\n    return reduce_1.reduce(toArrayReducer, []);\n}\nexports.toArray = toArray;\n//# sourceMappingURL=toArray.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar isArray_1 = require('../util/isArray');\nvar isArrayLike_1 = require('../util/isArrayLike');\nvar isPromise_1 = require('../util/isPromise');\nvar PromiseObservable_1 = require('./PromiseObservable');\nvar IteratorObservable_1 = require('./IteratorObservable');\nvar ArrayObservable_1 = require('./ArrayObservable');\nvar ArrayLikeObservable_1 = require('./ArrayLikeObservable');\nvar iterator_1 = require('../symbol/iterator');\nvar Observable_1 = require('../Observable');\nvar observeOn_1 = require('../operators/observeOn');\nvar observable_1 = require('../symbol/observable');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar FromObservable = (function (_super) {\n    __extends(FromObservable, _super);\n    function FromObservable(ish, scheduler) {\n        _super.call(this, null);\n        this.ish = ish;\n        this.scheduler = scheduler;\n    }\n    /**\n     * Creates an Observable from an Array, an array-like object, a Promise, an\n     * iterable object, or an Observable-like object.\n     *\n     * <span class=\"informal\">Converts almost anything to an Observable.</span>\n     *\n     * <img src=\"./img/from.png\" width=\"100%\">\n     *\n     * Convert various other objects and data types into Observables. `from`\n     * converts a Promise or an array-like or an\n     * [iterable](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable)\n     * object into an Observable that emits the items in that promise or array or\n     * iterable. A String, in this context, is treated as an array of characters.\n     * Observable-like objects (contains a function named with the ES2015 Symbol\n     * for Observable) can also be converted through this operator.\n     *\n     * @example <caption>Converts an array to an Observable</caption>\n     * var array = [10, 20, 30];\n     * var result = Rx.Observable.from(array);\n     * result.subscribe(x => console.log(x));\n     *\n     * // Results in the following:\n     * // 10 20 30\n     *\n     * @example <caption>Convert an infinite iterable (from a generator) to an Observable</caption>\n     * function* generateDoubles(seed) {\n     *   var i = seed;\n     *   while (true) {\n     *     yield i;\n     *     i = 2 * i; // double it\n     *   }\n     * }\n     *\n     * var iterator = generateDoubles(3);\n     * var result = Rx.Observable.from(iterator).take(10);\n     * result.subscribe(x => console.log(x));\n     *\n     * // Results in the following:\n     * // 3 6 12 24 48 96 192 384 768 1536\n     *\n     * @see {@link create}\n     * @see {@link fromEvent}\n     * @see {@link fromEventPattern}\n     * @see {@link fromPromise}\n     *\n     * @param {ObservableInput<T>} ish A subscribable object, a Promise, an\n     * Observable-like, an Array, an iterable or an array-like object to be\n     * converted.\n     * @param {Scheduler} [scheduler] The scheduler on which to schedule the\n     * emissions of values.\n     * @return {Observable<T>} The Observable whose values are originally from the\n     * input object that was converted.\n     * @static true\n     * @name from\n     * @owner Observable\n     */\n    FromObservable.create = function (ish, scheduler) {\n        if (ish != null) {\n            if (typeof ish[observable_1.observable] === 'function') {\n                if (ish instanceof Observable_1.Observable && !scheduler) {\n                    return ish;\n                }\n                return new FromObservable(ish, scheduler);\n            }\n            else if (isArray_1.isArray(ish)) {\n                return new ArrayObservable_1.ArrayObservable(ish, scheduler);\n            }\n            else if (isPromise_1.isPromise(ish)) {\n                return new PromiseObservable_1.PromiseObservable(ish, scheduler);\n            }\n            else if (typeof ish[iterator_1.iterator] === 'function' || typeof ish === 'string') {\n                return new IteratorObservable_1.IteratorObservable(ish, scheduler);\n            }\n            else if (isArrayLike_1.isArrayLike(ish)) {\n                return new ArrayLikeObservable_1.ArrayLikeObservable(ish, scheduler);\n            }\n        }\n        throw new TypeError((ish !== null && typeof ish || ish) + ' is not observable');\n    };\n    /** @deprecated internal use only */ FromObservable.prototype._subscribe = function (subscriber) {\n        var ish = this.ish;\n        var scheduler = this.scheduler;\n        if (scheduler == null) {\n            return ish[observable_1.observable]().subscribe(subscriber);\n        }\n        else {\n            return ish[observable_1.observable]().subscribe(new observeOn_1.ObserveOnSubscriber(subscriber, scheduler, 0));\n        }\n    };\n    return FromObservable;\n}(Observable_1.Observable));\nexports.FromObservable = FromObservable;\n//# sourceMappingURL=FromObservable.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = require('../Subject');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Branch out the source Observable values as a nested Observable whenever\n * `windowBoundaries` emits.\n *\n * <span class=\"informal\">It's like {@link buffer}, but emits a nested Observable\n * instead of an array.</span>\n *\n * <img src=\"./img/window.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping\n * windows. It emits the current window and opens a new one whenever the\n * Observable `windowBoundaries` emits an item. Because each window is an\n * Observable, the output is a higher-order Observable.\n *\n * @example <caption>In every window of 1 second each, emit at most 2 click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var interval = Rx.Observable.interval(1000);\n * var result = clicks.window(interval)\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link buffer}\n *\n * @param {Observable<any>} windowBoundaries An Observable that completes the\n * previous window and starts a new window.\n * @return {Observable<Observable<T>>} An Observable of windows, which are\n * Observables emitting values of the source Observable.\n * @method window\n * @owner Observable\n */\nfunction window(windowBoundaries) {\n    return function windowOperatorFunction(source) {\n        return source.lift(new WindowOperator(windowBoundaries));\n    };\n}\nexports.window = window;\nvar WindowOperator = (function () {\n    function WindowOperator(windowBoundaries) {\n        this.windowBoundaries = windowBoundaries;\n    }\n    WindowOperator.prototype.call = function (subscriber, source) {\n        var windowSubscriber = new WindowSubscriber(subscriber);\n        var sourceSubscription = source.subscribe(windowSubscriber);\n        if (!sourceSubscription.closed) {\n            windowSubscriber.add(subscribeToResult_1.subscribeToResult(windowSubscriber, this.windowBoundaries));\n        }\n        return sourceSubscription;\n    };\n    return WindowOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WindowSubscriber = (function (_super) {\n    __extends(WindowSubscriber, _super);\n    function WindowSubscriber(destination) {\n        _super.call(this, destination);\n        this.window = new Subject_1.Subject();\n        destination.next(this.window);\n    }\n    WindowSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.openWindow();\n    };\n    WindowSubscriber.prototype.notifyError = function (error, innerSub) {\n        this._error(error);\n    };\n    WindowSubscriber.prototype.notifyComplete = function (innerSub) {\n        this._complete();\n    };\n    WindowSubscriber.prototype._next = function (value) {\n        this.window.next(value);\n    };\n    WindowSubscriber.prototype._error = function (err) {\n        this.window.error(err);\n        this.destination.error(err);\n    };\n    WindowSubscriber.prototype._complete = function () {\n        this.window.complete();\n        this.destination.complete();\n    };\n    /** @deprecated internal use only */ WindowSubscriber.prototype._unsubscribe = function () {\n        this.window = null;\n    };\n    WindowSubscriber.prototype.openWindow = function () {\n        var prevWindow = this.window;\n        if (prevWindow) {\n            prevWindow.complete();\n        }\n        var destination = this.destination;\n        var newWindow = this.window = new Subject_1.Subject();\n        destination.next(newWindow);\n    };\n    return WindowSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=window.js.map","\"use strict\";\nvar toArray_1 = require('../operators/toArray');\n/**\n * Collects all source emissions and emits them as an array when the source completes.\n *\n * <span class=\"informal\">Get all values inside an array when the source completes</span>\n *\n * <img src=\"./img/toArray.png\" width=\"100%\">\n *\n * `toArray` will wait until the source Observable completes\n * before emitting the array containing all emissions.\n * When the source Observable errors no array will be emitted.\n *\n * @example <caption>Create array from input</caption>\n * const input = Rx.Observable.interval(100).take(4);\n *\n * input.toArray()\n *   .subscribe(arr => console.log(arr)); // [0,1,2,3]\n *\n * @see {@link buffer}\n *\n * @return {Observable<any[]>|WebSocketSubject<T>|Observable<T>}\n * @method toArray\n * @owner Observable\n */\nfunction toArray() {\n    return toArray_1.toArray()(this);\n}\nexports.toArray = toArray;\n//# sourceMappingURL=toArray.js.map","\"use strict\";\nvar sample_1 = require('../operators/sample');\n/**\n * Emits the most recently emitted value from the source Observable whenever\n * another Observable, the `notifier`, emits.\n *\n * <span class=\"informal\">It's like {@link sampleTime}, but samples whenever\n * the `notifier` Observable emits something.</span>\n *\n * <img src=\"./img/sample.png\" width=\"100%\">\n *\n * Whenever the `notifier` Observable emits a value or completes, `sample`\n * looks at the source Observable and emits whichever value it has most recently\n * emitted since the previous sampling, unless the source has not emitted\n * anything since the previous sampling. The `notifier` is subscribed to as soon\n * as the output Observable is subscribed.\n *\n * @example <caption>On every click, sample the most recent \"seconds\" timer</caption>\n * var seconds = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = seconds.sample(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {Observable<any>} notifier The Observable to use for sampling the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable whenever the notifier Observable\n * emits value or completes.\n * @method sample\n * @owner Observable\n */\nfunction sample(notifier) {\n    return sample_1.sample(notifier)(this);\n}\nexports.sample = sample;\n//# sourceMappingURL=sample.js.map","\"use strict\";\nvar async_1 = require('../scheduler/async');\nvar timestamp_1 = require('../operators/timestamp');\n/**\n * @param scheduler\n * @return {Observable<Timestamp<any>>|WebSocketSubject<T>|Observable<T>}\n * @method timestamp\n * @owner Observable\n */\nfunction timestamp(scheduler) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    return timestamp_1.timestamp(scheduler)(this);\n}\nexports.timestamp = timestamp;\n//# sourceMappingURL=timestamp.js.map","\"use strict\";\nvar GenerateObservable_1 = require('./GenerateObservable');\nexports.generate = GenerateObservable_1.GenerateObservable.create;\n//# sourceMappingURL=generate.js.map","var ceil = Math.ceil;\nvar floor = Math.floor;\n\n// `ToInteger` abstract operation\n// https://tc39.github.io/ecma262/#sec-tointeger\nmodule.exports = function (argument) {\n  return isNaN(argument = +argument) ? 0 : (argument > 0 ? floor : ceil)(argument);\n};\n","\"use strict\";\nvar publishBehavior_1 = require('../operators/publishBehavior');\n/**\n * @param value\n * @return {ConnectableObservable<T>}\n * @method publishBehavior\n * @owner Observable\n */\nfunction publishBehavior(value) {\n    return publishBehavior_1.publishBehavior(value)(this);\n}\nexports.publishBehavior = publishBehavior;\n//# sourceMappingURL=publishBehavior.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar skipLast_1 = require('../../operator/skipLast');\nObservable_1.Observable.prototype.skipLast = skipLast_1.skipLast;\n//# sourceMappingURL=skipLast.js.map","import { checkAvailability, getPlugin } from './common';\nexport function cordovaPropertyGet(pluginObj, key) {\n    if (checkAvailability(pluginObj, key) === true) {\n        return getPlugin(pluginObj.constructor.getPluginRef())[key];\n    }\n    return null;\n}\nexport function cordovaPropertySet(pluginObj, key, value) {\n    if (checkAvailability(pluginObj, key) === true) {\n        getPlugin(pluginObj.constructor.getPluginRef())[key] = value;\n    }\n}\n//# sourceMappingURL=cordova-property.js.map","\"use strict\";\nvar root_1 = require('../util/root');\nfunction symbolIteratorPonyfill(root) {\n    var Symbol = root.Symbol;\n    if (typeof Symbol === 'function') {\n        if (!Symbol.iterator) {\n            Symbol.iterator = Symbol('iterator polyfill');\n        }\n        return Symbol.iterator;\n    }\n    else {\n        // [for Mozilla Gecko 27-35:](https://mzl.la/2ewE1zC)\n        var Set_1 = root.Set;\n        if (Set_1 && typeof new Set_1()['@@iterator'] === 'function') {\n            return '@@iterator';\n        }\n        var Map_1 = root.Map;\n        // required for compatability with es6-shim\n        if (Map_1) {\n            var keys = Object.getOwnPropertyNames(Map_1.prototype);\n            for (var i = 0; i < keys.length; ++i) {\n                var key = keys[i];\n                // according to spec, Map.prototype[@@iterator] and Map.orototype.entries must be equal.\n                if (key !== 'entries' && key !== 'size' && Map_1.prototype[key] === Map_1.prototype['entries']) {\n                    return key;\n                }\n            }\n        }\n        return '@@iterator';\n    }\n}\nexports.symbolIteratorPonyfill = symbolIteratorPonyfill;\nexports.iterator = symbolIteratorPonyfill(root_1.root);\n/**\n * @deprecated use iterator instead\n */\nexports.$$iterator = exports.iterator;\n//# sourceMappingURL=iterator.js.map","\"use strict\";\nvar distinctUntilKeyChanged_1 = require('../operators/distinctUntilKeyChanged');\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item,\n * using a property accessed by using the key provided to check if the two items are distinct.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * @example <caption>An example comparing the name of persons</caption>\n *\n *  interface Person {\n *     age: number,\n *     name: string\n *  }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'},\n *     { age: 6, name: 'Foo'})\n *     .distinctUntilKeyChanged('name')\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n *\n * @example <caption>An example comparing the first letters of the name</caption>\n *\n * interface Person {\n *     age: number,\n *     name: string\n *  }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo1'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo2'},\n *     { age: 6, name: 'Foo3'})\n *     .distinctUntilKeyChanged('name', (x: string, y: string) => x.substring(0, 3) === y.substring(0, 3))\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo1' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo2' }\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n *\n * @param {string} key String key for object property lookup on each item.\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values based on the key specified.\n * @method distinctUntilKeyChanged\n * @owner Observable\n */\nfunction distinctUntilKeyChanged(key, compare) {\n    return distinctUntilKeyChanged_1.distinctUntilKeyChanged(key, compare)(this);\n}\nexports.distinctUntilKeyChanged = distinctUntilKeyChanged;\n//# sourceMappingURL=distinctUntilKeyChanged.js.map","\"use strict\";\nvar root_1 = require('../util/root');\nvar Symbol = root_1.root.Symbol;\nexports.rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?\n    Symbol.for('rxSubscriber') : '@@rxSubscriber';\n/**\n * @deprecated use rxSubscriber instead\n */\nexports.$$rxSubscriber = exports.rxSubscriber;\n//# sourceMappingURL=rxSubscriber.js.map","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar global = require('../internals/global');\nvar isForced = require('../internals/is-forced');\nvar redefine = require('../internals/redefine');\nvar has = require('../internals/has');\nvar classof = require('../internals/classof-raw');\nvar inheritIfRequired = require('../internals/inherit-if-required');\nvar toPrimitive = require('../internals/to-primitive');\nvar fails = require('../internals/fails');\nvar create = require('../internals/object-create');\nvar getOwnPropertyNames = require('../internals/object-get-own-property-names').f;\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar defineProperty = require('../internals/object-define-property').f;\nvar trim = require('../internals/string-trim').trim;\n\nvar NUMBER = 'Number';\nvar NativeNumber = global[NUMBER];\nvar NumberPrototype = NativeNumber.prototype;\n\n// Opera ~12 has broken Object#toString\nvar BROKEN_CLASSOF = classof(create(NumberPrototype)) == NUMBER;\n\n// `ToNumber` abstract operation\n// https://tc39.github.io/ecma262/#sec-tonumber\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, false);\n  var first, third, radix, maxCode, digits, length, index, code;\n  if (typeof it == 'string' && it.length > 2) {\n    it = trim(it);\n    first = it.charCodeAt(0);\n    if (first === 43 || first === 45) {\n      third = it.charCodeAt(2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (it.charCodeAt(1)) {\n        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal of /^0b[01]+$/i\n        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal of /^0o[0-7]+$/i\n        default: return +it;\n      }\n      digits = it.slice(2);\n      length = digits.length;\n      for (index = 0; index < length; index++) {\n        code = digits.charCodeAt(index);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\n// `Number` constructor\n// https://tc39.github.io/ecma262/#sec-number-constructor\nif (isForced(NUMBER, !NativeNumber(' 0o1') || !NativeNumber('0b1') || NativeNumber('+0x1'))) {\n  var NumberWrapper = function Number(value) {\n    var it = arguments.length < 1 ? 0 : value;\n    var dummy = this;\n    return dummy instanceof NumberWrapper\n      // check on 1..constructor(foo) case\n      && (BROKEN_CLASSOF ? fails(function () { NumberPrototype.valueOf.call(dummy); }) : classof(dummy) != NUMBER)\n        ? inheritIfRequired(new NativeNumber(toNumber(it)), dummy, NumberWrapper) : toNumber(it);\n  };\n  for (var keys = DESCRIPTORS ? getOwnPropertyNames(NativeNumber) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES2015 (in case, if modules with ES2015 Number statics required before):\n    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +\n    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'\n  ).split(','), j = 0, key; keys.length > j; j++) {\n    if (has(NativeNumber, key = keys[j]) && !has(NumberWrapper, key)) {\n      defineProperty(NumberWrapper, key, getOwnPropertyDescriptor(NativeNumber, key));\n    }\n  }\n  NumberWrapper.prototype = NumberPrototype;\n  NumberPrototype.constructor = NumberWrapper;\n  redefine(global, NUMBER, NumberWrapper);\n}\n","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\n\nmodule.exports = function (METHOD_NAME) {\n  var regexp = /./;\n  try {\n    '/./'[METHOD_NAME](regexp);\n  } catch (e) {\n    try {\n      regexp[MATCH] = false;\n      return '/./'[METHOD_NAME](regexp);\n    } catch (f) { /* empty */ }\n  } return false;\n};\n","\"use strict\";\nvar reduce_1 = require('./reduce');\n/**\n * The Max operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\n * and when source Observable completes it emits a single item: the item with the largest value.\n *\n * <img src=\"./img/max.png\" width=\"100%\">\n *\n * @example <caption>Get the maximal value of a series of numbers</caption>\n * Rx.Observable.of(5, 4, 7, 2, 8)\n *   .max()\n *   .subscribe(x => console.log(x)); // -> 8\n *\n * @example <caption>Use a comparer function to get the maximal item</caption>\n * interface Person {\n *   age: number,\n *   name: string\n * }\n * Observable.of<Person>({age: 7, name: 'Foo'},\n *                       {age: 5, name: 'Bar'},\n *                       {age: 9, name: 'Beer'})\n *           .max<Person>((a: Person, b: Person) => a.age < b.age ? -1 : 1)\n *           .subscribe((x: Person) => console.log(x.name)); // -> 'Beer'\n * }\n *\n * @see {@link min}\n *\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\n * value of two items.\n * @return {Observable} An Observable that emits item with the largest value.\n * @method max\n * @owner Observable\n */\nfunction max(comparer) {\n    var max = (typeof comparer === 'function')\n        ? function (x, y) { return comparer(x, y) > 0 ? x : y; }\n        : function (x, y) { return x > y ? x : y; };\n    return reduce_1.reduce(max);\n}\nexports.max = max;\n//# sourceMappingURL=max.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar sequenceEqual_1 = require('../../operator/sequenceEqual');\nObservable_1.Observable.prototype.sequenceEqual = sequenceEqual_1.sequenceEqual;\n//# sourceMappingURL=sequenceEqual.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\nvar ScalarObservable_1 = require('./ScalarObservable');\nvar EmptyObservable_1 = require('./EmptyObservable');\nvar isScheduler_1 = require('../util/isScheduler');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ArrayObservable = (function (_super) {\n    __extends(ArrayObservable, _super);\n    function ArrayObservable(array, scheduler) {\n        _super.call(this);\n        this.array = array;\n        this.scheduler = scheduler;\n        if (!scheduler && array.length === 1) {\n            this._isScalar = true;\n            this.value = array[0];\n        }\n    }\n    ArrayObservable.create = function (array, scheduler) {\n        return new ArrayObservable(array, scheduler);\n    };\n    /**\n     * Creates an Observable that emits some values you specify as arguments,\n     * immediately one after the other, and then emits a complete notification.\n     *\n     * <span class=\"informal\">Emits the arguments you provide, then completes.\n     * </span>\n     *\n     * <img src=\"./img/of.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that only\n     * emits the arguments given, and the complete notification thereafter. It can\n     * be used for composing with other Observables, such as with {@link concat}.\n     * By default, it uses a `null` IScheduler, which means the `next`\n     * notifications are sent synchronously, although with a different IScheduler\n     * it is possible to determine when those notifications will be delivered.\n     *\n     * @example <caption>Emit 10, 20, 30, then 'a', 'b', 'c', then start ticking every second.</caption>\n     * var numbers = Rx.Observable.of(10, 20, 30);\n     * var letters = Rx.Observable.of('a', 'b', 'c');\n     * var interval = Rx.Observable.interval(1000);\n     * var result = numbers.concat(letters).concat(interval);\n     * result.subscribe(x => console.log(x));\n     *\n     * @see {@link create}\n     * @see {@link empty}\n     * @see {@link never}\n     * @see {@link throw}\n     *\n     * @param {...T} values Arguments that represent `next` values to be emitted.\n     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n     * the emissions of the `next` notifications.\n     * @return {Observable<T>} An Observable that emits each given input value.\n     * @static true\n     * @name of\n     * @owner Observable\n     */\n    ArrayObservable.of = function () {\n        var array = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            array[_i - 0] = arguments[_i];\n        }\n        var scheduler = array[array.length - 1];\n        if (isScheduler_1.isScheduler(scheduler)) {\n            array.pop();\n        }\n        else {\n            scheduler = null;\n        }\n        var len = array.length;\n        if (len > 1) {\n            return new ArrayObservable(array, scheduler);\n        }\n        else if (len === 1) {\n            return new ScalarObservable_1.ScalarObservable(array[0], scheduler);\n        }\n        else {\n            return new EmptyObservable_1.EmptyObservable(scheduler);\n        }\n    };\n    ArrayObservable.dispatch = function (state) {\n        var array = state.array, index = state.index, count = state.count, subscriber = state.subscriber;\n        if (index >= count) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(array[index]);\n        if (subscriber.closed) {\n            return;\n        }\n        state.index = index + 1;\n        this.schedule(state);\n    };\n    /** @deprecated internal use only */ ArrayObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var array = this.array;\n        var count = array.length;\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(ArrayObservable.dispatch, 0, {\n                array: array, index: index, count: count, subscriber: subscriber\n            });\n        }\n        else {\n            for (var i = 0; i < count && !subscriber.closed; i++) {\n                subscriber.next(array[i]);\n            }\n            subscriber.complete();\n        }\n    };\n    return ArrayObservable;\n}(Observable_1.Observable));\nexports.ArrayObservable = ArrayObservable;\n//# sourceMappingURL=ArrayObservable.js.map","\"use strict\";\nvar throttle_1 = require('../operators/throttle');\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for a duration determined by another Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link throttleTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/throttle.png\" width=\"100%\">\n *\n * `throttle` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled by calling the `durationSelector` function with the source value,\n * which returns the \"duration\" Observable. When the duration Observable emits a\n * value or completes, the timer is disabled, and this process repeats for the\n * next source value.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.throttle(ev => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration for each source value, returned as an Observable or a Promise.\n * @param {Object} config a configuration object to define `leading` and `trailing` behavior. Defaults\n * to `{ leading: true, trailing: false }`.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttle\n * @owner Observable\n */\nfunction throttle(durationSelector, config) {\n    if (config === void 0) { config = throttle_1.defaultThrottleConfig; }\n    return throttle_1.throttle(durationSelector, config)(this);\n}\nexports.throttle = throttle;\n//# sourceMappingURL=throttle.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar isFunction_1 = require('./util/isFunction');\nvar Subscription_1 = require('./Subscription');\nvar Observer_1 = require('./Observer');\nvar rxSubscriber_1 = require('./symbol/rxSubscriber');\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nvar Subscriber = (function (_super) {\n    __extends(Subscriber, _super);\n    /**\n     * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n     * defined Observer or a `next` callback function.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     */\n    function Subscriber(destinationOrNext, error, complete) {\n        _super.call(this);\n        this.syncErrorValue = null;\n        this.syncErrorThrown = false;\n        this.syncErrorThrowable = false;\n        this.isStopped = false;\n        switch (arguments.length) {\n            case 0:\n                this.destination = Observer_1.empty;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    this.destination = Observer_1.empty;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    // HACK(benlesh): To resolve an issue where Node users may have multiple\n                    // copies of rxjs in their node_modules directory.\n                    if (isTrustedSubscriber(destinationOrNext)) {\n                        var trustedSubscriber = destinationOrNext[rxSubscriber_1.rxSubscriber]();\n                        this.syncErrorThrowable = trustedSubscriber.syncErrorThrowable;\n                        this.destination = trustedSubscriber;\n                        trustedSubscriber.add(this);\n                    }\n                    else {\n                        this.syncErrorThrowable = true;\n                        this.destination = new SafeSubscriber(this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                this.syncErrorThrowable = true;\n                this.destination = new SafeSubscriber(this, destinationOrNext, error, complete);\n                break;\n        }\n    }\n    Subscriber.prototype[rxSubscriber_1.rxSubscriber] = function () { return this; };\n    /**\n     * A static factory for a Subscriber, given a (potentially partial) definition\n     * of an Observer.\n     * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n     * Observer represented by the given arguments.\n     */\n    Subscriber.create = function (next, error, complete) {\n        var subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `next` from\n     * the Observable, with a value. The Observable may call this method 0 or more\n     * times.\n     * @param {T} [value] The `next` value.\n     * @return {void}\n     */\n    Subscriber.prototype.next = function (value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `error` from\n     * the Observable, with an attached {@link Error}. Notifies the Observer that\n     * the Observable has experienced an error condition.\n     * @param {any} [err] The `error` exception.\n     * @return {void}\n     */\n    Subscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive a valueless notification of type\n     * `complete` from the Observable. Notifies the Observer that the Observable\n     * has finished sending push-based notifications.\n     * @return {void}\n     */\n    Subscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        _super.prototype.unsubscribe.call(this);\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    Subscriber.prototype._complete = function () {\n        this.destination.complete();\n        this.unsubscribe();\n    };\n    /** @deprecated internal use only */ Subscriber.prototype._unsubscribeAndRecycle = function () {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        this._parent = null;\n        this._parents = null;\n        this.unsubscribe();\n        this.closed = false;\n        this.isStopped = false;\n        this._parent = _parent;\n        this._parents = _parents;\n        return this;\n    };\n    return Subscriber;\n}(Subscription_1.Subscription));\nexports.Subscriber = Subscriber;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SafeSubscriber = (function (_super) {\n    __extends(SafeSubscriber, _super);\n    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\n        _super.call(this);\n        this._parentSubscriber = _parentSubscriber;\n        var next;\n        var context = this;\n        if (isFunction_1.isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (observerOrNext !== Observer_1.empty) {\n                context = Object.create(observerOrNext);\n                if (isFunction_1.isFunction(context.unsubscribe)) {\n                    this.add(context.unsubscribe.bind(context));\n                }\n                context.unsubscribe = this.unsubscribe.bind(this);\n            }\n        }\n        this._context = context;\n        this._next = next;\n        this._error = error;\n        this._complete = complete;\n    }\n    SafeSubscriber.prototype.next = function (value) {\n        if (!this.isStopped && this._next) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (!_parentSubscriber.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._error) {\n                if (!_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parentSubscriber.syncErrorThrowable) {\n                this.unsubscribe();\n                throw err;\n            }\n            else {\n                _parentSubscriber.syncErrorValue = err;\n                _parentSubscriber.syncErrorThrown = true;\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.complete = function () {\n        var _this = this;\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._complete) {\n                var wrappedComplete = function () { return _this._complete.call(_this._context); };\n                if (!_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(wrappedComplete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            throw err;\n        }\n    };\n    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            parent.syncErrorValue = err;\n            parent.syncErrorThrown = true;\n            return true;\n        }\n        return false;\n    };\n    /** @deprecated internal use only */ SafeSubscriber.prototype._unsubscribe = function () {\n        var _parentSubscriber = this._parentSubscriber;\n        this._context = null;\n        this._parentSubscriber = null;\n        _parentSubscriber.unsubscribe();\n    };\n    return SafeSubscriber;\n}(Subscriber));\nfunction isTrustedSubscriber(obj) {\n    return obj instanceof Subscriber || ('syncErrorThrowable' in obj && obj[rxSubscriber_1.rxSubscriber]);\n}\n//# sourceMappingURL=Subscriber.js.map","var DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\nvar has = require('../internals/has');\n\nvar defineProperty = Object.defineProperty;\nvar cache = {};\n\nvar thrower = function (it) { throw it; };\n\nmodule.exports = function (METHOD_NAME, options) {\n  if (has(cache, METHOD_NAME)) return cache[METHOD_NAME];\n  if (!options) options = {};\n  var method = [][METHOD_NAME];\n  var ACCESSORS = has(options, 'ACCESSORS') ? options.ACCESSORS : false;\n  var argument0 = has(options, 0) ? options[0] : thrower;\n  var argument1 = has(options, 1) ? options[1] : undefined;\n\n  return cache[METHOD_NAME] = !!method && !fails(function () {\n    if (ACCESSORS && !DESCRIPTORS) return true;\n    var O = { length: -1 };\n\n    if (ACCESSORS) defineProperty(O, 1, { enumerable: true, get: thrower });\n    else O[1] = 1;\n\n    method.call(O, argument0, argument1);\n  });\n};\n","\"use strict\";\nfunction isObject(x) {\n    return x != null && typeof x === 'object';\n}\nexports.isObject = isObject;\n//# sourceMappingURL=isObject.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar count_1 = require('../../operator/count');\nObservable_1.Observable.prototype.count = count_1.count;\n//# sourceMappingURL=count.js.map","\"use strict\";\nvar share_1 = require('../operators/share');\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n *\n * This behaves similarly to .publish().refCount(), with a behavior difference when the source observable emits complete.\n * .publish().refCount() will not resubscribe to the original source, however .share() will resubscribe to the original source.\n * Observable.of(\"test\").publish().refCount() will not re-emit \"test\" on new subscriptions, Observable.of(\"test\").share() will\n * re-emit \"test\" to new subscriptions.\n *\n * <img src=\"./img/share.png\" width=\"100%\">\n *\n * @return {Observable<T>} An Observable that upon connection causes the source Observable to emit items to its Observers.\n * @method share\n * @owner Observable\n */\nfunction share() {\n    return share_1.share()(this);\n}\nexports.share = share;\n;\n//# sourceMappingURL=share.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar DeferObservable = (function (_super) {\n    __extends(DeferObservable, _super);\n    function DeferObservable(observableFactory) {\n        _super.call(this);\n        this.observableFactory = observableFactory;\n    }\n    /**\n     * Creates an Observable that, on subscribe, calls an Observable factory to\n     * make an Observable for each new Observer.\n     *\n     * <span class=\"informal\">Creates the Observable lazily, that is, only when it\n     * is subscribed.\n     * </span>\n     *\n     * <img src=\"./img/defer.png\" width=\"100%\">\n     *\n     * `defer` allows you to create the Observable only when the Observer\n     * subscribes, and create a fresh Observable for each Observer. It waits until\n     * an Observer subscribes to it, and then it generates an Observable,\n     * typically with an Observable factory function. It does this afresh for each\n     * subscriber, so although each subscriber may think it is subscribing to the\n     * same Observable, in fact each subscriber gets its own individual\n     * Observable.\n     *\n     * @example <caption>Subscribe to either an Observable of clicks or an Observable of interval, at random</caption>\n     * var clicksOrInterval = Rx.Observable.defer(function () {\n     *   if (Math.random() > 0.5) {\n     *     return Rx.Observable.fromEvent(document, 'click');\n     *   } else {\n     *     return Rx.Observable.interval(1000);\n     *   }\n     * });\n     * clicksOrInterval.subscribe(x => console.log(x));\n     *\n     * // Results in the following behavior:\n     * // If the result of Math.random() is greater than 0.5 it will listen\n     * // for clicks anywhere on the \"document\"; when document is clicked it\n     * // will log a MouseEvent object to the console. If the result is less\n     * // than 0.5 it will emit ascending numbers, one every second(1000ms).\n     *\n     * @see {@link create}\n     *\n     * @param {function(): SubscribableOrPromise} observableFactory The Observable\n     * factory function to invoke for each Observer that subscribes to the output\n     * Observable. May also return a Promise, which will be converted on the fly\n     * to an Observable.\n     * @return {Observable} An Observable whose Observers' subscriptions trigger\n     * an invocation of the given Observable factory function.\n     * @static true\n     * @name defer\n     * @owner Observable\n     */\n    DeferObservable.create = function (observableFactory) {\n        return new DeferObservable(observableFactory);\n    };\n    /** @deprecated internal use only */ DeferObservable.prototype._subscribe = function (subscriber) {\n        return new DeferSubscriber(subscriber, this.observableFactory);\n    };\n    return DeferObservable;\n}(Observable_1.Observable));\nexports.DeferObservable = DeferObservable;\nvar DeferSubscriber = (function (_super) {\n    __extends(DeferSubscriber, _super);\n    function DeferSubscriber(destination, factory) {\n        _super.call(this, destination);\n        this.factory = factory;\n        this.tryDefer();\n    }\n    DeferSubscriber.prototype.tryDefer = function () {\n        try {\n            this._callFactory();\n        }\n        catch (err) {\n            this._error(err);\n        }\n    };\n    DeferSubscriber.prototype._callFactory = function () {\n        var result = this.factory();\n        if (result) {\n            this.add(subscribeToResult_1.subscribeToResult(this, result));\n        }\n    };\n    return DeferSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=DeferObservable.js.map","\"use strict\";\nvar AjaxObservable_1 = require('./AjaxObservable');\nexports.ajax = AjaxObservable_1.AjaxObservable.create;\n//# sourceMappingURL=ajax.js.map","\"use strict\";\nvar async_1 = require('../scheduler/async');\nvar isNumeric_1 = require('../util/isNumeric');\nvar isScheduler_1 = require('../util/isScheduler');\nvar windowTime_1 = require('../operators/windowTime');\nfunction windowTime(windowTimeSpan) {\n    var scheduler = async_1.async;\n    var windowCreationInterval = null;\n    var maxWindowSize = Number.POSITIVE_INFINITY;\n    if (isScheduler_1.isScheduler(arguments[3])) {\n        scheduler = arguments[3];\n    }\n    if (isScheduler_1.isScheduler(arguments[2])) {\n        scheduler = arguments[2];\n    }\n    else if (isNumeric_1.isNumeric(arguments[2])) {\n        maxWindowSize = arguments[2];\n    }\n    if (isScheduler_1.isScheduler(arguments[1])) {\n        scheduler = arguments[1];\n    }\n    else if (isNumeric_1.isNumeric(arguments[1])) {\n        windowCreationInterval = arguments[1];\n    }\n    return windowTime_1.windowTime(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler)(this);\n}\nexports.windowTime = windowTime;\n//# sourceMappingURL=windowTime.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar tryCatch_1 = require('../util/tryCatch');\nvar errorObject_1 = require('../util/errorObject');\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * @example <caption>A simple example with numbers</caption>\n * Observable.of(1, 1, 2, 2, 2, 1, 1, 2, 3, 3, 4)\n *   .distinctUntilChanged()\n *   .subscribe(x => console.log(x)); // 1, 2, 1, 2, 3, 4\n *\n * @example <caption>An example using a compare function</caption>\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'})\n *     { age: 6, name: 'Foo'})\n *     .distinctUntilChanged((p: Person, q: Person) => p.name === q.name)\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n *\n * @see {@link distinct}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinctUntilChanged\n * @owner Observable\n */\nfunction distinctUntilChanged(compare, keySelector) {\n    return function (source) { return source.lift(new DistinctUntilChangedOperator(compare, keySelector)); };\n}\nexports.distinctUntilChanged = distinctUntilChanged;\nvar DistinctUntilChangedOperator = (function () {\n    function DistinctUntilChangedOperator(compare, keySelector) {\n        this.compare = compare;\n        this.keySelector = keySelector;\n    }\n    DistinctUntilChangedOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));\n    };\n    return DistinctUntilChangedOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DistinctUntilChangedSubscriber = (function (_super) {\n    __extends(DistinctUntilChangedSubscriber, _super);\n    function DistinctUntilChangedSubscriber(destination, compare, keySelector) {\n        _super.call(this, destination);\n        this.keySelector = keySelector;\n        this.hasKey = false;\n        if (typeof compare === 'function') {\n            this.compare = compare;\n        }\n    }\n    DistinctUntilChangedSubscriber.prototype.compare = function (x, y) {\n        return x === y;\n    };\n    DistinctUntilChangedSubscriber.prototype._next = function (value) {\n        var keySelector = this.keySelector;\n        var key = value;\n        if (keySelector) {\n            key = tryCatch_1.tryCatch(this.keySelector)(value);\n            if (key === errorObject_1.errorObject) {\n                return this.destination.error(errorObject_1.errorObject.e);\n            }\n        }\n        var result = false;\n        if (this.hasKey) {\n            result = tryCatch_1.tryCatch(this.compare)(this.key, key);\n            if (result === errorObject_1.errorObject) {\n                return this.destination.error(errorObject_1.errorObject.e);\n            }\n        }\n        else {\n            this.hasKey = true;\n        }\n        if (Boolean(result) === false) {\n            this.key = key;\n            this.destination.next(value);\n        }\n    };\n    return DistinctUntilChangedSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=distinctUntilChanged.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar isFunction_1 = require('../util/isFunction');\nvar Observable_1 = require('../Observable');\nvar Subscription_1 = require('../Subscription');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar FromEventPatternObservable = (function (_super) {\n    __extends(FromEventPatternObservable, _super);\n    function FromEventPatternObservable(addHandler, removeHandler, selector) {\n        _super.call(this);\n        this.addHandler = addHandler;\n        this.removeHandler = removeHandler;\n        this.selector = selector;\n    }\n    /**\n     * Creates an Observable from an API based on addHandler/removeHandler\n     * functions.\n     *\n     * <span class=\"informal\">Converts any addHandler/removeHandler API to an\n     * Observable.</span>\n     *\n     * <img src=\"./img/fromEventPattern.png\" width=\"100%\">\n     *\n     * Creates an Observable by using the `addHandler` and `removeHandler`\n     * functions to add and remove the handlers, with an optional selector\n     * function to project the event arguments to a result. The `addHandler` is\n     * called when the output Observable is subscribed, and `removeHandler` is\n     * called when the Subscription is unsubscribed.\n     *\n     * @example <caption>Emits clicks happening on the DOM document</caption>\n     * function addClickHandler(handler) {\n     *   document.addEventListener('click', handler);\n     * }\n     *\n     * function removeClickHandler(handler) {\n     *   document.removeEventListener('click', handler);\n     * }\n     *\n     * var clicks = Rx.Observable.fromEventPattern(\n     *   addClickHandler,\n     *   removeClickHandler\n     * );\n     * clicks.subscribe(x => console.log(x));\n     *\n     * @see {@link from}\n     * @see {@link fromEvent}\n     *\n     * @param {function(handler: Function): any} addHandler A function that takes\n     * a `handler` function as argument and attaches it somehow to the actual\n     * source of events.\n     * @param {function(handler: Function, signal?: any): void} [removeHandler] An optional function that\n     * takes a `handler` function as argument and removes it in case it was\n     * previously attached using `addHandler`. if addHandler returns signal to teardown when remove,\n     * removeHandler function will forward it.\n     * @param {function(...args: any): T} [selector] An optional function to\n     * post-process results. It takes the arguments from the event handler and\n     * should return a single value.\n     * @return {Observable<T>}\n     * @static true\n     * @name fromEventPattern\n     * @owner Observable\n     */\n    FromEventPatternObservable.create = function (addHandler, removeHandler, selector) {\n        return new FromEventPatternObservable(addHandler, removeHandler, selector);\n    };\n    /** @deprecated internal use only */ FromEventPatternObservable.prototype._subscribe = function (subscriber) {\n        var _this = this;\n        var removeHandler = this.removeHandler;\n        var handler = !!this.selector ? function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i - 0] = arguments[_i];\n            }\n            _this._callSelector(subscriber, args);\n        } : function (e) { subscriber.next(e); };\n        var retValue = this._callAddHandler(handler, subscriber);\n        if (!isFunction_1.isFunction(removeHandler)) {\n            return;\n        }\n        subscriber.add(new Subscription_1.Subscription(function () {\n            //TODO: determine whether or not to forward to error handler\n            removeHandler(handler, retValue);\n        }));\n    };\n    FromEventPatternObservable.prototype._callSelector = function (subscriber, args) {\n        try {\n            var result = this.selector.apply(this, args);\n            subscriber.next(result);\n        }\n        catch (e) {\n            subscriber.error(e);\n        }\n    };\n    FromEventPatternObservable.prototype._callAddHandler = function (handler, errorSubscriber) {\n        try {\n            return this.addHandler(handler) || null;\n        }\n        catch (e) {\n            errorSubscriber.error(e);\n        }\n    };\n    return FromEventPatternObservable;\n}(Observable_1.Observable));\nexports.FromEventPatternObservable = FromEventPatternObservable;\n//# sourceMappingURL=FromEventPatternObservable.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar fromEvent_1 = require('../../observable/fromEvent');\nObservable_1.Observable.fromEvent = fromEvent_1.fromEvent;\n//# sourceMappingURL=fromEvent.js.map","\"use strict\";\n// typeof any so that it we don't have to cast when comparing a result to the error object\nexports.errorObject = { e: {} };\n//# sourceMappingURL=errorObject.js.map","\"use strict\";\nvar WebSocketSubject_1 = require('./WebSocketSubject');\nexports.webSocket = WebSocketSubject_1.WebSocketSubject.create;\n//# sourceMappingURL=webSocket.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar Subscription_1 = require('../Subscription');\nvar Observable_1 = require('../Observable');\nvar Subject_1 = require('../Subject');\nvar Map_1 = require('../util/Map');\nvar FastMap_1 = require('../util/FastMap');\n/* tslint:enable:max-line-length */\n/**\n * Groups the items emitted by an Observable according to a specified criterion,\n * and emits these grouped items as `GroupedObservables`, one\n * {@link GroupedObservable} per group.\n *\n * <img src=\"./img/groupBy.png\" width=\"100%\">\n *\n * @example <caption>Group objects by id and return as array</caption>\n * Observable.of<Obj>({id: 1, name: 'aze1'},\n *                    {id: 2, name: 'sf2'},\n *                    {id: 2, name: 'dg2'},\n *                    {id: 1, name: 'erg1'},\n *                    {id: 1, name: 'df1'},\n *                    {id: 2, name: 'sfqfb2'},\n *                    {id: 3, name: 'qfs3'},\n *                    {id: 2, name: 'qsgqsfg2'}\n *     )\n *     .groupBy(p => p.id)\n *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], []))\n *     .subscribe(p => console.log(p));\n *\n * // displays:\n * // [ { id: 1, name: 'aze1' },\n * //   { id: 1, name: 'erg1' },\n * //   { id: 1, name: 'df1' } ]\n * //\n * // [ { id: 2, name: 'sf2' },\n * //   { id: 2, name: 'dg2' },\n * //   { id: 2, name: 'sfqfb2' },\n * //   { id: 2, name: 'qsgqsfg2' } ]\n * //\n * // [ { id: 3, name: 'qfs3' } ]\n *\n * @example <caption>Pivot data on the id field</caption>\n * Observable.of<Obj>({id: 1, name: 'aze1'},\n *                    {id: 2, name: 'sf2'},\n *                    {id: 2, name: 'dg2'},\n *                    {id: 1, name: 'erg1'},\n *                    {id: 1, name: 'df1'},\n *                    {id: 2, name: 'sfqfb2'},\n *                    {id: 3, name: 'qfs1'},\n *                    {id: 2, name: 'qsgqsfg2'}\n *                   )\n *     .groupBy(p => p.id, p => p.name)\n *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], [\"\" + group$.key]))\n *     .map(arr => ({'id': parseInt(arr[0]), 'values': arr.slice(1)}))\n *     .subscribe(p => console.log(p));\n *\n * // displays:\n * // { id: 1, values: [ 'aze1', 'erg1', 'df1' ] }\n * // { id: 2, values: [ 'sf2', 'dg2', 'sfqfb2', 'qsgqsfg2' ] }\n * // { id: 3, values: [ 'qfs1' ] }\n *\n * @param {function(value: T): K} keySelector A function that extracts the key\n * for each item.\n * @param {function(value: T): R} [elementSelector] A function that extracts the\n * return element for each item.\n * @param {function(grouped: GroupedObservable<K,R>): Observable<any>} [durationSelector]\n * A function that returns an Observable to determine how long each group should\n * exist.\n * @return {Observable<GroupedObservable<K,R>>} An Observable that emits\n * GroupedObservables, each of which corresponds to a unique key value and each\n * of which emits those items from the source Observable that share that key\n * value.\n * @method groupBy\n * @owner Observable\n */\nfunction groupBy(keySelector, elementSelector, durationSelector, subjectSelector) {\n    return function (source) {\n        return source.lift(new GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector));\n    };\n}\nexports.groupBy = groupBy;\nvar GroupByOperator = (function () {\n    function GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector) {\n        this.keySelector = keySelector;\n        this.elementSelector = elementSelector;\n        this.durationSelector = durationSelector;\n        this.subjectSelector = subjectSelector;\n    }\n    GroupByOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new GroupBySubscriber(subscriber, this.keySelector, this.elementSelector, this.durationSelector, this.subjectSelector));\n    };\n    return GroupByOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar GroupBySubscriber = (function (_super) {\n    __extends(GroupBySubscriber, _super);\n    function GroupBySubscriber(destination, keySelector, elementSelector, durationSelector, subjectSelector) {\n        _super.call(this, destination);\n        this.keySelector = keySelector;\n        this.elementSelector = elementSelector;\n        this.durationSelector = durationSelector;\n        this.subjectSelector = subjectSelector;\n        this.groups = null;\n        this.attemptedToUnsubscribe = false;\n        this.count = 0;\n    }\n    GroupBySubscriber.prototype._next = function (value) {\n        var key;\n        try {\n            key = this.keySelector(value);\n        }\n        catch (err) {\n            this.error(err);\n            return;\n        }\n        this._group(value, key);\n    };\n    GroupBySubscriber.prototype._group = function (value, key) {\n        var groups = this.groups;\n        if (!groups) {\n            groups = this.groups = typeof key === 'string' ? new FastMap_1.FastMap() : new Map_1.Map();\n        }\n        var group = groups.get(key);\n        var element;\n        if (this.elementSelector) {\n            try {\n                element = this.elementSelector(value);\n            }\n            catch (err) {\n                this.error(err);\n            }\n        }\n        else {\n            element = value;\n        }\n        if (!group) {\n            group = this.subjectSelector ? this.subjectSelector() : new Subject_1.Subject();\n            groups.set(key, group);\n            var groupedObservable = new GroupedObservable(key, group, this);\n            this.destination.next(groupedObservable);\n            if (this.durationSelector) {\n                var duration = void 0;\n                try {\n                    duration = this.durationSelector(new GroupedObservable(key, group));\n                }\n                catch (err) {\n                    this.error(err);\n                    return;\n                }\n                this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));\n            }\n        }\n        if (!group.closed) {\n            group.next(element);\n        }\n    };\n    GroupBySubscriber.prototype._error = function (err) {\n        var groups = this.groups;\n        if (groups) {\n            groups.forEach(function (group, key) {\n                group.error(err);\n            });\n            groups.clear();\n        }\n        this.destination.error(err);\n    };\n    GroupBySubscriber.prototype._complete = function () {\n        var groups = this.groups;\n        if (groups) {\n            groups.forEach(function (group, key) {\n                group.complete();\n            });\n            groups.clear();\n        }\n        this.destination.complete();\n    };\n    GroupBySubscriber.prototype.removeGroup = function (key) {\n        this.groups.delete(key);\n    };\n    GroupBySubscriber.prototype.unsubscribe = function () {\n        if (!this.closed) {\n            this.attemptedToUnsubscribe = true;\n            if (this.count === 0) {\n                _super.prototype.unsubscribe.call(this);\n            }\n        }\n    };\n    return GroupBySubscriber;\n}(Subscriber_1.Subscriber));\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar GroupDurationSubscriber = (function (_super) {\n    __extends(GroupDurationSubscriber, _super);\n    function GroupDurationSubscriber(key, group, parent) {\n        _super.call(this, group);\n        this.key = key;\n        this.group = group;\n        this.parent = parent;\n    }\n    GroupDurationSubscriber.prototype._next = function (value) {\n        this.complete();\n    };\n    /** @deprecated internal use only */ GroupDurationSubscriber.prototype._unsubscribe = function () {\n        var _a = this, parent = _a.parent, key = _a.key;\n        this.key = this.parent = null;\n        if (parent) {\n            parent.removeGroup(key);\n        }\n    };\n    return GroupDurationSubscriber;\n}(Subscriber_1.Subscriber));\n/**\n * An Observable representing values belonging to the same group represented by\n * a common key. The values emitted by a GroupedObservable come from the source\n * Observable. The common key is available as the field `key` on a\n * GroupedObservable instance.\n *\n * @class GroupedObservable<K, T>\n */\nvar GroupedObservable = (function (_super) {\n    __extends(GroupedObservable, _super);\n    function GroupedObservable(key, groupSubject, refCountSubscription) {\n        _super.call(this);\n        this.key = key;\n        this.groupSubject = groupSubject;\n        this.refCountSubscription = refCountSubscription;\n    }\n    /** @deprecated internal use only */ GroupedObservable.prototype._subscribe = function (subscriber) {\n        var subscription = new Subscription_1.Subscription();\n        var _a = this, refCountSubscription = _a.refCountSubscription, groupSubject = _a.groupSubject;\n        if (refCountSubscription && !refCountSubscription.closed) {\n            subscription.add(new InnerRefCountSubscription(refCountSubscription));\n        }\n        subscription.add(groupSubject.subscribe(subscriber));\n        return subscription;\n    };\n    return GroupedObservable;\n}(Observable_1.Observable));\nexports.GroupedObservable = GroupedObservable;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar InnerRefCountSubscription = (function (_super) {\n    __extends(InnerRefCountSubscription, _super);\n    function InnerRefCountSubscription(parent) {\n        _super.call(this);\n        this.parent = parent;\n        parent.count++;\n    }\n    InnerRefCountSubscription.prototype.unsubscribe = function () {\n        var parent = this.parent;\n        if (!parent.closed && !this.closed) {\n            _super.prototype.unsubscribe.call(this);\n            parent.count -= 1;\n            if (parent.count === 0 && parent.attemptedToUnsubscribe) {\n                parent.unsubscribe();\n            }\n        }\n    };\n    return InnerRefCountSubscription;\n}(Subscription_1.Subscription));\n//# sourceMappingURL=groupBy.js.map","\"use strict\";\n// CommonJS / Node have global context exposed as \"global\" variable.\n// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake\n// the global \"global\" var for now.\nvar __window = typeof window !== 'undefined' && window;\nvar __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nvar __global = typeof global !== 'undefined' && global;\nvar _root = __window || __global || __self;\nexports.root = _root;\n// Workaround Closure Compiler restriction: The body of a goog.module cannot use throw.\n// This is needed when used with angular/tsickle which inserts a goog.module statement.\n// Wrap in IIFE\n(function () {\n    if (!_root) {\n        throw new Error('RxJS could not find any global context (window, self, global)');\n    }\n})();\n//# sourceMappingURL=root.js.map","\"use strict\";\nvar skipUntil_1 = require('../operators/skipUntil');\n/**\n * Returns an Observable that skips items emitted by the source Observable until a second Observable emits an item.\n *\n * <img src=\"./img/skipUntil.png\" width=\"100%\">\n *\n * @param {Observable} notifier - The second Observable that has to emit an item before the source Observable's elements begin to\n * be mirrored by the resulting Observable.\n * @return {Observable<T>} An Observable that skips items from the source Observable until the second Observable emits\n * an item, then emits the remaining items.\n * @method skipUntil\n * @owner Observable\n */\nfunction skipUntil(notifier) {\n    return skipUntil_1.skipUntil(notifier)(this);\n}\nexports.skipUntil = skipUntil;\n//# sourceMappingURL=skipUntil.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar window_1 = require('../../operator/window');\nObservable_1.Observable.prototype.window = window_1.window;\n//# sourceMappingURL=window.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar if_1 = require('../../observable/if');\nObservable_1.Observable.if = if_1._if;\n//# sourceMappingURL=if.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when an Observable or a sequence was queried but has no\n * elements.\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link single}\n *\n * @class EmptyError\n */\nvar EmptyError = (function (_super) {\n    __extends(EmptyError, _super);\n    function EmptyError() {\n        var err = _super.call(this, 'no elements in sequence');\n        this.name = err.name = 'EmptyError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return EmptyError;\n}(Error));\nexports.EmptyError = EmptyError;\n//# sourceMappingURL=EmptyError.js.map","\"use strict\";\nvar windowWhen_1 = require('../operators/windowWhen');\n/**\n * Branch out the source Observable values as a nested Observable using a\n * factory function of closing Observables to determine when to start a new\n * window.\n *\n * <span class=\"informal\">It's like {@link bufferWhen}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowWhen.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping windows.\n * It emits the current window and opens a new one whenever the Observable\n * produced by the specified `closingSelector` function emits an item. The first\n * window is opened immediately when subscribing to the output Observable.\n *\n * @example <caption>Emit only the first two clicks events in every window of [1-5] random seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks\n *   .windowWhen(() => Rx.Observable.interval(1000 + Math.random() * 4000))\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link bufferWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals (on either `next` or\n * `complete`) when to close the previous window and start a new one.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowWhen\n * @owner Observable\n */\nfunction windowWhen(closingSelector) {\n    return windowWhen_1.windowWhen(closingSelector)(this);\n}\nexports.windowWhen = windowWhen;\n//# sourceMappingURL=windowWhen.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar isArray_1 = require('../util/isArray');\nvar ArrayObservable_1 = require('../observable/ArrayObservable');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\nfunction race() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    // if the only argument is an array, it was most likely called with\n    // `race([obs1, obs2, ...])`\n    if (observables.length === 1) {\n        if (isArray_1.isArray(observables[0])) {\n            observables = observables[0];\n        }\n        else {\n            return observables[0];\n        }\n    }\n    return new ArrayObservable_1.ArrayObservable(observables).lift(new RaceOperator());\n}\nexports.race = race;\nvar RaceOperator = (function () {\n    function RaceOperator() {\n    }\n    RaceOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new RaceSubscriber(subscriber));\n    };\n    return RaceOperator;\n}());\nexports.RaceOperator = RaceOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar RaceSubscriber = (function (_super) {\n    __extends(RaceSubscriber, _super);\n    function RaceSubscriber(destination) {\n        _super.call(this, destination);\n        this.hasFirst = false;\n        this.observables = [];\n        this.subscriptions = [];\n    }\n    RaceSubscriber.prototype._next = function (observable) {\n        this.observables.push(observable);\n    };\n    RaceSubscriber.prototype._complete = function () {\n        var observables = this.observables;\n        var len = observables.length;\n        if (len === 0) {\n            this.destination.complete();\n        }\n        else {\n            for (var i = 0; i < len && !this.hasFirst; i++) {\n                var observable = observables[i];\n                var subscription = subscribeToResult_1.subscribeToResult(this, observable, observable, i);\n                if (this.subscriptions) {\n                    this.subscriptions.push(subscription);\n                }\n                this.add(subscription);\n            }\n            this.observables = null;\n        }\n    };\n    RaceSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (!this.hasFirst) {\n            this.hasFirst = true;\n            for (var i = 0; i < this.subscriptions.length; i++) {\n                if (i !== outerIndex) {\n                    var subscription = this.subscriptions[i];\n                    subscription.unsubscribe();\n                    this.remove(subscription);\n                }\n            }\n            this.subscriptions = null;\n        }\n        this.destination.next(innerValue);\n    };\n    return RaceSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nexports.RaceSubscriber = RaceSubscriber;\n//# sourceMappingURL=race.js.map","\"use strict\";\nvar window_1 = require('../operators/window');\n/**\n * Branch out the source Observable values as a nested Observable whenever\n * `windowBoundaries` emits.\n *\n * <span class=\"informal\">It's like {@link buffer}, but emits a nested Observable\n * instead of an array.</span>\n *\n * <img src=\"./img/window.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping\n * windows. It emits the current window and opens a new one whenever the\n * Observable `windowBoundaries` emits an item. Because each window is an\n * Observable, the output is a higher-order Observable.\n *\n * @example <caption>In every window of 1 second each, emit at most 2 click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var interval = Rx.Observable.interval(1000);\n * var result = clicks.window(interval)\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link buffer}\n *\n * @param {Observable<any>} windowBoundaries An Observable that completes the\n * previous window and starts a new window.\n * @return {Observable<Observable<T>>} An Observable of windows, which are\n * Observables emitting values of the source Observable.\n * @method window\n * @owner Observable\n */\nfunction window(windowBoundaries) {\n    return window_1.window(windowBoundaries)(this);\n}\nexports.window = window;\n//# sourceMappingURL=window.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar onErrorResumeNext_1 = require('../../observable/onErrorResumeNext');\nObservable_1.Observable.onErrorResumeNext = onErrorResumeNext_1.onErrorResumeNext;\n//# sourceMappingURL=onErrorResumeNext.js.map","\"use strict\";\nvar ErrorObservable_1 = require('./ErrorObservable');\nexports._throw = ErrorObservable_1.ErrorObservable.create;\n//# sourceMappingURL=throw.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar timer_1 = require('../../observable/timer');\nObservable_1.Observable.timer = timer_1.timer;\n//# sourceMappingURL=timer.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar windowTime_1 = require('../../operator/windowTime');\nObservable_1.Observable.prototype.windowTime = windowTime_1.windowTime;\n//# sourceMappingURL=windowTime.js.map","\"use strict\";\nvar FromEventPatternObservable_1 = require('./FromEventPatternObservable');\nexports.fromEventPattern = FromEventPatternObservable_1.FromEventPatternObservable.create;\n//# sourceMappingURL=fromEventPattern.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar bindNodeCallback_1 = require('../../observable/bindNodeCallback');\nObservable_1.Observable.bindNodeCallback = bindNodeCallback_1.bindNodeCallback;\n//# sourceMappingURL=bindNodeCallback.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar materialize_1 = require('../../operator/materialize');\nObservable_1.Observable.prototype.materialize = materialize_1.materialize;\n//# sourceMappingURL=materialize.js.map","\"use strict\";\nexports.isArrayLike = (function (x) { return x && typeof x.length === 'number'; });\n//# sourceMappingURL=isArrayLike.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar windowToggle_1 = require('../../operator/windowToggle');\nObservable_1.Observable.prototype.windowToggle = windowToggle_1.windowToggle;\n//# sourceMappingURL=windowToggle.js.map","\"use strict\";\nvar debounce_1 = require('../operators/debounce');\n/**\n * Emits a value from the source Observable only after a particular time span\n * determined by another Observable has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link debounceTime}, but the time span of\n * emission silence is determined by a second Observable.</span>\n *\n * <img src=\"./img/debounce.png\" width=\"100%\">\n *\n * `debounce` delays values emitted by the source Observable, but drops previous\n * pending delayed emissions if a new value arrives on the source Observable.\n * This operator keeps track of the most recent value from the source\n * Observable, and spawns a duration Observable by calling the\n * `durationSelector` function. The value is emitted only when the duration\n * Observable emits a value or completes, and if no other value was emitted on\n * the source Observable since the duration Observable was spawned. If a new\n * value appears before the duration Observable emits, the previous value will\n * be dropped and will not be emitted on the output Observable.\n *\n * Like {@link debounceTime}, this is a rate-limiting operator, and also a\n * delay-like operator since output emissions do not necessarily occur at the\n * same time as they did on the source Observable.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounce(() => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n * @see {@link throttle}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the timeout\n * duration for each source value, returned as an Observable or a Promise.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified duration Observable returned by\n * `durationSelector`, and may drop some values if they occur too frequently.\n * @method debounce\n * @owner Observable\n */\nfunction debounce(durationSelector) {\n    return debounce_1.debounce(durationSelector)(this);\n}\nexports.debounce = debounce;\n//# sourceMappingURL=debounce.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nfunction refCount() {\n    return function refCountOperatorFunction(source) {\n        return source.lift(new RefCountOperator(source));\n    };\n}\nexports.refCount = refCount;\nvar RefCountOperator = (function () {\n    function RefCountOperator(connectable) {\n        this.connectable = connectable;\n    }\n    RefCountOperator.prototype.call = function (subscriber, source) {\n        var connectable = this.connectable;\n        connectable._refCount++;\n        var refCounter = new RefCountSubscriber(subscriber, connectable);\n        var subscription = source.subscribe(refCounter);\n        if (!refCounter.closed) {\n            refCounter.connection = connectable.connect();\n        }\n        return subscription;\n    };\n    return RefCountOperator;\n}());\nvar RefCountSubscriber = (function (_super) {\n    __extends(RefCountSubscriber, _super);\n    function RefCountSubscriber(destination, connectable) {\n        _super.call(this, destination);\n        this.connectable = connectable;\n    }\n    /** @deprecated internal use only */ RefCountSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (!connectable) {\n            this.connection = null;\n            return;\n        }\n        this.connectable = null;\n        var refCount = connectable._refCount;\n        if (refCount <= 0) {\n            this.connection = null;\n            return;\n        }\n        connectable._refCount = refCount - 1;\n        if (refCount > 1) {\n            this.connection = null;\n            return;\n        }\n        ///\n        // Compare the local RefCountSubscriber's connection Subscription to the\n        // connection Subscription on the shared ConnectableObservable. In cases\n        // where the ConnectableObservable source synchronously emits values, and\n        // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n        // execution continues to here before the RefCountOperator has a chance to\n        // supply the RefCountSubscriber with the shared connection Subscription.\n        // For example:\n        // ```\n        // Observable.range(0, 10)\n        //   .publish()\n        //   .refCount()\n        //   .take(5)\n        //   .subscribe();\n        // ```\n        // In order to account for this case, RefCountSubscriber should only dispose\n        // the ConnectableObservable's shared connection Subscription if the\n        // connection Subscription exists, *and* either:\n        //   a. RefCountSubscriber doesn't have a reference to the shared connection\n        //      Subscription yet, or,\n        //   b. RefCountSubscriber's connection Subscription reference is identical\n        //      to the shared connection Subscription\n        ///\n        var connection = this.connection;\n        var sharedConnection = connectable._connection;\n        this.connection = null;\n        if (sharedConnection && (!connection || sharedConnection === connection)) {\n            sharedConnection.unsubscribe();\n        }\n    };\n    return RefCountSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=refCount.js.map","\"use strict\";\nvar mapTo_1 = require('../operators/mapTo');\n/**\n * Emits the given constant value on the output Observable every time the source\n * Observable emits a value.\n *\n * <span class=\"informal\">Like {@link map}, but it maps every source value to\n * the same output value every time.</span>\n *\n * <img src=\"./img/mapTo.png\" width=\"100%\">\n *\n * Takes a constant `value` as argument, and emits that whenever the source\n * Observable emits a value. In other words, ignores the actual source value,\n * and simply uses the emission moment to know when to emit the given `value`.\n *\n * @example <caption>Map every click to the string 'Hi'</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var greetings = clicks.mapTo('Hi');\n * greetings.subscribe(x => console.log(x));\n *\n * @see {@link map}\n *\n * @param {any} value The value to map each source value to.\n * @return {Observable} An Observable that emits the given `value` every time\n * the source Observable emits something.\n * @method mapTo\n * @owner Observable\n */\nfunction mapTo(value) {\n    return mapTo_1.mapTo(value)(this);\n}\nexports.mapTo = mapTo;\n//# sourceMappingURL=mapTo.js.map","\"use strict\";\nvar async_1 = require('../scheduler/async');\nvar delay_1 = require('../operators/delay');\n/**\n * Delays the emission of items from the source Observable by a given timeout or\n * until a given Date.\n *\n * <span class=\"informal\">Time shifts each item by some specified amount of\n * milliseconds.</span>\n *\n * <img src=\"./img/delay.png\" width=\"100%\">\n *\n * If the delay argument is a Number, this operator time shifts the source\n * Observable by that amount of time expressed in milliseconds. The relative\n * time intervals between the values are preserved.\n *\n * If the delay argument is a Date, this operator time shifts the start of the\n * Observable execution until the given date occurs.\n *\n * @example <caption>Delay each click by one second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var delayedClicks = clicks.delay(1000); // each click emitted after 1 second\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @example <caption>Delay all clicks until a future date happens</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var date = new Date('March 15, 2050 12:00:00'); // in the future\n * var delayedClicks = clicks.delay(date); // click emitted only after that date\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n *\n * @param {number|Date} delay The delay duration in milliseconds (a `number`) or\n * a `Date` until which the emission of the source items is delayed.\n * @param {Scheduler} [scheduler=async] The IScheduler to use for\n * managing the timers that handle the time-shift for each item.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified timeout or Date.\n * @method delay\n * @owner Observable\n */\nfunction delay(delay, scheduler) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    return delay_1.delay(delay, scheduler)(this);\n}\nexports.delay = delay;\n//# sourceMappingURL=delay.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar UsingObservable = (function (_super) {\n    __extends(UsingObservable, _super);\n    function UsingObservable(resourceFactory, observableFactory) {\n        _super.call(this);\n        this.resourceFactory = resourceFactory;\n        this.observableFactory = observableFactory;\n    }\n    UsingObservable.create = function (resourceFactory, observableFactory) {\n        return new UsingObservable(resourceFactory, observableFactory);\n    };\n    /** @deprecated internal use only */ UsingObservable.prototype._subscribe = function (subscriber) {\n        var _a = this, resourceFactory = _a.resourceFactory, observableFactory = _a.observableFactory;\n        var resource;\n        try {\n            resource = resourceFactory();\n            return new UsingSubscriber(subscriber, resource, observableFactory);\n        }\n        catch (err) {\n            subscriber.error(err);\n        }\n    };\n    return UsingObservable;\n}(Observable_1.Observable));\nexports.UsingObservable = UsingObservable;\nvar UsingSubscriber = (function (_super) {\n    __extends(UsingSubscriber, _super);\n    function UsingSubscriber(destination, resource, observableFactory) {\n        _super.call(this, destination);\n        this.resource = resource;\n        this.observableFactory = observableFactory;\n        destination.add(resource);\n        this.tryUse();\n    }\n    UsingSubscriber.prototype.tryUse = function () {\n        try {\n            var source = this.observableFactory.call(this, this.resource);\n            if (source) {\n                this.add(subscribeToResult_1.subscribeToResult(this, source));\n            }\n        }\n        catch (err) {\n            this._error(err);\n        }\n    };\n    return UsingSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=UsingObservable.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar skip_1 = require('../../operator/skip');\nObservable_1.Observable.prototype.skip = skip_1.skip;\n//# sourceMappingURL=skip.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar concatAll_1 = require('../../operator/concatAll');\nObservable_1.Observable.prototype.concatAll = concatAll_1.concatAll;\n//# sourceMappingURL=concatAll.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar isNumeric_1 = require('../util/isNumeric');\nvar Observable_1 = require('../Observable');\nvar async_1 = require('../scheduler/async');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar IntervalObservable = (function (_super) {\n    __extends(IntervalObservable, _super);\n    function IntervalObservable(period, scheduler) {\n        if (period === void 0) { period = 0; }\n        if (scheduler === void 0) { scheduler = async_1.async; }\n        _super.call(this);\n        this.period = period;\n        this.scheduler = scheduler;\n        if (!isNumeric_1.isNumeric(period) || period < 0) {\n            this.period = 0;\n        }\n        if (!scheduler || typeof scheduler.schedule !== 'function') {\n            this.scheduler = async_1.async;\n        }\n    }\n    /**\n     * Creates an Observable that emits sequential numbers every specified\n     * interval of time, on a specified IScheduler.\n     *\n     * <span class=\"informal\">Emits incremental numbers periodically in time.\n     * </span>\n     *\n     * <img src=\"./img/interval.png\" width=\"100%\">\n     *\n     * `interval` returns an Observable that emits an infinite sequence of\n     * ascending integers, with a constant interval of time of your choosing\n     * between those emissions. The first emission is not sent immediately, but\n     * only after the first period has passed. By default, this operator uses the\n     * `async` IScheduler to provide a notion of time, but you may pass any\n     * IScheduler to it.\n     *\n     * @example <caption>Emits ascending numbers, one every second (1000ms)</caption>\n     * var numbers = Rx.Observable.interval(1000);\n     * numbers.subscribe(x => console.log(x));\n     *\n     * @see {@link timer}\n     * @see {@link delay}\n     *\n     * @param {number} [period=0] The interval size in milliseconds (by default)\n     * or the time unit determined by the scheduler's clock.\n     * @param {Scheduler} [scheduler=async] The IScheduler to use for scheduling\n     * the emission of values, and providing a notion of \"time\".\n     * @return {Observable} An Observable that emits a sequential number each time\n     * interval.\n     * @static true\n     * @name interval\n     * @owner Observable\n     */\n    IntervalObservable.create = function (period, scheduler) {\n        if (period === void 0) { period = 0; }\n        if (scheduler === void 0) { scheduler = async_1.async; }\n        return new IntervalObservable(period, scheduler);\n    };\n    IntervalObservable.dispatch = function (state) {\n        var index = state.index, subscriber = state.subscriber, period = state.period;\n        subscriber.next(index);\n        if (subscriber.closed) {\n            return;\n        }\n        state.index += 1;\n        this.schedule(state, period);\n    };\n    /** @deprecated internal use only */ IntervalObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var period = this.period;\n        var scheduler = this.scheduler;\n        subscriber.add(scheduler.schedule(IntervalObservable.dispatch, period, {\n            index: index, subscriber: subscriber, period: period\n        }));\n    };\n    return IntervalObservable;\n}(Observable_1.Observable));\nexports.IntervalObservable = IntervalObservable;\n//# sourceMappingURL=IntervalObservable.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar pairs_1 = require('../../observable/pairs');\nObservable_1.Observable.pairs = pairs_1.pairs;\n//# sourceMappingURL=pairs.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar bufferCount_1 = require('../../operator/bufferCount');\nObservable_1.Observable.prototype.bufferCount = bufferCount_1.bufferCount;\n//# sourceMappingURL=bufferCount.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Scheduler_1 = require('../Scheduler');\nvar AsyncScheduler = (function (_super) {\n    __extends(AsyncScheduler, _super);\n    function AsyncScheduler() {\n        _super.apply(this, arguments);\n        this.actions = [];\n        /**\n         * A flag to indicate whether the Scheduler is currently executing a batch of\n         * queued actions.\n         * @type {boolean}\n         */\n        this.active = false;\n        /**\n         * An internal ID used to track the latest asynchronous task such as those\n         * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n         * others.\n         * @type {any}\n         */\n        this.scheduled = undefined;\n    }\n    AsyncScheduler.prototype.flush = function (action) {\n        var actions = this.actions;\n        if (this.active) {\n            actions.push(action);\n            return;\n        }\n        var error;\n        this.active = true;\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (action = actions.shift()); // exhaust the scheduler queue\n        this.active = false;\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AsyncScheduler;\n}(Scheduler_1.Scheduler));\nexports.AsyncScheduler = AsyncScheduler;\n//# sourceMappingURL=AsyncScheduler.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar fromEventPattern_1 = require('../../observable/fromEventPattern');\nObservable_1.Observable.fromEventPattern = fromEventPattern_1.fromEventPattern;\n//# sourceMappingURL=fromEventPattern.js.map","\"use strict\";\nvar ConnectableObservable_1 = require('../observable/ConnectableObservable');\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits the results of invoking a specified selector on items\n * emitted by a ConnectableObservable that shares a single subscription to the underlying stream.\n *\n * <img src=\"./img/multicast.png\" width=\"100%\">\n *\n * @param {Function|Subject} subjectOrSubjectFactory - Factory function to create an intermediate subject through\n * which the source sequence's elements will be multicast to the selector function\n * or Subject to push source elements into.\n * @param {Function} [selector] - Optional selector function that can use the multicasted source stream\n * as many times as needed, without causing multiple subscriptions to the source stream.\n * Subscribers to the given source will receive all notifications of the source from the\n * time of the subscription forward.\n * @return {Observable} An Observable that emits the results of invoking the selector\n * on the items emitted by a `ConnectableObservable` that shares a single subscription to\n * the underlying stream.\n * @method multicast\n * @owner Observable\n */\nfunction multicast(subjectOrSubjectFactory, selector) {\n    return function multicastOperatorFunction(source) {\n        var subjectFactory;\n        if (typeof subjectOrSubjectFactory === 'function') {\n            subjectFactory = subjectOrSubjectFactory;\n        }\n        else {\n            subjectFactory = function subjectFactory() {\n                return subjectOrSubjectFactory;\n            };\n        }\n        if (typeof selector === 'function') {\n            return source.lift(new MulticastOperator(subjectFactory, selector));\n        }\n        var connectable = Object.create(source, ConnectableObservable_1.connectableObservableDescriptor);\n        connectable.source = source;\n        connectable.subjectFactory = subjectFactory;\n        return connectable;\n    };\n}\nexports.multicast = multicast;\nvar MulticastOperator = (function () {\n    function MulticastOperator(subjectFactory, selector) {\n        this.subjectFactory = subjectFactory;\n        this.selector = selector;\n    }\n    MulticastOperator.prototype.call = function (subscriber, source) {\n        var selector = this.selector;\n        var subject = this.subjectFactory();\n        var subscription = selector(subject).subscribe(subscriber);\n        subscription.add(source.subscribe(subject));\n        return subscription;\n    };\n    return MulticastOperator;\n}());\nexports.MulticastOperator = MulticastOperator;\n//# sourceMappingURL=multicast.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar distinctUntilKeyChanged_1 = require('../../operator/distinctUntilKeyChanged');\nObservable_1.Observable.prototype.distinctUntilKeyChanged = distinctUntilKeyChanged_1.distinctUntilKeyChanged;\n//# sourceMappingURL=distinctUntilKeyChanged.js.map","\"use strict\";\nvar zipAll_1 = require('../operators/zipAll');\n/**\n * @param project\n * @return {Observable<R>|WebSocketSubject<T>|Observable<T>}\n * @method zipAll\n * @owner Observable\n */\nfunction zipAll(project) {\n    return zipAll_1.zipAll(project)(this);\n}\nexports.zipAll = zipAll;\n//# sourceMappingURL=zipAll.js.map","import { wrap } from './common';\nexport function cordova(pluginObj, methodName, config, args) {\n    return wrap(pluginObj, methodName, config).apply(this, args);\n}\n//# sourceMappingURL=cordova.js.map","\"use strict\";\nfunction isFunction(x) {\n    return typeof x === 'function';\n}\nexports.isFunction = isFunction;\n//# sourceMappingURL=isFunction.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar timeoutWith_1 = require('../../operator/timeoutWith');\nObservable_1.Observable.prototype.timeoutWith = timeoutWith_1.timeoutWith;\n//# sourceMappingURL=timeoutWith.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AsyncAction_1 = require('./AsyncAction');\nvar AsyncScheduler_1 = require('./AsyncScheduler');\nvar VirtualTimeScheduler = (function (_super) {\n    __extends(VirtualTimeScheduler, _super);\n    function VirtualTimeScheduler(SchedulerAction, maxFrames) {\n        var _this = this;\n        if (SchedulerAction === void 0) { SchedulerAction = VirtualAction; }\n        if (maxFrames === void 0) { maxFrames = Number.POSITIVE_INFINITY; }\n        _super.call(this, SchedulerAction, function () { return _this.frame; });\n        this.maxFrames = maxFrames;\n        this.frame = 0;\n        this.index = -1;\n    }\n    /**\n     * Prompt the Scheduler to execute all of its queued actions, therefore\n     * clearing its queue.\n     * @return {void}\n     */\n    VirtualTimeScheduler.prototype.flush = function () {\n        var _a = this, actions = _a.actions, maxFrames = _a.maxFrames;\n        var error, action;\n        while ((action = actions.shift()) && (this.frame = action.delay) <= maxFrames) {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        }\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    VirtualTimeScheduler.frameTimeFactor = 10;\n    return VirtualTimeScheduler;\n}(AsyncScheduler_1.AsyncScheduler));\nexports.VirtualTimeScheduler = VirtualTimeScheduler;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar VirtualAction = (function (_super) {\n    __extends(VirtualAction, _super);\n    function VirtualAction(scheduler, work, index) {\n        if (index === void 0) { index = scheduler.index += 1; }\n        _super.call(this, scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n        this.index = index;\n        this.active = true;\n        this.index = scheduler.index = index;\n    }\n    VirtualAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        if (!this.id) {\n            return _super.prototype.schedule.call(this, state, delay);\n        }\n        this.active = false;\n        // If an action is rescheduled, we save allocations by mutating its state,\n        // pushing it to the end of the scheduler queue, and recycling the action.\n        // But since the VirtualTimeScheduler is used for testing, VirtualActions\n        // must be immutable so they can be inspected later.\n        var action = new VirtualAction(this.scheduler, this.work);\n        this.add(action);\n        return action.schedule(state, delay);\n    };\n    VirtualAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        this.delay = scheduler.frame + delay;\n        var actions = scheduler.actions;\n        actions.push(this);\n        actions.sort(VirtualAction.sortActions);\n        return true;\n    };\n    VirtualAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        return undefined;\n    };\n    VirtualAction.prototype._execute = function (state, delay) {\n        if (this.active === true) {\n            return _super.prototype._execute.call(this, state, delay);\n        }\n    };\n    VirtualAction.sortActions = function (a, b) {\n        if (a.delay === b.delay) {\n            if (a.index === b.index) {\n                return 0;\n            }\n            else if (a.index > b.index) {\n                return 1;\n            }\n            else {\n                return -1;\n            }\n        }\n        else if (a.delay > b.delay) {\n            return 1;\n        }\n        else {\n            return -1;\n        }\n    };\n    return VirtualAction;\n}(AsyncAction_1.AsyncAction));\nexports.VirtualAction = VirtualAction;\n//# sourceMappingURL=VirtualTimeScheduler.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = require('../Subject');\nvar tryCatch_1 = require('../util/tryCatch');\nvar errorObject_1 = require('../util/errorObject');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will emit the Throwable that caused the error to the Observable returned from `notifier`.\n * If that Observable calls `complete` or `error` then this method will call `complete` or `error` on the child\n * subscription. Otherwise this method will resubscribe to the source Observable.\n *\n * <img src=\"./img/retryWhen.png\" width=\"100%\">\n *\n * @param {function(errors: Observable): Observable} notifier - Receives an Observable of notifications with which a\n * user can `complete` or `error`, aborting the retry.\n * @return {Observable} The source Observable modified with retry logic.\n * @method retryWhen\n * @owner Observable\n */\nfunction retryWhen(notifier) {\n    return function (source) { return source.lift(new RetryWhenOperator(notifier, source)); };\n}\nexports.retryWhen = retryWhen;\nvar RetryWhenOperator = (function () {\n    function RetryWhenOperator(notifier, source) {\n        this.notifier = notifier;\n        this.source = source;\n    }\n    RetryWhenOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new RetryWhenSubscriber(subscriber, this.notifier, this.source));\n    };\n    return RetryWhenOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar RetryWhenSubscriber = (function (_super) {\n    __extends(RetryWhenSubscriber, _super);\n    function RetryWhenSubscriber(destination, notifier, source) {\n        _super.call(this, destination);\n        this.notifier = notifier;\n        this.source = source;\n    }\n    RetryWhenSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var errors = this.errors;\n            var retries = this.retries;\n            var retriesSubscription = this.retriesSubscription;\n            if (!retries) {\n                errors = new Subject_1.Subject();\n                retries = tryCatch_1.tryCatch(this.notifier)(errors);\n                if (retries === errorObject_1.errorObject) {\n                    return _super.prototype.error.call(this, errorObject_1.errorObject.e);\n                }\n                retriesSubscription = subscribeToResult_1.subscribeToResult(this, retries);\n            }\n            else {\n                this.errors = null;\n                this.retriesSubscription = null;\n            }\n            this._unsubscribeAndRecycle();\n            this.errors = errors;\n            this.retries = retries;\n            this.retriesSubscription = retriesSubscription;\n            errors.next(err);\n        }\n    };\n    /** @deprecated internal use only */ RetryWhenSubscriber.prototype._unsubscribe = function () {\n        var _a = this, errors = _a.errors, retriesSubscription = _a.retriesSubscription;\n        if (errors) {\n            errors.unsubscribe();\n            this.errors = null;\n        }\n        if (retriesSubscription) {\n            retriesSubscription.unsubscribe();\n            this.retriesSubscription = null;\n        }\n        this.retries = null;\n    };\n    RetryWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var _a = this, errors = _a.errors, retries = _a.retries, retriesSubscription = _a.retriesSubscription;\n        this.errors = null;\n        this.retries = null;\n        this.retriesSubscription = null;\n        this._unsubscribeAndRecycle();\n        this.errors = errors;\n        this.retries = retries;\n        this.retriesSubscription = retriesSubscription;\n        this.source.subscribe(this);\n    };\n    return RetryWhenSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=retryWhen.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar async_1 = require('../scheduler/async');\nvar Subscriber_1 = require('../Subscriber');\nvar isScheduler_1 = require('../util/isScheduler');\n/* tslint:enable:max-line-length */\n/**\n * Buffers the source Observable values for a specific time period.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * those arrays periodically in time.</span>\n *\n * <img src=\"./img/bufferTime.png\" width=\"100%\">\n *\n * Buffers values from the source for a specific time duration `bufferTimeSpan`.\n * Unless the optional argument `bufferCreationInterval` is given, it emits and\n * resets the buffer every `bufferTimeSpan` milliseconds. If\n * `bufferCreationInterval` is given, this operator opens the buffer every\n * `bufferCreationInterval` milliseconds and closes (emits and resets) the\n * buffer every `bufferTimeSpan` milliseconds. When the optional argument\n * `maxBufferSize` is specified, the buffer will be closed either after\n * `bufferTimeSpan` milliseconds or when it contains `maxBufferSize` elements.\n *\n * @example <caption>Every second, emit an array of the recent click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferTime(1000);\n * buffered.subscribe(x => console.log(x));\n *\n * @example <caption>Every 5 seconds, emit the click events from the next 2 seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferTime(2000, 5000);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link windowTime}\n *\n * @param {number} bufferTimeSpan The amount of time to fill each buffer array.\n * @param {number} [bufferCreationInterval] The interval at which to start new\n * buffers.\n * @param {number} [maxBufferSize] The maximum buffer size.\n * @param {Scheduler} [scheduler=async] The scheduler on which to schedule the\n * intervals that determine buffer boundaries.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferTime\n * @owner Observable\n */\nfunction bufferTime(bufferTimeSpan) {\n    var length = arguments.length;\n    var scheduler = async_1.async;\n    if (isScheduler_1.isScheduler(arguments[arguments.length - 1])) {\n        scheduler = arguments[arguments.length - 1];\n        length--;\n    }\n    var bufferCreationInterval = null;\n    if (length >= 2) {\n        bufferCreationInterval = arguments[1];\n    }\n    var maxBufferSize = Number.POSITIVE_INFINITY;\n    if (length >= 3) {\n        maxBufferSize = arguments[2];\n    }\n    return function bufferTimeOperatorFunction(source) {\n        return source.lift(new BufferTimeOperator(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler));\n    };\n}\nexports.bufferTime = bufferTime;\nvar BufferTimeOperator = (function () {\n    function BufferTimeOperator(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler) {\n        this.bufferTimeSpan = bufferTimeSpan;\n        this.bufferCreationInterval = bufferCreationInterval;\n        this.maxBufferSize = maxBufferSize;\n        this.scheduler = scheduler;\n    }\n    BufferTimeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new BufferTimeSubscriber(subscriber, this.bufferTimeSpan, this.bufferCreationInterval, this.maxBufferSize, this.scheduler));\n    };\n    return BufferTimeOperator;\n}());\nvar Context = (function () {\n    function Context() {\n        this.buffer = [];\n    }\n    return Context;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar BufferTimeSubscriber = (function (_super) {\n    __extends(BufferTimeSubscriber, _super);\n    function BufferTimeSubscriber(destination, bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler) {\n        _super.call(this, destination);\n        this.bufferTimeSpan = bufferTimeSpan;\n        this.bufferCreationInterval = bufferCreationInterval;\n        this.maxBufferSize = maxBufferSize;\n        this.scheduler = scheduler;\n        this.contexts = [];\n        var context = this.openContext();\n        this.timespanOnly = bufferCreationInterval == null || bufferCreationInterval < 0;\n        if (this.timespanOnly) {\n            var timeSpanOnlyState = { subscriber: this, context: context, bufferTimeSpan: bufferTimeSpan };\n            this.add(context.closeAction = scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\n        }\n        else {\n            var closeState = { subscriber: this, context: context };\n            var creationState = { bufferTimeSpan: bufferTimeSpan, bufferCreationInterval: bufferCreationInterval, subscriber: this, scheduler: scheduler };\n            this.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, closeState));\n            this.add(scheduler.schedule(dispatchBufferCreation, bufferCreationInterval, creationState));\n        }\n    }\n    BufferTimeSubscriber.prototype._next = function (value) {\n        var contexts = this.contexts;\n        var len = contexts.length;\n        var filledBufferContext;\n        for (var i = 0; i < len; i++) {\n            var context = contexts[i];\n            var buffer = context.buffer;\n            buffer.push(value);\n            if (buffer.length == this.maxBufferSize) {\n                filledBufferContext = context;\n            }\n        }\n        if (filledBufferContext) {\n            this.onBufferFull(filledBufferContext);\n        }\n    };\n    BufferTimeSubscriber.prototype._error = function (err) {\n        this.contexts.length = 0;\n        _super.prototype._error.call(this, err);\n    };\n    BufferTimeSubscriber.prototype._complete = function () {\n        var _a = this, contexts = _a.contexts, destination = _a.destination;\n        while (contexts.length > 0) {\n            var context = contexts.shift();\n            destination.next(context.buffer);\n        }\n        _super.prototype._complete.call(this);\n    };\n    /** @deprecated internal use only */ BufferTimeSubscriber.prototype._unsubscribe = function () {\n        this.contexts = null;\n    };\n    BufferTimeSubscriber.prototype.onBufferFull = function (context) {\n        this.closeContext(context);\n        var closeAction = context.closeAction;\n        closeAction.unsubscribe();\n        this.remove(closeAction);\n        if (!this.closed && this.timespanOnly) {\n            context = this.openContext();\n            var bufferTimeSpan = this.bufferTimeSpan;\n            var timeSpanOnlyState = { subscriber: this, context: context, bufferTimeSpan: bufferTimeSpan };\n            this.add(context.closeAction = this.scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\n        }\n    };\n    BufferTimeSubscriber.prototype.openContext = function () {\n        var context = new Context();\n        this.contexts.push(context);\n        return context;\n    };\n    BufferTimeSubscriber.prototype.closeContext = function (context) {\n        this.destination.next(context.buffer);\n        var contexts = this.contexts;\n        var spliceIndex = contexts ? contexts.indexOf(context) : -1;\n        if (spliceIndex >= 0) {\n            contexts.splice(contexts.indexOf(context), 1);\n        }\n    };\n    return BufferTimeSubscriber;\n}(Subscriber_1.Subscriber));\nfunction dispatchBufferTimeSpanOnly(state) {\n    var subscriber = state.subscriber;\n    var prevContext = state.context;\n    if (prevContext) {\n        subscriber.closeContext(prevContext);\n    }\n    if (!subscriber.closed) {\n        state.context = subscriber.openContext();\n        state.context.closeAction = this.schedule(state, state.bufferTimeSpan);\n    }\n}\nfunction dispatchBufferCreation(state) {\n    var bufferCreationInterval = state.bufferCreationInterval, bufferTimeSpan = state.bufferTimeSpan, subscriber = state.subscriber, scheduler = state.scheduler;\n    var context = subscriber.openContext();\n    var action = this;\n    if (!subscriber.closed) {\n        subscriber.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, { subscriber: subscriber, context: context }));\n        action.schedule(state, bufferCreationInterval);\n    }\n}\nfunction dispatchBufferClose(arg) {\n    var subscriber = arg.subscriber, context = arg.context;\n    subscriber.closeContext(context);\n}\n//# sourceMappingURL=bufferTime.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar combineAll_1 = require('../../operator/combineAll');\nObservable_1.Observable.prototype.combineAll = combineAll_1.combineAll;\n//# sourceMappingURL=combineAll.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar RangeObservable = (function (_super) {\n    __extends(RangeObservable, _super);\n    function RangeObservable(start, count, scheduler) {\n        _super.call(this);\n        this.start = start;\n        this._count = count;\n        this.scheduler = scheduler;\n    }\n    /**\n     * Creates an Observable that emits a sequence of numbers within a specified\n     * range.\n     *\n     * <span class=\"informal\">Emits a sequence of numbers in a range.</span>\n     *\n     * <img src=\"./img/range.png\" width=\"100%\">\n     *\n     * `range` operator emits a range of sequential integers, in order, where you\n     * select the `start` of the range and its `length`. By default, uses no\n     * IScheduler and just delivers the notifications synchronously, but may use\n     * an optional IScheduler to regulate those deliveries.\n     *\n     * @example <caption>Emits the numbers 1 to 10</caption>\n     * var numbers = Rx.Observable.range(1, 10);\n     * numbers.subscribe(x => console.log(x));\n     *\n     * @see {@link timer}\n     * @see {@link interval}\n     *\n     * @param {number} [start=0] The value of the first integer in the sequence.\n     * @param {number} [count=0] The number of sequential integers to generate.\n     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n     * the emissions of the notifications.\n     * @return {Observable} An Observable of numbers that emits a finite range of\n     * sequential integers.\n     * @static true\n     * @name range\n     * @owner Observable\n     */\n    RangeObservable.create = function (start, count, scheduler) {\n        if (start === void 0) { start = 0; }\n        if (count === void 0) { count = 0; }\n        return new RangeObservable(start, count, scheduler);\n    };\n    RangeObservable.dispatch = function (state) {\n        var start = state.start, index = state.index, count = state.count, subscriber = state.subscriber;\n        if (index >= count) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(start);\n        if (subscriber.closed) {\n            return;\n        }\n        state.index = index + 1;\n        state.start = start + 1;\n        this.schedule(state);\n    };\n    /** @deprecated internal use only */ RangeObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var start = this.start;\n        var count = this._count;\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(RangeObservable.dispatch, 0, {\n                index: index, count: count, start: start, subscriber: subscriber\n            });\n        }\n        else {\n            do {\n                if (index++ >= count) {\n                    subscriber.complete();\n                    break;\n                }\n                subscriber.next(start++);\n                if (subscriber.closed) {\n                    break;\n                }\n            } while (true);\n        }\n    };\n    return RangeObservable;\n}(Observable_1.Observable));\nexports.RangeObservable = RangeObservable;\n//# sourceMappingURL=RangeObservable.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar delay_1 = require('../../operator/delay');\nObservable_1.Observable.prototype.delay = delay_1.delay;\n//# sourceMappingURL=delay.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\nvar tryCatch_1 = require('../util/tryCatch');\nvar isFunction_1 = require('../util/isFunction');\nvar errorObject_1 = require('../util/errorObject');\nvar Subscription_1 = require('../Subscription');\nvar toString = Object.prototype.toString;\nfunction isNodeStyleEventEmitter(sourceObj) {\n    return !!sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';\n}\nfunction isJQueryStyleEventEmitter(sourceObj) {\n    return !!sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';\n}\nfunction isNodeList(sourceObj) {\n    return !!sourceObj && toString.call(sourceObj) === '[object NodeList]';\n}\nfunction isHTMLCollection(sourceObj) {\n    return !!sourceObj && toString.call(sourceObj) === '[object HTMLCollection]';\n}\nfunction isEventTarget(sourceObj) {\n    return !!sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar FromEventObservable = (function (_super) {\n    __extends(FromEventObservable, _super);\n    function FromEventObservable(sourceObj, eventName, selector, options) {\n        _super.call(this);\n        this.sourceObj = sourceObj;\n        this.eventName = eventName;\n        this.selector = selector;\n        this.options = options;\n    }\n    /* tslint:enable:max-line-length */\n    /**\n     * Creates an Observable that emits events of a specific type coming from the\n     * given event target.\n     *\n     * <span class=\"informal\">Creates an Observable from DOM events, or Node.js\n     * EventEmitter events or others.</span>\n     *\n     * <img src=\"./img/fromEvent.png\" width=\"100%\">\n     *\n     * `fromEvent` accepts as a first argument event target, which is an object with methods\n     * for registering event handler functions. As a second argument it takes string that indicates\n     * type of event we want to listen for. `fromEvent` supports selected types of event targets,\n     * which are described in detail below. If your event target does not match any of the ones listed,\n     * you should use {@link fromEventPattern}, which can be used on arbitrary APIs.\n     * When it comes to APIs supported by `fromEvent`, their methods for adding and removing event\n     * handler functions have different names, but they all accept a string describing event type\n     * and function itself, which will be called whenever said event happens.\n     *\n     * Every time resulting Observable is subscribed, event handler function will be registered\n     * to event target on given event type. When that event fires, value\n     * passed as a first argument to registered function will be emitted by output Observable.\n     * When Observable is unsubscribed, function will be unregistered from event target.\n     *\n     * Note that if event target calls registered function with more than one argument, second\n     * and following arguments will not appear in resulting stream. In order to get access to them,\n     * you can pass to `fromEvent` optional project function, which will be called with all arguments\n     * passed to event handler. Output Observable will then emit value returned by project function,\n     * instead of the usual value.\n     *\n     * Remember that event targets listed below are checked via duck typing. It means that\n     * no matter what kind of object you have and no matter what environment you work in,\n     * you can safely use `fromEvent` on that object if it exposes described methods (provided\n     * of course they behave as was described above). So for example if Node.js library exposes\n     * event target which has the same method names as DOM EventTarget, `fromEvent` is still\n     * a good choice.\n     *\n     * If the API you use is more callback then event handler oriented (subscribed\n     * callback function fires only once and thus there is no need to manually\n     * unregister it), you should use {@link bindCallback} or {@link bindNodeCallback}\n     * instead.\n     *\n     * `fromEvent` supports following types of event targets:\n     *\n     * **DOM EventTarget**\n     *\n     * This is an object with `addEventListener` and `removeEventListener` methods.\n     *\n     * In the browser, `addEventListener` accepts - apart from event type string and event\n     * handler function arguments - optional third parameter, which is either an object or boolean,\n     * both used for additional configuration how and when passed function will be called. When\n     * `fromEvent` is used with event target of that type, you can provide this values\n     * as third parameter as well.\n     *\n     * **Node.js EventEmitter**\n     *\n     * An object with `addListener` and `removeListener` methods.\n     *\n     * **JQuery-style event target**\n     *\n     * An object with `on` and `off` methods\n     *\n     * **DOM NodeList**\n     *\n     * List of DOM Nodes, returned for example by `document.querySelectorAll` or `Node.childNodes`.\n     *\n     * Although this collection is not event target in itself, `fromEvent` will iterate over all Nodes\n     * it contains and install event handler function in every of them. When returned Observable\n     * is unsubscribed, function will be removed from all Nodes.\n     *\n     * **DOM HtmlCollection**\n     *\n     * Just as in case of NodeList it is a collection of DOM nodes. Here as well event handler function is\n     * installed and removed in each of elements.\n     *\n     *\n     * @example <caption>Emits clicks happening on the DOM document</caption>\n     * var clicks = Rx.Observable.fromEvent(document, 'click');\n     * clicks.subscribe(x => console.log(x));\n     *\n     * // Results in:\n     * // MouseEvent object logged to console every time a click\n     * // occurs on the document.\n     *\n     *\n     * @example <caption>Use addEventListener with capture option</caption>\n     * var clicksInDocument = Rx.Observable.fromEvent(document, 'click', true); // note optional configuration parameter\n     *                                                                          // which will be passed to addEventListener\n     * var clicksInDiv = Rx.Observable.fromEvent(someDivInDocument, 'click');\n     *\n     * clicksInDocument.subscribe(() => console.log('document'));\n     * clicksInDiv.subscribe(() => console.log('div'));\n     *\n     * // By default events bubble UP in DOM tree, so normally\n     * // when we would click on div in document\n     * // \"div\" would be logged first and then \"document\".\n     * // Since we specified optional `capture` option, document\n     * // will catch event when it goes DOWN DOM tree, so console\n     * // will log \"document\" and then \"div\".\n     *\n     * @see {@link bindCallback}\n     * @see {@link bindNodeCallback}\n     * @see {@link fromEventPattern}\n     *\n     * @param {EventTargetLike} target The DOM EventTarget, Node.js\n     * EventEmitter, JQuery-like event target, NodeList or HTMLCollection to attach the event handler to.\n     * @param {string} eventName The event name of interest, being emitted by the\n     * `target`.\n     * @param {EventListenerOptions} [options] Options to pass through to addEventListener\n     * @param {SelectorMethodSignature<T>} [selector] An optional function to\n     * post-process results. It takes the arguments from the event handler and\n     * should return a single value.\n     * @return {Observable<T>}\n     * @static true\n     * @name fromEvent\n     * @owner Observable\n     */\n    FromEventObservable.create = function (target, eventName, options, selector) {\n        if (isFunction_1.isFunction(options)) {\n            selector = options;\n            options = undefined;\n        }\n        return new FromEventObservable(target, eventName, selector, options);\n    };\n    FromEventObservable.setupSubscription = function (sourceObj, eventName, handler, subscriber, options) {\n        var unsubscribe;\n        if (isNodeList(sourceObj) || isHTMLCollection(sourceObj)) {\n            for (var i = 0, len = sourceObj.length; i < len; i++) {\n                FromEventObservable.setupSubscription(sourceObj[i], eventName, handler, subscriber, options);\n            }\n        }\n        else if (isEventTarget(sourceObj)) {\n            var source_1 = sourceObj;\n            sourceObj.addEventListener(eventName, handler, options);\n            unsubscribe = function () { return source_1.removeEventListener(eventName, handler, options); };\n        }\n        else if (isJQueryStyleEventEmitter(sourceObj)) {\n            var source_2 = sourceObj;\n            sourceObj.on(eventName, handler);\n            unsubscribe = function () { return source_2.off(eventName, handler); };\n        }\n        else if (isNodeStyleEventEmitter(sourceObj)) {\n            var source_3 = sourceObj;\n            sourceObj.addListener(eventName, handler);\n            unsubscribe = function () { return source_3.removeListener(eventName, handler); };\n        }\n        else {\n            throw new TypeError('Invalid event target');\n        }\n        subscriber.add(new Subscription_1.Subscription(unsubscribe));\n    };\n    /** @deprecated internal use only */ FromEventObservable.prototype._subscribe = function (subscriber) {\n        var sourceObj = this.sourceObj;\n        var eventName = this.eventName;\n        var options = this.options;\n        var selector = this.selector;\n        var handler = selector ? function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i - 0] = arguments[_i];\n            }\n            var result = tryCatch_1.tryCatch(selector).apply(void 0, args);\n            if (result === errorObject_1.errorObject) {\n                subscriber.error(errorObject_1.errorObject.e);\n            }\n            else {\n                subscriber.next(result);\n            }\n        } : function (e) { return subscriber.next(e); };\n        FromEventObservable.setupSubscription(sourceObj, eventName, handler, subscriber, options);\n    };\n    return FromEventObservable;\n}(Observable_1.Observable));\nexports.FromEventObservable = FromEventObservable;\n//# sourceMappingURL=FromEventObservable.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar shareReplay_1 = require('../../operator/shareReplay');\nObservable_1.Observable.prototype.shareReplay = shareReplay_1.shareReplay;\n//# sourceMappingURL=shareReplay.js.map","var has = require('../internals/has');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar indexOf = require('../internals/array-includes').indexOf;\nvar hiddenKeys = require('../internals/hidden-keys');\n\nmodule.exports = function (object, names) {\n  var O = toIndexedObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) !has(hiddenKeys, key) && has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~indexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = require('../../Subject');\nvar Subscriber_1 = require('../../Subscriber');\nvar Observable_1 = require('../../Observable');\nvar Subscription_1 = require('../../Subscription');\nvar root_1 = require('../../util/root');\nvar ReplaySubject_1 = require('../../ReplaySubject');\nvar tryCatch_1 = require('../../util/tryCatch');\nvar errorObject_1 = require('../../util/errorObject');\nvar assign_1 = require('../../util/assign');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar WebSocketSubject = (function (_super) {\n    __extends(WebSocketSubject, _super);\n    function WebSocketSubject(urlConfigOrSource, destination) {\n        if (urlConfigOrSource instanceof Observable_1.Observable) {\n            _super.call(this, destination, urlConfigOrSource);\n        }\n        else {\n            _super.call(this);\n            this.WebSocketCtor = root_1.root.WebSocket;\n            this._output = new Subject_1.Subject();\n            if (typeof urlConfigOrSource === 'string') {\n                this.url = urlConfigOrSource;\n            }\n            else {\n                // WARNING: config object could override important members here.\n                assign_1.assign(this, urlConfigOrSource);\n            }\n            if (!this.WebSocketCtor) {\n                throw new Error('no WebSocket constructor can be found');\n            }\n            this.destination = new ReplaySubject_1.ReplaySubject();\n        }\n    }\n    WebSocketSubject.prototype.resultSelector = function (e) {\n        return JSON.parse(e.data);\n    };\n    /**\n     * Wrapper around the w3c-compatible WebSocket object provided by the browser.\n     *\n     * @example <caption>Wraps browser WebSocket</caption>\n     *\n     * let socket$ = Observable.webSocket('ws://localhost:8081');\n     *\n     * socket$.subscribe(\n     *    (msg) => console.log('message received: ' + msg),\n     *    (err) => console.log(err),\n     *    () => console.log('complete')\n     *  );\n     *\n     * socket$.next(JSON.stringify({ op: 'hello' }));\n     *\n     * @example <caption>Wraps WebSocket from nodejs-websocket (using node.js)</caption>\n     *\n     * import { w3cwebsocket } from 'websocket';\n     *\n     * let socket$ = Observable.webSocket({\n     *   url: 'ws://localhost:8081',\n     *   WebSocketCtor: w3cwebsocket\n     * });\n     *\n     * socket$.subscribe(\n     *    (msg) => console.log('message received: ' + msg),\n     *    (err) => console.log(err),\n     *    () => console.log('complete')\n     *  );\n     *\n     * socket$.next(JSON.stringify({ op: 'hello' }));\n     *\n     * @param {string | WebSocketSubjectConfig} urlConfigOrSource the source of the websocket as an url or a structure defining the websocket object\n     * @return {WebSocketSubject}\n     * @static true\n     * @name webSocket\n     * @owner Observable\n     */\n    WebSocketSubject.create = function (urlConfigOrSource) {\n        return new WebSocketSubject(urlConfigOrSource);\n    };\n    WebSocketSubject.prototype.lift = function (operator) {\n        var sock = new WebSocketSubject(this, this.destination);\n        sock.operator = operator;\n        return sock;\n    };\n    WebSocketSubject.prototype._resetState = function () {\n        this.socket = null;\n        if (!this.source) {\n            this.destination = new ReplaySubject_1.ReplaySubject();\n        }\n        this._output = new Subject_1.Subject();\n    };\n    // TODO: factor this out to be a proper Operator/Subscriber implementation and eliminate closures\n    WebSocketSubject.prototype.multiplex = function (subMsg, unsubMsg, messageFilter) {\n        var self = this;\n        return new Observable_1.Observable(function (observer) {\n            var result = tryCatch_1.tryCatch(subMsg)();\n            if (result === errorObject_1.errorObject) {\n                observer.error(errorObject_1.errorObject.e);\n            }\n            else {\n                self.next(result);\n            }\n            var subscription = self.subscribe(function (x) {\n                var result = tryCatch_1.tryCatch(messageFilter)(x);\n                if (result === errorObject_1.errorObject) {\n                    observer.error(errorObject_1.errorObject.e);\n                }\n                else if (result) {\n                    observer.next(x);\n                }\n            }, function (err) { return observer.error(err); }, function () { return observer.complete(); });\n            return function () {\n                var result = tryCatch_1.tryCatch(unsubMsg)();\n                if (result === errorObject_1.errorObject) {\n                    observer.error(errorObject_1.errorObject.e);\n                }\n                else {\n                    self.next(result);\n                }\n                subscription.unsubscribe();\n            };\n        });\n    };\n    WebSocketSubject.prototype._connectSocket = function () {\n        var _this = this;\n        var WebSocketCtor = this.WebSocketCtor;\n        var observer = this._output;\n        var socket = null;\n        try {\n            socket = this.protocol ?\n                new WebSocketCtor(this.url, this.protocol) :\n                new WebSocketCtor(this.url);\n            this.socket = socket;\n            if (this.binaryType) {\n                this.socket.binaryType = this.binaryType;\n            }\n        }\n        catch (e) {\n            observer.error(e);\n            return;\n        }\n        var subscription = new Subscription_1.Subscription(function () {\n            _this.socket = null;\n            if (socket && socket.readyState === 1) {\n                socket.close();\n            }\n        });\n        socket.onopen = function (e) {\n            var openObserver = _this.openObserver;\n            if (openObserver) {\n                openObserver.next(e);\n            }\n            var queue = _this.destination;\n            _this.destination = Subscriber_1.Subscriber.create(function (x) { return socket.readyState === 1 && socket.send(x); }, function (e) {\n                var closingObserver = _this.closingObserver;\n                if (closingObserver) {\n                    closingObserver.next(undefined);\n                }\n                if (e && e.code) {\n                    socket.close(e.code, e.reason);\n                }\n                else {\n                    observer.error(new TypeError('WebSocketSubject.error must be called with an object with an error code, ' +\n                        'and an optional reason: { code: number, reason: string }'));\n                }\n                _this._resetState();\n            }, function () {\n                var closingObserver = _this.closingObserver;\n                if (closingObserver) {\n                    closingObserver.next(undefined);\n                }\n                socket.close();\n                _this._resetState();\n            });\n            if (queue && queue instanceof ReplaySubject_1.ReplaySubject) {\n                subscription.add(queue.subscribe(_this.destination));\n            }\n        };\n        socket.onerror = function (e) {\n            _this._resetState();\n            observer.error(e);\n        };\n        socket.onclose = function (e) {\n            _this._resetState();\n            var closeObserver = _this.closeObserver;\n            if (closeObserver) {\n                closeObserver.next(e);\n            }\n            if (e.wasClean) {\n                observer.complete();\n            }\n            else {\n                observer.error(e);\n            }\n        };\n        socket.onmessage = function (e) {\n            var result = tryCatch_1.tryCatch(_this.resultSelector)(e);\n            if (result === errorObject_1.errorObject) {\n                observer.error(errorObject_1.errorObject.e);\n            }\n            else {\n                observer.next(result);\n            }\n        };\n    };\n    /** @deprecated internal use only */ WebSocketSubject.prototype._subscribe = function (subscriber) {\n        var _this = this;\n        var source = this.source;\n        if (source) {\n            return source.subscribe(subscriber);\n        }\n        if (!this.socket) {\n            this._connectSocket();\n        }\n        var subscription = new Subscription_1.Subscription();\n        subscription.add(this._output.subscribe(subscriber));\n        subscription.add(function () {\n            var socket = _this.socket;\n            if (_this._output.observers.length === 0) {\n                if (socket && socket.readyState === 1) {\n                    socket.close();\n                }\n                _this._resetState();\n            }\n        });\n        return subscription;\n    };\n    WebSocketSubject.prototype.unsubscribe = function () {\n        var _a = this, source = _a.source, socket = _a.socket;\n        if (socket && socket.readyState === 1) {\n            socket.close();\n            this._resetState();\n        }\n        _super.prototype.unsubscribe.call(this);\n        if (!source) {\n            this.destination = new ReplaySubject_1.ReplaySubject();\n        }\n    };\n    return WebSocketSubject;\n}(Subject_1.AnonymousSubject));\nexports.WebSocketSubject = WebSocketSubject;\n//# sourceMappingURL=WebSocketSubject.js.map","'use strict';\nvar $ = require('../internals/export');\nvar $includes = require('../internals/array-includes').includes;\nvar addToUnscopables = require('../internals/add-to-unscopables');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar USES_TO_LENGTH = arrayMethodUsesToLength('indexOf', { ACCESSORS: true, 1: 0 });\n\n// `Array.prototype.includes` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.includes\n$({ target: 'Array', proto: true, forced: !USES_TO_LENGTH }, {\n  includes: function includes(el /* , fromIndex = 0 */) {\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('includes');\n","\"use strict\";\nvar BehaviorSubject_1 = require('../BehaviorSubject');\nvar multicast_1 = require('./multicast');\n/**\n * @param value\n * @return {ConnectableObservable<T>}\n * @method publishBehavior\n * @owner Observable\n */\nfunction publishBehavior(value) {\n    return function (source) { return multicast_1.multicast(new BehaviorSubject_1.BehaviorSubject(value))(source); };\n}\nexports.publishBehavior = publishBehavior;\n//# sourceMappingURL=publishBehavior.js.map","\"use strict\";\nvar reduce_1 = require('./reduce');\n/**\n * The Min operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\n * and when source Observable completes it emits a single item: the item with the smallest value.\n *\n * <img src=\"./img/min.png\" width=\"100%\">\n *\n * @example <caption>Get the minimal value of a series of numbers</caption>\n * Rx.Observable.of(5, 4, 7, 2, 8)\n *   .min()\n *   .subscribe(x => console.log(x)); // -> 2\n *\n * @example <caption>Use a comparer function to get the minimal item</caption>\n * interface Person {\n *   age: number,\n *   name: string\n * }\n * Observable.of<Person>({age: 7, name: 'Foo'},\n *                       {age: 5, name: 'Bar'},\n *                       {age: 9, name: 'Beer'})\n *           .min<Person>( (a: Person, b: Person) => a.age < b.age ? -1 : 1)\n *           .subscribe((x: Person) => console.log(x.name)); // -> 'Bar'\n * }\n *\n * @see {@link max}\n *\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\n * value of two items.\n * @return {Observable<R>} An Observable that emits item with the smallest value.\n * @method min\n * @owner Observable\n */\nfunction min(comparer) {\n    var min = (typeof comparer === 'function')\n        ? function (x, y) { return comparer(x, y) < 0 ? x : y; }\n        : function (x, y) { return x < y ? x : y; };\n    return reduce_1.reduce(min);\n}\nexports.min = min;\n//# sourceMappingURL=min.js.map","\"use strict\";\nvar mergeMapTo_1 = require('../operators/mergeMapTo');\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in the output Observable.\n *\n * <span class=\"informal\">It's like {@link mergeMap}, but maps each value always\n * to the same inner Observable.</span>\n *\n * <img src=\"./img/mergeMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then merges those resulting Observables into one\n * single Observable, which is the output Observable.\n *\n * @example <caption>For each click event, start an interval Observable ticking every 1 second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.mergeMapTo(Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMapTo}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable` (and optionally transformed through `resultSelector`) every\n * time a value is emitted on the source Observable.\n * @method mergeMapTo\n * @owner Observable\n */\nfunction mergeMapTo(innerObservable, resultSelector, concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    return mergeMapTo_1.mergeMapTo(innerObservable, resultSelector, concurrent)(this);\n}\nexports.mergeMapTo = mergeMapTo;\n//# sourceMappingURL=mergeMapTo.js.map","\"use strict\";\nvar async_1 = require('../scheduler/async');\nvar audit_1 = require('./audit');\nvar timer_1 = require('../observable/timer');\n/**\n * Ignores source values for `duration` milliseconds, then emits the most recent\n * value from the source Observable, then repeats this process.\n *\n * <span class=\"informal\">When it sees a source values, it ignores that plus\n * the next ones for `duration` milliseconds, and then it emits the most recent\n * value from the source.</span>\n *\n * <img src=\"./img/auditTime.png\" width=\"100%\">\n *\n * `auditTime` is similar to `throttleTime`, but emits the last value from the\n * silenced time window, instead of the first value. `auditTime` emits the most\n * recent value from the source Observable on the output Observable as soon as\n * its internal timer becomes disabled, and ignores source values while the\n * timer is enabled. Initially, the timer is disabled. As soon as the first\n * source value arrives, the timer is enabled. After `duration` milliseconds (or\n * the time unit determined internally by the optional `scheduler`) has passed,\n * the timer is disabled, then the most recent source value is emitted on the\n * output Observable, and this process repeats for the next source value.\n * Optionally takes a {@link IScheduler} for managing timers.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.auditTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} duration Time to wait before emitting the most recent source\n * value, measured in milliseconds or the time unit determined internally\n * by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the rate-limiting behavior.\n * @return {Observable<T>} An Observable that performs rate-limiting of\n * emissions from the source Observable.\n * @method auditTime\n * @owner Observable\n */\nfunction auditTime(duration, scheduler) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    return audit_1.audit(function () { return timer_1.timer(duration, scheduler); });\n}\nexports.auditTime = auditTime;\n//# sourceMappingURL=auditTime.js.map","\"use strict\";\nvar onErrorResumeNext_1 = require('../operators/onErrorResumeNext');\nexports.onErrorResumeNext = onErrorResumeNext_1.onErrorResumeNextStatic;\n//# sourceMappingURL=onErrorResumeNext.js.map","\"use strict\";\nfunction isScheduler(value) {\n    return value && typeof value.schedule === 'function';\n}\nexports.isScheduler = isScheduler;\n//# sourceMappingURL=isScheduler.js.map","var path = require('../internals/path');\nvar global = require('../internals/global');\n\nvar aFunction = function (variable) {\n  return typeof variable == 'function' ? variable : undefined;\n};\n\nmodule.exports = function (namespace, method) {\n  return arguments.length < 2 ? aFunction(path[namespace]) || aFunction(global[namespace])\n    : path[namespace] && path[namespace][method] || global[namespace] && global[namespace][method];\n};\n","\"use strict\";\nvar IntervalObservable_1 = require('./IntervalObservable');\nexports.interval = IntervalObservable_1.IntervalObservable.create;\n//# sourceMappingURL=interval.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/* tslint:enable:max-line-length */\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * <img src=\"./img/filter.png\" width=\"100%\">\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * @example <caption>Emit only click events whose target was a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksOnDivs = clicks.filter(ev => ev.target.tagName === 'DIV');\n * clicksOnDivs.subscribe(x => console.log(x));\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\nfunction filter(predicate, thisArg) {\n    return function filterOperatorFunction(source) {\n        return source.lift(new FilterOperator(predicate, thisArg));\n    };\n}\nexports.filter = filter;\nvar FilterOperator = (function () {\n    function FilterOperator(predicate, thisArg) {\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n    }\n    FilterOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n    };\n    return FilterOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar FilterSubscriber = (function (_super) {\n    __extends(FilterSubscriber, _super);\n    function FilterSubscriber(destination, predicate, thisArg) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n        this.count = 0;\n    }\n    // the try catch block below is left specifically for\n    // optimization and perf reasons. a tryCatcher is not necessary here.\n    FilterSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.predicate.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this.destination.next(value);\n        }\n    };\n    return FilterSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=filter.js.map","'use strict';\nvar nativePropertyIsEnumerable = {}.propertyIsEnumerable;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// Nashorn ~ JDK8 bug\nvar NASHORN_BUG = getOwnPropertyDescriptor && !nativePropertyIsEnumerable.call({ 1: 2 }, 1);\n\n// `Object.prototype.propertyIsEnumerable` method implementation\n// https://tc39.github.io/ecma262/#sec-object.prototype.propertyisenumerable\nexports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {\n  var descriptor = getOwnPropertyDescriptor(this, V);\n  return !!descriptor && descriptor.enumerable;\n} : nativePropertyIsEnumerable;\n","var anObject = require('../internals/an-object');\nvar aPossiblePrototype = require('../internals/a-possible-prototype');\n\n// `Object.setPrototypeOf` method\n// https://tc39.github.io/ecma262/#sec-object.setprototypeof\n// Works with __proto__ only. Old v8 can't work with null proto objects.\n/* eslint-disable no-proto */\nmodule.exports = Object.setPrototypeOf || ('__proto__' in {} ? function () {\n  var CORRECT_SETTER = false;\n  var test = {};\n  var setter;\n  try {\n    setter = Object.getOwnPropertyDescriptor(Object.prototype, '__proto__').set;\n    setter.call(test, []);\n    CORRECT_SETTER = test instanceof Array;\n  } catch (error) { /* empty */ }\n  return function setPrototypeOf(O, proto) {\n    anObject(O);\n    aPossiblePrototype(proto);\n    if (CORRECT_SETTER) setter.call(O, proto);\n    else O.__proto__ = proto;\n    return O;\n  };\n}() : undefined);\n","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\nvar tryCatch_1 = require('../util/tryCatch');\nvar errorObject_1 = require('../util/errorObject');\nvar AsyncSubject_1 = require('../AsyncSubject');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar BoundNodeCallbackObservable = (function (_super) {\n    __extends(BoundNodeCallbackObservable, _super);\n    function BoundNodeCallbackObservable(callbackFunc, selector, args, context, scheduler) {\n        _super.call(this);\n        this.callbackFunc = callbackFunc;\n        this.selector = selector;\n        this.args = args;\n        this.context = context;\n        this.scheduler = scheduler;\n    }\n    /* tslint:enable:max-line-length */\n    /**\n     * Converts a Node.js-style callback API to a function that returns an\n     * Observable.\n     *\n     * <span class=\"informal\">It's just like {@link bindCallback}, but the\n     * callback is expected to be of type `callback(error, result)`.</span>\n     *\n     * `bindNodeCallback` is not an operator because its input and output are not\n     * Observables. The input is a function `func` with some parameters, but the\n     * last parameter must be a callback function that `func` calls when it is\n     * done. The callback function is expected to follow Node.js conventions,\n     * where the first argument to the callback is an error object, signaling\n     * whether call was successful. If that object is passed to callback, it means\n     * something went wrong.\n     *\n     * The output of `bindNodeCallback` is a function that takes the same\n     * parameters as `func`, except the last one (the callback). When the output\n     * function is called with arguments, it will return an Observable.\n     * If `func` calls its callback with error parameter present, Observable will\n     * error with that value as well. If error parameter is not passed, Observable will emit\n     * second parameter. If there are more parameters (third and so on),\n     * Observable will emit an array with all arguments, except first error argument.\n     *\n     * Optionally `bindNodeCallback` accepts selector function, which allows you to\n     * make resulting Observable emit value computed by selector, instead of regular\n     * callback arguments. It works similarly to {@link bindCallback} selector, but\n     * Node.js-style error argument will never be passed to that function.\n     *\n     * Note that `func` will not be called at the same time output function is,\n     * but rather whenever resulting Observable is subscribed. By default call to\n     * `func` will happen synchronously after subscription, but that can be changed\n     * with proper {@link Scheduler} provided as optional third parameter. Scheduler\n     * can also control when values from callback will be emitted by Observable.\n     * To find out more, check out documentation for {@link bindCallback}, where\n     * Scheduler works exactly the same.\n     *\n     * As in {@link bindCallback}, context (`this` property) of input function will be set to context\n     * of returned function, when it is called.\n     *\n     * After Observable emits value, it will complete immediately. This means\n     * even if `func` calls callback again, values from second and consecutive\n     * calls will never appear on the stream. If you need to handle functions\n     * that call callbacks multiple times, check out {@link fromEvent} or\n     * {@link fromEventPattern} instead.\n     *\n     * Note that `bindNodeCallback` can be used in non-Node.js environments as well.\n     * \"Node.js-style\" callbacks are just a convention, so if you write for\n     * browsers or any other environment and API you use implements that callback style,\n     * `bindNodeCallback` can be safely used on that API functions as well.\n     *\n     * Remember that Error object passed to callback does not have to be an instance\n     * of JavaScript built-in `Error` object. In fact, it does not even have to an object.\n     * Error parameter of callback function is interpreted as \"present\", when value\n     * of that parameter is truthy. It could be, for example, non-zero number, non-empty\n     * string or boolean `true`. In all of these cases resulting Observable would error\n     * with that value. This means usually regular style callbacks will fail very often when\n     * `bindNodeCallback` is used. If your Observable errors much more often then you\n     * would expect, check if callback really is called in Node.js-style and, if not,\n     * switch to {@link bindCallback} instead.\n     *\n     * Note that even if error parameter is technically present in callback, but its value\n     * is falsy, it still won't appear in array emitted by Observable or in selector function.\n     *\n     *\n     * @example <caption>Read a file from the filesystem and get the data as an Observable</caption>\n     * import * as fs from 'fs';\n     * var readFileAsObservable = Rx.Observable.bindNodeCallback(fs.readFile);\n     * var result = readFileAsObservable('./roadNames.txt', 'utf8');\n     * result.subscribe(x => console.log(x), e => console.error(e));\n     *\n     *\n     * @example <caption>Use on function calling callback with multiple arguments</caption>\n     * someFunction((err, a, b) => {\n     *   console.log(err); // null\n     *   console.log(a); // 5\n     *   console.log(b); // \"some string\"\n     * });\n     * var boundSomeFunction = Rx.Observable.bindNodeCallback(someFunction);\n     * boundSomeFunction()\n     * .subscribe(value => {\n     *   console.log(value); // [5, \"some string\"]\n     * });\n     *\n     *\n     * @example <caption>Use with selector function</caption>\n     * someFunction((err, a, b) => {\n     *   console.log(err); // undefined\n     *   console.log(a); // \"abc\"\n     *   console.log(b); // \"DEF\"\n     * });\n     * var boundSomeFunction = Rx.Observable.bindNodeCallback(someFunction, (a, b) => a + b);\n     * boundSomeFunction()\n     * .subscribe(value => {\n     *   console.log(value); // \"abcDEF\"\n     * });\n     *\n     *\n     * @example <caption>Use on function calling callback in regular style</caption>\n     * someFunction(a => {\n     *   console.log(a); // 5\n     * });\n     * var boundSomeFunction = Rx.Observable.bindNodeCallback(someFunction);\n     * boundSomeFunction()\n     * .subscribe(\n     *   value => {}             // never gets called\n     *   err => console.log(err) // 5\n     *);\n     *\n     *\n     * @see {@link bindCallback}\n     * @see {@link from}\n     * @see {@link fromPromise}\n     *\n     * @param {function} func Function with a Node.js-style callback as the last parameter.\n     * @param {function} [selector] A function which takes the arguments from the\n     * callback and maps those to a value to emit on the output Observable.\n     * @param {Scheduler} [scheduler] The scheduler on which to schedule the\n     * callbacks.\n     * @return {function(...params: *): Observable} A function which returns the\n     * Observable that delivers the same values the Node.js callback would\n     * deliver.\n     * @static true\n     * @name bindNodeCallback\n     * @owner Observable\n     */\n    BoundNodeCallbackObservable.create = function (func, selector, scheduler) {\n        if (selector === void 0) { selector = undefined; }\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i - 0] = arguments[_i];\n            }\n            return new BoundNodeCallbackObservable(func, selector, args, this, scheduler);\n        };\n    };\n    /** @deprecated internal use only */ BoundNodeCallbackObservable.prototype._subscribe = function (subscriber) {\n        var callbackFunc = this.callbackFunc;\n        var args = this.args;\n        var scheduler = this.scheduler;\n        var subject = this.subject;\n        if (!scheduler) {\n            if (!subject) {\n                subject = this.subject = new AsyncSubject_1.AsyncSubject();\n                var handler = function handlerFn() {\n                    var innerArgs = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        innerArgs[_i - 0] = arguments[_i];\n                    }\n                    var source = handlerFn.source;\n                    var selector = source.selector, subject = source.subject;\n                    var err = innerArgs.shift();\n                    if (err) {\n                        subject.error(err);\n                    }\n                    else if (selector) {\n                        var result_1 = tryCatch_1.tryCatch(selector).apply(this, innerArgs);\n                        if (result_1 === errorObject_1.errorObject) {\n                            subject.error(errorObject_1.errorObject.e);\n                        }\n                        else {\n                            subject.next(result_1);\n                            subject.complete();\n                        }\n                    }\n                    else {\n                        subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n                        subject.complete();\n                    }\n                };\n                // use named function instance to avoid closure.\n                handler.source = this;\n                var result = tryCatch_1.tryCatch(callbackFunc).apply(this.context, args.concat(handler));\n                if (result === errorObject_1.errorObject) {\n                    subject.error(errorObject_1.errorObject.e);\n                }\n            }\n            return subject.subscribe(subscriber);\n        }\n        else {\n            return scheduler.schedule(dispatch, 0, { source: this, subscriber: subscriber, context: this.context });\n        }\n    };\n    return BoundNodeCallbackObservable;\n}(Observable_1.Observable));\nexports.BoundNodeCallbackObservable = BoundNodeCallbackObservable;\nfunction dispatch(state) {\n    var self = this;\n    var source = state.source, subscriber = state.subscriber, context = state.context;\n    // XXX: cast to `any` to access to the private field in `source`.\n    var _a = source, callbackFunc = _a.callbackFunc, args = _a.args, scheduler = _a.scheduler;\n    var subject = source.subject;\n    if (!subject) {\n        subject = source.subject = new AsyncSubject_1.AsyncSubject();\n        var handler = function handlerFn() {\n            var innerArgs = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                innerArgs[_i - 0] = arguments[_i];\n            }\n            var source = handlerFn.source;\n            var selector = source.selector, subject = source.subject;\n            var err = innerArgs.shift();\n            if (err) {\n                self.add(scheduler.schedule(dispatchError, 0, { err: err, subject: subject }));\n            }\n            else if (selector) {\n                var result_2 = tryCatch_1.tryCatch(selector).apply(this, innerArgs);\n                if (result_2 === errorObject_1.errorObject) {\n                    self.add(scheduler.schedule(dispatchError, 0, { err: errorObject_1.errorObject.e, subject: subject }));\n                }\n                else {\n                    self.add(scheduler.schedule(dispatchNext, 0, { value: result_2, subject: subject }));\n                }\n            }\n            else {\n                var value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n                self.add(scheduler.schedule(dispatchNext, 0, { value: value, subject: subject }));\n            }\n        };\n        // use named function to pass values in without closure\n        handler.source = source;\n        var result = tryCatch_1.tryCatch(callbackFunc).apply(context, args.concat(handler));\n        if (result === errorObject_1.errorObject) {\n            self.add(scheduler.schedule(dispatchError, 0, { err: errorObject_1.errorObject.e, subject: subject }));\n        }\n    }\n    self.add(subject.subscribe(subscriber));\n}\nfunction dispatchNext(arg) {\n    var value = arg.value, subject = arg.subject;\n    subject.next(value);\n    subject.complete();\n}\nfunction dispatchError(arg) {\n    var err = arg.err, subject = arg.subject;\n    subject.error(err);\n}\n//# sourceMappingURL=BoundNodeCallbackObservable.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar onErrorResumeNext_1 = require('../../operator/onErrorResumeNext');\nObservable_1.Observable.prototype.onErrorResumeNext = onErrorResumeNext_1.onErrorResumeNext;\n//# sourceMappingURL=onErrorResumeNext.js.map","\"use strict\";\nvar async_1 = require('../scheduler/async');\nvar throttle_1 = require('../operators/throttle');\nvar throttleTime_1 = require('../operators/throttleTime');\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for `duration` milliseconds, then repeats this process.\n *\n * <span class=\"informal\">Lets a value pass, then ignores source values for the\n * next `duration` milliseconds.</span>\n *\n * <img src=\"./img/throttleTime.png\" width=\"100%\">\n *\n * `throttleTime` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled. After `duration` milliseconds (or the time unit determined\n * internally by the optional `scheduler`) has passed, the timer is disabled,\n * and this process repeats for the next source value. Optionally takes a\n * {@link IScheduler} for managing timers.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.throttleTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {number} duration Time to wait before emitting another value after\n * emitting the last value, measured in milliseconds or the time unit determined\n * internally by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the throttling.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttleTime\n * @owner Observable\n */\nfunction throttleTime(duration, scheduler, config) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    if (config === void 0) { config = throttle_1.defaultThrottleConfig; }\n    return throttleTime_1.throttleTime(duration, scheduler, config)(this);\n}\nexports.throttleTime = throttleTime;\n//# sourceMappingURL=throttleTime.js.map","\"use strict\";\nvar pairwise_1 = require('../operators/pairwise');\n/**\n * Groups pairs of consecutive emissions together and emits them as an array of\n * two values.\n *\n * <span class=\"informal\">Puts the current value and previous value together as\n * an array, and emits that.</span>\n *\n * <img src=\"./img/pairwise.png\" width=\"100%\">\n *\n * The Nth emission from the source Observable will cause the output Observable\n * to emit an array [(N-1)th, Nth] of the previous and the current value, as a\n * pair. For this reason, `pairwise` emits on the second and subsequent\n * emissions from the source Observable, but not on the first emission, because\n * there is no previous value in that case.\n *\n * @example <caption>On every click (starting from the second), emit the relative distance to the previous click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var pairs = clicks.pairwise();\n * var distance = pairs.map(pair => {\n *   var x0 = pair[0].clientX;\n *   var y0 = pair[0].clientY;\n *   var x1 = pair[1].clientX;\n *   var y1 = pair[1].clientY;\n *   return Math.sqrt(Math.pow(x0 - x1, 2) + Math.pow(y0 - y1, 2));\n * });\n * distance.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n *\n * @return {Observable<Array<T>>} An Observable of pairs (as arrays) of\n * consecutive values from the source Observable.\n * @method pairwise\n * @owner Observable\n */\nfunction pairwise() {\n    return pairwise_1.pairwise()(this);\n}\nexports.pairwise = pairwise;\n//# sourceMappingURL=pairwise.js.map","\"use strict\";\nvar partition_1 = require('../operators/partition');\n/**\n * Splits the source Observable into two, one with values that satisfy a\n * predicate, and another with values that don't satisfy the predicate.\n *\n * <span class=\"informal\">It's like {@link filter}, but returns two Observables:\n * one like the output of {@link filter}, and the other with values that did not\n * pass the condition.</span>\n *\n * <img src=\"./img/partition.png\" width=\"100%\">\n *\n * `partition` outputs an array with two Observables that partition the values\n * from the source Observable through the given `predicate` function. The first\n * Observable in that array emits source values for which the predicate argument\n * returns true. The second Observable emits source values for which the\n * predicate returns false. The first behaves like {@link filter} and the second\n * behaves like {@link filter} with the predicate negated.\n *\n * @example <caption>Partition click events into those on DIV elements and those elsewhere</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var parts = clicks.partition(ev => ev.target.tagName === 'DIV');\n * var clicksOnDivs = parts[0];\n * var clicksElsewhere = parts[1];\n * clicksOnDivs.subscribe(x => console.log('DIV clicked: ', x));\n * clicksElsewhere.subscribe(x => console.log('Other clicked: ', x));\n *\n * @see {@link filter}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted on the first Observable in the returned array, if\n * `false` the value is emitted on the second Observable in the array. The\n * `index` parameter is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {[Observable<T>, Observable<T>]} An array with two Observables: one\n * with values that passed the predicate, and another with values that did not\n * pass the predicate.\n * @method partition\n * @owner Observable\n */\nfunction partition(predicate, thisArg) {\n    return partition_1.partition(predicate, thisArg)(this);\n}\nexports.partition = partition;\n//# sourceMappingURL=partition.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar root_1 = require('../util/root');\nvar Action_1 = require('./Action');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AsyncAction = (function (_super) {\n    __extends(AsyncAction, _super);\n    function AsyncAction(scheduler, work) {\n        _super.call(this, scheduler, work);\n        this.scheduler = scheduler;\n        this.pending = false;\n        this.work = work;\n    }\n    AsyncAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        if (this.closed) {\n            return this;\n        }\n        // Always replace the current state with the new state.\n        this.state = state;\n        // Set the pending flag indicating that this action has been scheduled, or\n        // has recursively rescheduled itself.\n        this.pending = true;\n        var id = this.id;\n        var scheduler = this.scheduler;\n        //\n        // Important implementation note:\n        //\n        // Actions only execute once by default, unless rescheduled from within the\n        // scheduled callback. This allows us to implement single and repeat\n        // actions via the same code path, without adding API surface area, as well\n        // as mimic traditional recursion but across asynchronous boundaries.\n        //\n        // However, JS runtimes and timers distinguish between intervals achieved by\n        // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n        // serial `setTimeout` calls can be individually delayed, which delays\n        // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n        // guarantee the interval callback will be invoked more precisely to the\n        // interval period, regardless of load.\n        //\n        // Therefore, we use `setInterval` to schedule single and repeat actions.\n        // If the action reschedules itself with the same delay, the interval is not\n        // canceled. If the action doesn't reschedule, or reschedules with a\n        // different delay, the interval will be canceled after scheduled callback\n        // execution.\n        //\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.delay = delay;\n        // If this action has already an async Id, don't request a new one.\n        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    };\n    AsyncAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        return root_1.root.setInterval(scheduler.flush.bind(scheduler, this), delay);\n    };\n    AsyncAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        // If this action is rescheduled with the same delay time, don't clear the interval id.\n        if (delay !== null && this.delay === delay && this.pending === false) {\n            return id;\n        }\n        // Otherwise, if the action's delay time is different from the current delay,\n        // or the action has been rescheduled before it's executed, clear the interval id\n        return root_1.root.clearInterval(id) && undefined || undefined;\n    };\n    /**\n     * Immediately executes this action and the `work` it contains.\n     * @return {any}\n     */\n    AsyncAction.prototype.execute = function (state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        var error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            // Dequeue if the action didn't reschedule itself. Don't call\n            // unsubscribe(), because the action could reschedule later.\n            // For example:\n            // ```\n            // scheduler.schedule(function doWork(counter) {\n            //   /* ... I'm a busy worker bee ... */\n            //   var originalAction = this;\n            //   /* wait 100ms before rescheduling the action */\n            //   setTimeout(function () {\n            //     originalAction.schedule(counter + 1);\n            //   }, 100);\n            // }, 1000);\n            // ```\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    };\n    AsyncAction.prototype._execute = function (state, delay) {\n        var errored = false;\n        var errorValue = undefined;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = !!e && e || new Error(e);\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    };\n    /** @deprecated internal use only */ AsyncAction.prototype._unsubscribe = function () {\n        var id = this.id;\n        var scheduler = this.scheduler;\n        var actions = scheduler.actions;\n        var index = actions.indexOf(this);\n        this.work = null;\n        this.state = null;\n        this.pending = false;\n        this.scheduler = null;\n        if (index !== -1) {\n            actions.splice(index, 1);\n        }\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, null);\n        }\n        this.delay = null;\n    };\n    return AsyncAction;\n}(Action_1.Action));\nexports.AsyncAction = AsyncAction;\n//# sourceMappingURL=AsyncAction.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nvar UnsubscriptionError = (function (_super) {\n    __extends(UnsubscriptionError, _super);\n    function UnsubscriptionError(errors) {\n        _super.call(this);\n        this.errors = errors;\n        var err = Error.call(this, errors ?\n            errors.length + \" errors occurred during unsubscription:\\n  \" + errors.map(function (err, i) { return ((i + 1) + \") \" + err.toString()); }).join('\\n  ') : '');\n        this.name = err.name = 'UnsubscriptionError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return UnsubscriptionError;\n}(Error));\nexports.UnsubscriptionError = UnsubscriptionError;\n//# sourceMappingURL=UnsubscriptionError.js.map","\"use strict\";\nvar merge_1 = require('../operators/merge');\nvar merge_2 = require('../observable/merge');\nexports.mergeStatic = merge_2.merge;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * <img src=\"./img/merge.png\" width=\"100%\">\n *\n * `merge` subscribes to each given input Observable (either the source or an\n * Observable given as argument), and simply forwards (without doing any\n * transformation) all the values from all the input Observables to the output\n * Observable. The output Observable only completes once all input Observables\n * have completed. Any error delivered by an input Observable will be immediately\n * emitted on the output Observable.\n *\n * @example <caption>Merge together two Observables: 1s interval and clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var clicksOrTimer = clicks.merge(timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var concurrent = 2; // the argument\n * var merged = timer1.merge(timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {ObservableInput} other An input Observable to merge with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for managing\n * concurrency of input Observables.\n * @return {Observable} An Observable that emits items that are the result of\n * every input Observable.\n * @method merge\n * @owner Observable\n */\nfunction merge() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    return merge_1.merge.apply(void 0, observables)(this);\n}\nexports.merge = merge;\n//# sourceMappingURL=merge.js.map","\"use strict\";\nvar QueueAction_1 = require('./QueueAction');\nvar QueueScheduler_1 = require('./QueueScheduler');\n/**\n *\n * Queue Scheduler\n *\n * <span class=\"informal\">Put every next task on a queue, instead of executing it immediately</span>\n *\n * `queue` scheduler, when used with delay, behaves the same as {@link async} scheduler.\n *\n * When used without delay, it schedules given task synchronously - executes it right when\n * it is scheduled. However when called recursively, that is when inside the scheduled task,\n * another task is scheduled with queue scheduler, instead of executing immediately as well,\n * that task will be put on a queue and wait for current one to finish.\n *\n * This means that when you execute task with `queue` scheduler, you are sure it will end\n * before any other task scheduled with that scheduler will start.\n *\n * @examples <caption>Schedule recursively first, then do something</caption>\n *\n * Rx.Scheduler.queue.schedule(() => {\n *   Rx.Scheduler.queue.schedule(() => console.log('second')); // will not happen now, but will be put on a queue\n *\n *   console.log('first');\n * });\n *\n * // Logs:\n * // \"first\"\n * // \"second\"\n *\n *\n * @example <caption>Reschedule itself recursively</caption>\n *\n * Rx.Scheduler.queue.schedule(function(state) {\n *   if (state !== 0) {\n *     console.log('before', state);\n *     this.schedule(state - 1); // `this` references currently executing Action,\n *                               // which we reschedule with new state\n *     console.log('after', state);\n *   }\n * }, 0, 3);\n *\n * // In scheduler that runs recursively, you would expect:\n * // \"before\", 3\n * // \"before\", 2\n * // \"before\", 1\n * // \"after\", 1\n * // \"after\", 2\n * // \"after\", 3\n *\n * // But with queue it logs:\n * // \"before\", 3\n * // \"after\", 3\n * // \"before\", 2\n * // \"after\", 2\n * // \"before\", 1\n * // \"after\", 1\n *\n *\n * @static true\n * @name queue\n * @owner Scheduler\n */\nexports.queue = new QueueScheduler_1.QueueScheduler(QueueAction_1.QueueAction);\n//# sourceMappingURL=queue.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AsyncAction_1 = require('./AsyncAction');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar QueueAction = (function (_super) {\n    __extends(QueueAction, _super);\n    function QueueAction(scheduler, work) {\n        _super.call(this, scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n    }\n    QueueAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        if (delay > 0) {\n            return _super.prototype.schedule.call(this, state, delay);\n        }\n        this.delay = delay;\n        this.state = state;\n        this.scheduler.flush(this);\n        return this;\n    };\n    QueueAction.prototype.execute = function (state, delay) {\n        return (delay > 0 || this.closed) ?\n            _super.prototype.execute.call(this, state, delay) :\n            this._execute(state, delay);\n    };\n    QueueAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        // If delay exists and is greater than 0, or if the delay is null (the\n        // action wasn't rescheduled) but was originally scheduled as an async\n        // action, then recycle as an async action.\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\n        }\n        // Otherwise flush the scheduler starting with this action.\n        return scheduler.flush(this);\n    };\n    return QueueAction;\n}(AsyncAction_1.AsyncAction));\nexports.QueueAction = QueueAction;\n//# sourceMappingURL=QueueAction.js.map","\"use strict\";\nvar async_1 = require('../scheduler/async');\nvar map_1 = require('./map');\n/**\n * @param scheduler\n * @return {Observable<Timestamp<any>>|WebSocketSubject<T>|Observable<T>}\n * @method timestamp\n * @owner Observable\n */\nfunction timestamp(scheduler) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    return map_1.map(function (value) { return new Timestamp(value, scheduler.now()); });\n    // return (source: Observable<T>) => source.lift(new TimestampOperator(scheduler));\n}\nexports.timestamp = timestamp;\nvar Timestamp = (function () {\n    function Timestamp(value, timestamp) {\n        this.value = value;\n        this.timestamp = timestamp;\n    }\n    return Timestamp;\n}());\nexports.Timestamp = Timestamp;\n;\n//# sourceMappingURL=timestamp.js.map","\"use strict\";\nvar BoundNodeCallbackObservable_1 = require('./BoundNodeCallbackObservable');\nexports.bindNodeCallback = BoundNodeCallbackObservable_1.BoundNodeCallbackObservable.create;\n//# sourceMappingURL=bindNodeCallback.js.map","\"use strict\";\nfunction identity(x) {\n    return x;\n}\nexports.identity = identity;\n//# sourceMappingURL=identity.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar subscribeOn_1 = require('../../operator/subscribeOn');\nObservable_1.Observable.prototype.subscribeOn = subscribeOn_1.subscribeOn;\n//# sourceMappingURL=subscribeOn.js.map","\"use strict\";\nvar PromiseObservable_1 = require('./PromiseObservable');\nexports.fromPromise = PromiseObservable_1.PromiseObservable.create;\n//# sourceMappingURL=fromPromise.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = require('../Subject');\nvar Observable_1 = require('../Observable');\nvar Subscriber_1 = require('../Subscriber');\nvar Subscription_1 = require('../Subscription');\nvar refCount_1 = require('../operators/refCount');\n/**\n * @class ConnectableObservable<T>\n */\nvar ConnectableObservable = (function (_super) {\n    __extends(ConnectableObservable, _super);\n    function ConnectableObservable(/** @deprecated internal use only */ source, \n        /** @deprecated internal use only */ subjectFactory) {\n        _super.call(this);\n        this.source = source;\n        this.subjectFactory = subjectFactory;\n        /** @deprecated internal use only */ this._refCount = 0;\n        this._isComplete = false;\n    }\n    /** @deprecated internal use only */ ConnectableObservable.prototype._subscribe = function (subscriber) {\n        return this.getSubject().subscribe(subscriber);\n    };\n    /** @deprecated internal use only */ ConnectableObservable.prototype.getSubject = function () {\n        var subject = this._subject;\n        if (!subject || subject.isStopped) {\n            this._subject = this.subjectFactory();\n        }\n        return this._subject;\n    };\n    ConnectableObservable.prototype.connect = function () {\n        var connection = this._connection;\n        if (!connection) {\n            this._isComplete = false;\n            connection = this._connection = new Subscription_1.Subscription();\n            connection.add(this.source\n                .subscribe(new ConnectableSubscriber(this.getSubject(), this)));\n            if (connection.closed) {\n                this._connection = null;\n                connection = Subscription_1.Subscription.EMPTY;\n            }\n            else {\n                this._connection = connection;\n            }\n        }\n        return connection;\n    };\n    ConnectableObservable.prototype.refCount = function () {\n        return refCount_1.refCount()(this);\n    };\n    return ConnectableObservable;\n}(Observable_1.Observable));\nexports.ConnectableObservable = ConnectableObservable;\nvar connectableProto = ConnectableObservable.prototype;\nexports.connectableObservableDescriptor = {\n    operator: { value: null },\n    _refCount: { value: 0, writable: true },\n    _subject: { value: null, writable: true },\n    _connection: { value: null, writable: true },\n    _subscribe: { value: connectableProto._subscribe },\n    _isComplete: { value: connectableProto._isComplete, writable: true },\n    getSubject: { value: connectableProto.getSubject },\n    connect: { value: connectableProto.connect },\n    refCount: { value: connectableProto.refCount }\n};\nvar ConnectableSubscriber = (function (_super) {\n    __extends(ConnectableSubscriber, _super);\n    function ConnectableSubscriber(destination, connectable) {\n        _super.call(this, destination);\n        this.connectable = connectable;\n    }\n    ConnectableSubscriber.prototype._error = function (err) {\n        this._unsubscribe();\n        _super.prototype._error.call(this, err);\n    };\n    ConnectableSubscriber.prototype._complete = function () {\n        this.connectable._isComplete = true;\n        this._unsubscribe();\n        _super.prototype._complete.call(this);\n    };\n    /** @deprecated internal use only */ ConnectableSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (connectable) {\n            this.connectable = null;\n            var connection = connectable._connection;\n            connectable._refCount = 0;\n            connectable._subject = null;\n            connectable._connection = null;\n            if (connection) {\n                connection.unsubscribe();\n            }\n        }\n    };\n    return ConnectableSubscriber;\n}(Subject_1.SubjectSubscriber));\nvar RefCountOperator = (function () {\n    function RefCountOperator(connectable) {\n        this.connectable = connectable;\n    }\n    RefCountOperator.prototype.call = function (subscriber, source) {\n        var connectable = this.connectable;\n        connectable._refCount++;\n        var refCounter = new RefCountSubscriber(subscriber, connectable);\n        var subscription = source.subscribe(refCounter);\n        if (!refCounter.closed) {\n            refCounter.connection = connectable.connect();\n        }\n        return subscription;\n    };\n    return RefCountOperator;\n}());\nvar RefCountSubscriber = (function (_super) {\n    __extends(RefCountSubscriber, _super);\n    function RefCountSubscriber(destination, connectable) {\n        _super.call(this, destination);\n        this.connectable = connectable;\n    }\n    /** @deprecated internal use only */ RefCountSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (!connectable) {\n            this.connection = null;\n            return;\n        }\n        this.connectable = null;\n        var refCount = connectable._refCount;\n        if (refCount <= 0) {\n            this.connection = null;\n            return;\n        }\n        connectable._refCount = refCount - 1;\n        if (refCount > 1) {\n            this.connection = null;\n            return;\n        }\n        ///\n        // Compare the local RefCountSubscriber's connection Subscription to the\n        // connection Subscription on the shared ConnectableObservable. In cases\n        // where the ConnectableObservable source synchronously emits values, and\n        // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n        // execution continues to here before the RefCountOperator has a chance to\n        // supply the RefCountSubscriber with the shared connection Subscription.\n        // For example:\n        // ```\n        // Observable.range(0, 10)\n        //   .publish()\n        //   .refCount()\n        //   .take(5)\n        //   .subscribe();\n        // ```\n        // In order to account for this case, RefCountSubscriber should only dispose\n        // the ConnectableObservable's shared connection Subscription if the\n        // connection Subscription exists, *and* either:\n        //   a. RefCountSubscriber doesn't have a reference to the shared connection\n        //      Subscription yet, or,\n        //   b. RefCountSubscriber's connection Subscription reference is identical\n        //      to the shared connection Subscription\n        ///\n        var connection = this.connection;\n        var sharedConnection = connectable._connection;\n        this.connection = null;\n        if (sharedConnection && (!connection || sharedConnection === connection)) {\n            sharedConnection.unsubscribe();\n        }\n    };\n    return RefCountSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=ConnectableObservable.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar async_1 = require('../scheduler/async');\nvar isDate_1 = require('../util/isDate');\nvar Subscriber_1 = require('../Subscriber');\nvar TimeoutError_1 = require('../util/TimeoutError');\n/**\n *\n * Errors if Observable does not emit a value in given time span.\n *\n * <span class=\"informal\">Timeouts on Observable that doesn't emit values fast enough.</span>\n *\n * <img src=\"./img/timeout.png\" width=\"100%\">\n *\n * `timeout` operator accepts as an argument either a number or a Date.\n *\n * If number was provided, it returns an Observable that behaves like a source\n * Observable, unless there is a period of time where there is no value emitted.\n * So if you provide `100` as argument and first value comes after 50ms from\n * the moment of subscription, this value will be simply re-emitted by the resulting\n * Observable. If however after that 100ms passes without a second value being emitted,\n * stream will end with an error and source Observable will be unsubscribed.\n * These checks are performed throughout whole lifecycle of Observable - from the moment\n * it was subscribed to, until it completes or errors itself. Thus every value must be\n * emitted within specified period since previous value.\n *\n * If provided argument was Date, returned Observable behaves differently. It throws\n * if Observable did not complete before provided Date. This means that periods between\n * emission of particular values do not matter in this case. If Observable did not complete\n * before provided Date, source Observable will be unsubscribed. Other than that, resulting\n * stream behaves just as source Observable.\n *\n * `timeout` accepts also a Scheduler as a second parameter. It is used to schedule moment (or moments)\n * when returned Observable will check if source stream emitted value or completed.\n *\n * @example <caption>Check if ticks are emitted within certain timespan</caption>\n * const seconds = Rx.Observable.interval(1000);\n *\n * seconds.timeout(1100) // Let's use bigger timespan to be safe,\n *                       // since `interval` might fire a bit later then scheduled.\n * .subscribe(\n *     value => console.log(value), // Will emit numbers just as regular `interval` would.\n *     err => console.log(err) // Will never be called.\n * );\n *\n * seconds.timeout(900).subscribe(\n *     value => console.log(value), // Will never be called.\n *     err => console.log(err) // Will emit error before even first value is emitted,\n *                             // since it did not arrive within 900ms period.\n * );\n *\n * @example <caption>Use Date to check if Observable completed</caption>\n * const seconds = Rx.Observable.interval(1000);\n *\n * seconds.timeout(new Date(\"December 17, 2020 03:24:00\"))\n * .subscribe(\n *     value => console.log(value), // Will emit values as regular `interval` would\n *                                  // until December 17, 2020 at 03:24:00.\n *     err => console.log(err) // On December 17, 2020 at 03:24:00 it will emit an error,\n *                             // since Observable did not complete by then.\n * );\n *\n * @see {@link timeoutWith}\n *\n * @param {number|Date} due Number specifying period within which Observable must emit values\n *                          or Date specifying before when Observable should complete\n * @param {Scheduler} [scheduler] Scheduler controlling when timeout checks occur.\n * @return {Observable<T>} Observable that mirrors behaviour of source, unless timeout checks fail.\n * @method timeout\n * @owner Observable\n */\nfunction timeout(due, scheduler) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    var absoluteTimeout = isDate_1.isDate(due);\n    var waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(due);\n    return function (source) { return source.lift(new TimeoutOperator(waitFor, absoluteTimeout, scheduler, new TimeoutError_1.TimeoutError())); };\n}\nexports.timeout = timeout;\nvar TimeoutOperator = (function () {\n    function TimeoutOperator(waitFor, absoluteTimeout, scheduler, errorInstance) {\n        this.waitFor = waitFor;\n        this.absoluteTimeout = absoluteTimeout;\n        this.scheduler = scheduler;\n        this.errorInstance = errorInstance;\n    }\n    TimeoutOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TimeoutSubscriber(subscriber, this.absoluteTimeout, this.waitFor, this.scheduler, this.errorInstance));\n    };\n    return TimeoutOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TimeoutSubscriber = (function (_super) {\n    __extends(TimeoutSubscriber, _super);\n    function TimeoutSubscriber(destination, absoluteTimeout, waitFor, scheduler, errorInstance) {\n        _super.call(this, destination);\n        this.absoluteTimeout = absoluteTimeout;\n        this.waitFor = waitFor;\n        this.scheduler = scheduler;\n        this.errorInstance = errorInstance;\n        this.action = null;\n        this.scheduleTimeout();\n    }\n    TimeoutSubscriber.dispatchTimeout = function (subscriber) {\n        subscriber.error(subscriber.errorInstance);\n    };\n    TimeoutSubscriber.prototype.scheduleTimeout = function () {\n        var action = this.action;\n        if (action) {\n            // Recycle the action if we've already scheduled one. All the production\n            // Scheduler Actions mutate their state/delay time and return themeselves.\n            // VirtualActions are immutable, so they create and return a clone. In this\n            // case, we need to set the action reference to the most recent VirtualAction,\n            // to ensure that's the one we clone from next time.\n            this.action = action.schedule(this, this.waitFor);\n        }\n        else {\n            this.add(this.action = this.scheduler.schedule(TimeoutSubscriber.dispatchTimeout, this.waitFor, this));\n        }\n    };\n    TimeoutSubscriber.prototype._next = function (value) {\n        if (!this.absoluteTimeout) {\n            this.scheduleTimeout();\n        }\n        _super.prototype._next.call(this, value);\n    };\n    /** @deprecated internal use only */ TimeoutSubscriber.prototype._unsubscribe = function () {\n        this.action = null;\n        this.scheduler = null;\n        this.errorInstance = null;\n    };\n    return TimeoutSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=timeout.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar Observable_1 = require('../Observable');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Delays the emission of items from the source Observable by a given time span\n * determined by the emissions of another Observable.\n *\n * <span class=\"informal\">It's like {@link delay}, but the time span of the\n * delay duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/delayWhen.png\" width=\"100%\">\n *\n * `delayWhen` time shifts each emitted value from the source Observable by a\n * time span determined by another Observable. When the source emits a value,\n * the `delayDurationSelector` function is called with the source value as\n * argument, and should return an Observable, called the \"duration\" Observable.\n * The source value is emitted on the output Observable only when the duration\n * Observable emits a value or completes.\n *\n * Optionally, `delayWhen` takes a second argument, `subscriptionDelay`, which\n * is an Observable. When `subscriptionDelay` emits its first value or\n * completes, the source Observable is subscribed to and starts behaving like\n * described in the previous paragraph. If `subscriptionDelay` is not provided,\n * `delayWhen` will subscribe to the source Observable as soon as the output\n * Observable is subscribed.\n *\n * @example <caption>Delay each click by a random amount of time, between 0 and 5 seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var delayedClicks = clicks.delayWhen(event =>\n *   Rx.Observable.interval(Math.random() * 5000)\n * );\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @see {@link debounce}\n * @see {@link delay}\n *\n * @param {function(value: T): Observable} delayDurationSelector A function that\n * returns an Observable for each value emitted by the source Observable, which\n * is then used to delay the emission of that item on the output Observable\n * until the Observable returned from this function emits a value.\n * @param {Observable} subscriptionDelay An Observable that triggers the\n * subscription to the source Observable once it emits any value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by an amount of time specified by the Observable returned by\n * `delayDurationSelector`.\n * @method delayWhen\n * @owner Observable\n */\nfunction delayWhen(delayDurationSelector, subscriptionDelay) {\n    if (subscriptionDelay) {\n        return function (source) {\n            return new SubscriptionDelayObservable(source, subscriptionDelay)\n                .lift(new DelayWhenOperator(delayDurationSelector));\n        };\n    }\n    return function (source) { return source.lift(new DelayWhenOperator(delayDurationSelector)); };\n}\nexports.delayWhen = delayWhen;\nvar DelayWhenOperator = (function () {\n    function DelayWhenOperator(delayDurationSelector) {\n        this.delayDurationSelector = delayDurationSelector;\n    }\n    DelayWhenOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DelayWhenSubscriber(subscriber, this.delayDurationSelector));\n    };\n    return DelayWhenOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DelayWhenSubscriber = (function (_super) {\n    __extends(DelayWhenSubscriber, _super);\n    function DelayWhenSubscriber(destination, delayDurationSelector) {\n        _super.call(this, destination);\n        this.delayDurationSelector = delayDurationSelector;\n        this.completed = false;\n        this.delayNotifierSubscriptions = [];\n        this.values = [];\n    }\n    DelayWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(outerValue);\n        this.removeSubscription(innerSub);\n        this.tryComplete();\n    };\n    DelayWhenSubscriber.prototype.notifyError = function (error, innerSub) {\n        this._error(error);\n    };\n    DelayWhenSubscriber.prototype.notifyComplete = function (innerSub) {\n        var value = this.removeSubscription(innerSub);\n        if (value) {\n            this.destination.next(value);\n        }\n        this.tryComplete();\n    };\n    DelayWhenSubscriber.prototype._next = function (value) {\n        try {\n            var delayNotifier = this.delayDurationSelector(value);\n            if (delayNotifier) {\n                this.tryDelay(delayNotifier, value);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    DelayWhenSubscriber.prototype._complete = function () {\n        this.completed = true;\n        this.tryComplete();\n    };\n    DelayWhenSubscriber.prototype.removeSubscription = function (subscription) {\n        subscription.unsubscribe();\n        var subscriptionIdx = this.delayNotifierSubscriptions.indexOf(subscription);\n        var value = null;\n        if (subscriptionIdx !== -1) {\n            value = this.values[subscriptionIdx];\n            this.delayNotifierSubscriptions.splice(subscriptionIdx, 1);\n            this.values.splice(subscriptionIdx, 1);\n        }\n        return value;\n    };\n    DelayWhenSubscriber.prototype.tryDelay = function (delayNotifier, value) {\n        var notifierSubscription = subscribeToResult_1.subscribeToResult(this, delayNotifier, value);\n        if (notifierSubscription && !notifierSubscription.closed) {\n            this.add(notifierSubscription);\n            this.delayNotifierSubscriptions.push(notifierSubscription);\n        }\n        this.values.push(value);\n    };\n    DelayWhenSubscriber.prototype.tryComplete = function () {\n        if (this.completed && this.delayNotifierSubscriptions.length === 0) {\n            this.destination.complete();\n        }\n    };\n    return DelayWhenSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SubscriptionDelayObservable = (function (_super) {\n    __extends(SubscriptionDelayObservable, _super);\n    function SubscriptionDelayObservable(/** @deprecated internal use only */ source, subscriptionDelay) {\n        _super.call(this);\n        this.source = source;\n        this.subscriptionDelay = subscriptionDelay;\n    }\n    /** @deprecated internal use only */ SubscriptionDelayObservable.prototype._subscribe = function (subscriber) {\n        this.subscriptionDelay.subscribe(new SubscriptionDelaySubscriber(subscriber, this.source));\n    };\n    return SubscriptionDelayObservable;\n}(Observable_1.Observable));\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SubscriptionDelaySubscriber = (function (_super) {\n    __extends(SubscriptionDelaySubscriber, _super);\n    function SubscriptionDelaySubscriber(parent, source) {\n        _super.call(this);\n        this.parent = parent;\n        this.source = source;\n        this.sourceSubscribed = false;\n    }\n    SubscriptionDelaySubscriber.prototype._next = function (unused) {\n        this.subscribeToSource();\n    };\n    SubscriptionDelaySubscriber.prototype._error = function (err) {\n        this.unsubscribe();\n        this.parent.error(err);\n    };\n    SubscriptionDelaySubscriber.prototype._complete = function () {\n        this.subscribeToSource();\n    };\n    SubscriptionDelaySubscriber.prototype.subscribeToSource = function () {\n        if (!this.sourceSubscribed) {\n            this.sourceSubscribed = true;\n            this.unsubscribe();\n            this.source.subscribe(this.parent);\n        }\n    };\n    return SubscriptionDelaySubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=delayWhen.js.map","var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\n// `Object.keys` method\n// https://tc39.github.io/ecma262/#sec-object.keys\nmodule.exports = Object.keys || function keys(O) {\n  return internalObjectKeys(O, enumBugKeys);\n};\n","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('./Subscriber');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar OuterSubscriber = (function (_super) {\n    __extends(OuterSubscriber, _super);\n    function OuterSubscriber() {\n        _super.apply(this, arguments);\n    }\n    OuterSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    };\n    OuterSubscriber.prototype.notifyError = function (error, innerSub) {\n        this.destination.error(error);\n    };\n    OuterSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.destination.complete();\n    };\n    return OuterSubscriber;\n}(Subscriber_1.Subscriber));\nexports.OuterSubscriber = OuterSubscriber;\n//# sourceMappingURL=OuterSubscriber.js.map","\"use strict\";\nfunction isDate(value) {\n    return value instanceof Date && !isNaN(+value);\n}\nexports.isDate = isDate;\n//# sourceMappingURL=isDate.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Emits the given constant value on the output Observable every time the source\n * Observable emits a value.\n *\n * <span class=\"informal\">Like {@link map}, but it maps every source value to\n * the same output value every time.</span>\n *\n * <img src=\"./img/mapTo.png\" width=\"100%\">\n *\n * Takes a constant `value` as argument, and emits that whenever the source\n * Observable emits a value. In other words, ignores the actual source value,\n * and simply uses the emission moment to know when to emit the given `value`.\n *\n * @example <caption>Map every click to the string 'Hi'</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var greetings = clicks.mapTo('Hi');\n * greetings.subscribe(x => console.log(x));\n *\n * @see {@link map}\n *\n * @param {any} value The value to map each source value to.\n * @return {Observable} An Observable that emits the given `value` every time\n * the source Observable emits something.\n * @method mapTo\n * @owner Observable\n */\nfunction mapTo(value) {\n    return function (source) { return source.lift(new MapToOperator(value)); };\n}\nexports.mapTo = mapTo;\nvar MapToOperator = (function () {\n    function MapToOperator(value) {\n        this.value = value;\n    }\n    MapToOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MapToSubscriber(subscriber, this.value));\n    };\n    return MapToOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MapToSubscriber = (function (_super) {\n    __extends(MapToSubscriber, _super);\n    function MapToSubscriber(destination, value) {\n        _super.call(this, destination);\n        this.value = value;\n    }\n    MapToSubscriber.prototype._next = function (x) {\n        this.destination.next(this.value);\n    };\n    return MapToSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=mapTo.js.map","\"use strict\";\nvar noop_1 = require('./noop');\n/* tslint:enable:max-line-length */\nfunction pipe() {\n    var fns = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        fns[_i - 0] = arguments[_i];\n    }\n    return pipeFromArray(fns);\n}\nexports.pipe = pipe;\n/* @internal */\nfunction pipeFromArray(fns) {\n    if (!fns) {\n        return noop_1.noop;\n    }\n    if (fns.length === 1) {\n        return fns[0];\n    }\n    return function piped(input) {\n        return fns.reduce(function (prev, fn) { return fn(prev); }, input);\n    };\n}\nexports.pipeFromArray = pipeFromArray;\n//# sourceMappingURL=pipe.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar FromObservable_1 = require('../observable/FromObservable');\nvar isArray_1 = require('../util/isArray');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/* tslint:enable:max-line-length */\n/**\n * When any of the provided Observable emits an complete or error notification, it immediately subscribes to the next one\n * that was passed.\n *\n * <span class=\"informal\">Execute series of Observables no matter what, even if it means swallowing errors.</span>\n *\n * <img src=\"./img/onErrorResumeNext.png\" width=\"100%\">\n *\n * `onErrorResumeNext` is an operator that accepts a series of Observables, provided either directly as\n * arguments or as an array. If no single Observable is provided, returned Observable will simply behave the same\n * as the source.\n *\n * `onErrorResumeNext` returns an Observable that starts by subscribing and re-emitting values from the source Observable.\n * When its stream of values ends - no matter if Observable completed or emitted an error - `onErrorResumeNext`\n * will subscribe to the first Observable that was passed as an argument to the method. It will start re-emitting\n * its values as well and - again - when that stream ends, `onErrorResumeNext` will proceed to subscribing yet another\n * Observable in provided series, no matter if previous Observable completed or ended with an error. This will\n * be happening until there is no more Observables left in the series, at which point returned Observable will\n * complete - even if the last subscribed stream ended with an error.\n *\n * `onErrorResumeNext` can be therefore thought of as version of {@link concat} operator, which is more permissive\n * when it comes to the errors emitted by its input Observables. While `concat` subscribes to the next Observable\n * in series only if previous one successfully completed, `onErrorResumeNext` subscribes even if it ended with\n * an error.\n *\n * Note that you do not get any access to errors emitted by the Observables. In particular do not\n * expect these errors to appear in error callback passed to {@link subscribe}. If you want to take\n * specific actions based on what error was emitted by an Observable, you should try out {@link catch} instead.\n *\n *\n * @example <caption>Subscribe to the next Observable after map fails</caption>\n * Rx.Observable.of(1, 2, 3, 0)\n *   .map(x => {\n *       if (x === 0) { throw Error(); }\n         return 10 / x;\n *   })\n *   .onErrorResumeNext(Rx.Observable.of(1, 2, 3))\n *   .subscribe(\n *     val => console.log(val),\n *     err => console.log(err),          // Will never be called.\n *     () => console.log('that\\'s it!')\n *   );\n *\n * // Logs:\n * // 10\n * // 5\n * // 3.3333333333333335\n * // 1\n * // 2\n * // 3\n * // \"that's it!\"\n *\n * @see {@link concat}\n * @see {@link catch}\n *\n * @param {...ObservableInput} observables Observables passed either directly or as an array.\n * @return {Observable} An Observable that emits values from source Observable, but - if it errors - subscribes\n * to the next passed Observable and so on, until it completes or runs out of Observables.\n * @method onErrorResumeNext\n * @owner Observable\n */\nfunction onErrorResumeNext() {\n    var nextSources = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        nextSources[_i - 0] = arguments[_i];\n    }\n    if (nextSources.length === 1 && isArray_1.isArray(nextSources[0])) {\n        nextSources = nextSources[0];\n    }\n    return function (source) { return source.lift(new OnErrorResumeNextOperator(nextSources)); };\n}\nexports.onErrorResumeNext = onErrorResumeNext;\n/* tslint:enable:max-line-length */\nfunction onErrorResumeNextStatic() {\n    var nextSources = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        nextSources[_i - 0] = arguments[_i];\n    }\n    var source = null;\n    if (nextSources.length === 1 && isArray_1.isArray(nextSources[0])) {\n        nextSources = nextSources[0];\n    }\n    source = nextSources.shift();\n    return new FromObservable_1.FromObservable(source, null).lift(new OnErrorResumeNextOperator(nextSources));\n}\nexports.onErrorResumeNextStatic = onErrorResumeNextStatic;\nvar OnErrorResumeNextOperator = (function () {\n    function OnErrorResumeNextOperator(nextSources) {\n        this.nextSources = nextSources;\n    }\n    OnErrorResumeNextOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new OnErrorResumeNextSubscriber(subscriber, this.nextSources));\n    };\n    return OnErrorResumeNextOperator;\n}());\nvar OnErrorResumeNextSubscriber = (function (_super) {\n    __extends(OnErrorResumeNextSubscriber, _super);\n    function OnErrorResumeNextSubscriber(destination, nextSources) {\n        _super.call(this, destination);\n        this.destination = destination;\n        this.nextSources = nextSources;\n    }\n    OnErrorResumeNextSubscriber.prototype.notifyError = function (error, innerSub) {\n        this.subscribeToNextSource();\n    };\n    OnErrorResumeNextSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.subscribeToNextSource();\n    };\n    OnErrorResumeNextSubscriber.prototype._error = function (err) {\n        this.subscribeToNextSource();\n    };\n    OnErrorResumeNextSubscriber.prototype._complete = function () {\n        this.subscribeToNextSource();\n    };\n    OnErrorResumeNextSubscriber.prototype.subscribeToNextSource = function () {\n        var next = this.nextSources.shift();\n        if (next) {\n            this.add(subscribeToResult_1.subscribeToResult(this, next));\n        }\n        else {\n            this.destination.complete();\n        }\n    };\n    return OnErrorResumeNextSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=onErrorResumeNext.js.map","\"use strict\";\nvar RangeObservable_1 = require('./RangeObservable');\nexports.range = RangeObservable_1.RangeObservable.create;\n//# sourceMappingURL=range.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar throttleTime_1 = require('../../operator/throttleTime');\nObservable_1.Observable.prototype.throttleTime = throttleTime_1.throttleTime;\n//# sourceMappingURL=throttleTime.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar map_1 = require('../../operator/map');\nObservable_1.Observable.prototype.map = map_1.map;\n//# sourceMappingURL=map.js.map","\"use strict\";\nvar Observable_1 = require('../../../Observable');\nvar ajax_1 = require('../../../observable/dom/ajax');\nObservable_1.Observable.ajax = ajax_1.ajax;\n//# sourceMappingURL=ajax.js.map","\"use strict\";\nvar root_1 = require('./util/root');\nvar toSubscriber_1 = require('./util/toSubscriber');\nvar observable_1 = require('./symbol/observable');\nvar pipe_1 = require('./util/pipe');\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nvar Observable = (function () {\n    /**\n     * @constructor\n     * @param {Function} subscribe the function that is called when the Observable is\n     * initially subscribed to. This function is given a Subscriber, to which new values\n     * can be `next`ed, or an `error` method can be called to raise an error, or\n     * `complete` can be called to notify of a successful completion.\n     */\n    function Observable(subscribe) {\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    /**\n     * Creates a new Observable, with this Observable as the source, and the passed\n     * operator defined as the new observable's operator.\n     * @method lift\n     * @param {Operator} operator the operator defining the operation to take on the observable\n     * @return {Observable} a new observable with the Operator applied\n     */\n    Observable.prototype.lift = function (operator) {\n        var observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    };\n    /**\n     * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n     *\n     * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n     *\n     * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n     * might be for example a function that you passed to a {@link create} static factory, but most of the time it is\n     * a library implementation, which defines what and when will be emitted by an Observable. This means that calling\n     * `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n     * thought.\n     *\n     * Apart from starting the execution of an Observable, this method allows you to listen for values\n     * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n     * following ways.\n     *\n     * The first way is creating an object that implements {@link Observer} interface. It should have methods\n     * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n     * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do\n     * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n     * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n     * do anything, you can simply omit it. Note however, that if `error` method is not provided, all errors will\n     * be left uncaught.\n     *\n     * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n     * This means you can provide three functions as arguments to `subscribe`, where first function is equivalent\n     * of a `next` method, second of an `error` method and third of a `complete` method. Just as in case of Observer,\n     * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,\n     * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n     * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.\n     *\n     * Whatever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n     * This object allows you to call `unsubscribe` on it, which in turn will stop work that an Observable does and will clean\n     * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n     * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n     *\n     * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n     * It is an Observable itself that decides when these functions will be called. For example {@link of}\n     * by default emits all its values synchronously. Always check documentation for how given Observable\n     * will behave when subscribed and if its default behavior can be modified with a {@link Scheduler}.\n     *\n     * @example <caption>Subscribe with an Observer</caption>\n     * const sumObserver = {\n     *   sum: 0,\n     *   next(value) {\n     *     console.log('Adding: ' + value);\n     *     this.sum = this.sum + value;\n     *   },\n     *   error() { // We actually could just remove this method,\n     *   },        // since we do not really care about errors right now.\n     *   complete() {\n     *     console.log('Sum equals: ' + this.sum);\n     *   }\n     * };\n     *\n     * Rx.Observable.of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n     * .subscribe(sumObserver);\n     *\n     * // Logs:\n     * // \"Adding: 1\"\n     * // \"Adding: 2\"\n     * // \"Adding: 3\"\n     * // \"Sum equals: 6\"\n     *\n     *\n     * @example <caption>Subscribe with functions</caption>\n     * let sum = 0;\n     *\n     * Rx.Observable.of(1, 2, 3)\n     * .subscribe(\n     *   function(value) {\n     *     console.log('Adding: ' + value);\n     *     sum = sum + value;\n     *   },\n     *   undefined,\n     *   function() {\n     *     console.log('Sum equals: ' + sum);\n     *   }\n     * );\n     *\n     * // Logs:\n     * // \"Adding: 1\"\n     * // \"Adding: 2\"\n     * // \"Adding: 3\"\n     * // \"Sum equals: 6\"\n     *\n     *\n     * @example <caption>Cancel a subscription</caption>\n     * const subscription = Rx.Observable.interval(1000).subscribe(\n     *   num => console.log(num),\n     *   undefined,\n     *   () => console.log('completed!') // Will not be called, even\n     * );                                // when cancelling subscription\n     *\n     *\n     * setTimeout(() => {\n     *   subscription.unsubscribe();\n     *   console.log('unsubscribed!');\n     * }, 2500);\n     *\n     * // Logs:\n     * // 0 after 1s\n     * // 1 after 2s\n     * // \"unsubscribed!\" after 2.5s\n     *\n     *\n     * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n     *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n     *  Observable.\n     * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n     *  the error will be thrown as unhandled.\n     * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n     * @return {ISubscription} a subscription reference to the registered handlers\n     * @method subscribe\n     */\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var operator = this.operator;\n        var sink = toSubscriber_1.toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            operator.call(sink, this.source);\n        }\n        else {\n            sink.add(this.source || !sink.syncErrorThrowable ? this._subscribe(sink) : this._trySubscribe(sink));\n        }\n        if (sink.syncErrorThrowable) {\n            sink.syncErrorThrowable = false;\n            if (sink.syncErrorThrown) {\n                throw sink.syncErrorValue;\n            }\n        }\n        return sink;\n    };\n    Observable.prototype._trySubscribe = function (sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            sink.syncErrorThrown = true;\n            sink.syncErrorValue = err;\n            sink.error(err);\n        }\n    };\n    /**\n     * @method forEach\n     * @param {Function} next a handler for each value emitted by the observable\n     * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise\n     * @return {Promise} a promise that either resolves on observable completion or\n     *  rejects with the handled error\n     */\n    Observable.prototype.forEach = function (next, PromiseCtor) {\n        var _this = this;\n        if (!PromiseCtor) {\n            if (root_1.root.Rx && root_1.root.Rx.config && root_1.root.Rx.config.Promise) {\n                PromiseCtor = root_1.root.Rx.config.Promise;\n            }\n            else if (root_1.root.Promise) {\n                PromiseCtor = root_1.root.Promise;\n            }\n        }\n        if (!PromiseCtor) {\n            throw new Error('no Promise impl found');\n        }\n        return new PromiseCtor(function (resolve, reject) {\n            // Must be declared in a separate statement to avoid a RefernceError when\n            // accessing subscription below in the closure due to Temporal Dead Zone.\n            var subscription;\n            subscription = _this.subscribe(function (value) {\n                if (subscription) {\n                    // if there is a subscription, then we can surmise\n                    // the next handling is asynchronous. Any errors thrown\n                    // need to be rejected explicitly and unsubscribe must be\n                    // called manually\n                    try {\n                        next(value);\n                    }\n                    catch (err) {\n                        reject(err);\n                        subscription.unsubscribe();\n                    }\n                }\n                else {\n                    // if there is NO subscription, then we're getting a nexted\n                    // value synchronously during subscription. We can just call it.\n                    // If it errors, Observable's `subscribe` will ensure the\n                    // unsubscription logic is called, then synchronously rethrow the error.\n                    // After that, Promise will trap the error and send it\n                    // down the rejection path.\n                    next(value);\n                }\n            }, reject, resolve);\n        });\n    };\n    /** @deprecated internal use only */ Observable.prototype._subscribe = function (subscriber) {\n        return this.source.subscribe(subscriber);\n    };\n    /**\n     * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n     * @method Symbol.observable\n     * @return {Observable} this instance of the observable\n     */\n    Observable.prototype[observable_1.observable] = function () {\n        return this;\n    };\n    /* tslint:enable:max-line-length */\n    /**\n     * Used to stitch together functional operators into a chain.\n     * @method pipe\n     * @return {Observable} the Observable result of all of the operators having\n     * been called in the order they were passed in.\n     *\n     * @example\n     *\n     * import { map, filter, scan } from 'rxjs/operators';\n     *\n     * Rx.Observable.interval(1000)\n     *   .pipe(\n     *     filter(x => x % 2 === 0),\n     *     map(x => x + x),\n     *     scan((acc, x) => acc + x)\n     *   )\n     *   .subscribe(x => console.log(x))\n     */\n    Observable.prototype.pipe = function () {\n        var operations = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operations[_i - 0] = arguments[_i];\n        }\n        if (operations.length === 0) {\n            return this;\n        }\n        return pipe_1.pipeFromArray(operations)(this);\n    };\n    /* tslint:enable:max-line-length */\n    Observable.prototype.toPromise = function (PromiseCtor) {\n        var _this = this;\n        if (!PromiseCtor) {\n            if (root_1.root.Rx && root_1.root.Rx.config && root_1.root.Rx.config.Promise) {\n                PromiseCtor = root_1.root.Rx.config.Promise;\n            }\n            else if (root_1.root.Promise) {\n                PromiseCtor = root_1.root.Promise;\n            }\n        }\n        if (!PromiseCtor) {\n            throw new Error('no Promise impl found');\n        }\n        return new PromiseCtor(function (resolve, reject) {\n            var value;\n            _this.subscribe(function (x) { return value = x; }, function (err) { return reject(err); }, function () { return resolve(value); });\n        });\n    };\n    // HACK: Since TypeScript inherits static properties too, we have to\n    // fight against TypeScript here so Subject can have a different static create signature\n    /**\n     * Creates a new cold Observable by calling the Observable constructor\n     * @static true\n     * @owner Observable\n     * @method create\n     * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n     * @return {Observable} a new cold observable\n     */\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\nexports.Observable = Observable;\n//# sourceMappingURL=Observable.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar delayWhen_1 = require('../../operator/delayWhen');\nObservable_1.Observable.prototype.delayWhen = delayWhen_1.delayWhen;\n//# sourceMappingURL=delayWhen.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ArrayObservable_1 = require('../observable/ArrayObservable');\nvar isArray_1 = require('../util/isArray');\nvar Subscriber_1 = require('../Subscriber');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\nvar iterator_1 = require('../symbol/iterator');\n/* tslint:enable:max-line-length */\n/**\n * @param observables\n * @return {Observable<R>}\n * @method zip\n * @owner Observable\n */\nfunction zip() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    return function zipOperatorFunction(source) {\n        return source.lift.call(zipStatic.apply(void 0, [source].concat(observables)));\n    };\n}\nexports.zip = zip;\n/* tslint:enable:max-line-length */\n/**\n * Combines multiple Observables to create an Observable whose values are calculated from the values, in order, of each\n * of its input Observables.\n *\n * If the latest parameter is a function, this function is used to compute the created value from the input values.\n * Otherwise, an array of the input values is returned.\n *\n * @example <caption>Combine age and name from different sources</caption>\n *\n * let age$ = Observable.of<number>(27, 25, 29);\n * let name$ = Observable.of<string>('Foo', 'Bar', 'Beer');\n * let isDev$ = Observable.of<boolean>(true, true, false);\n *\n * Observable\n *     .zip(age$,\n *          name$,\n *          isDev$,\n *          (age: number, name: string, isDev: boolean) => ({ age, name, isDev }))\n *     .subscribe(x => console.log(x));\n *\n * // outputs\n * // { age: 27, name: 'Foo', isDev: true }\n * // { age: 25, name: 'Bar', isDev: true }\n * // { age: 29, name: 'Beer', isDev: false }\n *\n * @param observables\n * @return {Observable<R>}\n * @static true\n * @name zip\n * @owner Observable\n */\nfunction zipStatic() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    var project = observables[observables.length - 1];\n    if (typeof project === 'function') {\n        observables.pop();\n    }\n    return new ArrayObservable_1.ArrayObservable(observables).lift(new ZipOperator(project));\n}\nexports.zipStatic = zipStatic;\nvar ZipOperator = (function () {\n    function ZipOperator(project) {\n        this.project = project;\n    }\n    ZipOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ZipSubscriber(subscriber, this.project));\n    };\n    return ZipOperator;\n}());\nexports.ZipOperator = ZipOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ZipSubscriber = (function (_super) {\n    __extends(ZipSubscriber, _super);\n    function ZipSubscriber(destination, project, values) {\n        if (values === void 0) { values = Object.create(null); }\n        _super.call(this, destination);\n        this.iterators = [];\n        this.active = 0;\n        this.project = (typeof project === 'function') ? project : null;\n        this.values = values;\n    }\n    ZipSubscriber.prototype._next = function (value) {\n        var iterators = this.iterators;\n        if (isArray_1.isArray(value)) {\n            iterators.push(new StaticArrayIterator(value));\n        }\n        else if (typeof value[iterator_1.iterator] === 'function') {\n            iterators.push(new StaticIterator(value[iterator_1.iterator]()));\n        }\n        else {\n            iterators.push(new ZipBufferIterator(this.destination, this, value));\n        }\n    };\n    ZipSubscriber.prototype._complete = function () {\n        var iterators = this.iterators;\n        var len = iterators.length;\n        if (len === 0) {\n            this.destination.complete();\n            return;\n        }\n        this.active = len;\n        for (var i = 0; i < len; i++) {\n            var iterator = iterators[i];\n            if (iterator.stillUnsubscribed) {\n                this.add(iterator.subscribe(iterator, i));\n            }\n            else {\n                this.active--; // not an observable\n            }\n        }\n    };\n    ZipSubscriber.prototype.notifyInactive = function () {\n        this.active--;\n        if (this.active === 0) {\n            this.destination.complete();\n        }\n    };\n    ZipSubscriber.prototype.checkIterators = function () {\n        var iterators = this.iterators;\n        var len = iterators.length;\n        var destination = this.destination;\n        // abort if not all of them have values\n        for (var i = 0; i < len; i++) {\n            var iterator = iterators[i];\n            if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {\n                return;\n            }\n        }\n        var shouldComplete = false;\n        var args = [];\n        for (var i = 0; i < len; i++) {\n            var iterator = iterators[i];\n            var result = iterator.next();\n            // check to see if it's completed now that you've gotten\n            // the next value.\n            if (iterator.hasCompleted()) {\n                shouldComplete = true;\n            }\n            if (result.done) {\n                destination.complete();\n                return;\n            }\n            args.push(result.value);\n        }\n        if (this.project) {\n            this._tryProject(args);\n        }\n        else {\n            destination.next(args);\n        }\n        if (shouldComplete) {\n            destination.complete();\n        }\n    };\n    ZipSubscriber.prototype._tryProject = function (args) {\n        var result;\n        try {\n            result = this.project.apply(this, args);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return ZipSubscriber;\n}(Subscriber_1.Subscriber));\nexports.ZipSubscriber = ZipSubscriber;\nvar StaticIterator = (function () {\n    function StaticIterator(iterator) {\n        this.iterator = iterator;\n        this.nextResult = iterator.next();\n    }\n    StaticIterator.prototype.hasValue = function () {\n        return true;\n    };\n    StaticIterator.prototype.next = function () {\n        var result = this.nextResult;\n        this.nextResult = this.iterator.next();\n        return result;\n    };\n    StaticIterator.prototype.hasCompleted = function () {\n        var nextResult = this.nextResult;\n        return nextResult && nextResult.done;\n    };\n    return StaticIterator;\n}());\nvar StaticArrayIterator = (function () {\n    function StaticArrayIterator(array) {\n        this.array = array;\n        this.index = 0;\n        this.length = 0;\n        this.length = array.length;\n    }\n    StaticArrayIterator.prototype[iterator_1.iterator] = function () {\n        return this;\n    };\n    StaticArrayIterator.prototype.next = function (value) {\n        var i = this.index++;\n        var array = this.array;\n        return i < this.length ? { value: array[i], done: false } : { value: null, done: true };\n    };\n    StaticArrayIterator.prototype.hasValue = function () {\n        return this.array.length > this.index;\n    };\n    StaticArrayIterator.prototype.hasCompleted = function () {\n        return this.array.length === this.index;\n    };\n    return StaticArrayIterator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ZipBufferIterator = (function (_super) {\n    __extends(ZipBufferIterator, _super);\n    function ZipBufferIterator(destination, parent, observable) {\n        _super.call(this, destination);\n        this.parent = parent;\n        this.observable = observable;\n        this.stillUnsubscribed = true;\n        this.buffer = [];\n        this.isComplete = false;\n    }\n    ZipBufferIterator.prototype[iterator_1.iterator] = function () {\n        return this;\n    };\n    // NOTE: there is actually a name collision here with Subscriber.next and Iterator.next\n    //    this is legit because `next()` will never be called by a subscription in this case.\n    ZipBufferIterator.prototype.next = function () {\n        var buffer = this.buffer;\n        if (buffer.length === 0 && this.isComplete) {\n            return { value: null, done: true };\n        }\n        else {\n            return { value: buffer.shift(), done: false };\n        }\n    };\n    ZipBufferIterator.prototype.hasValue = function () {\n        return this.buffer.length > 0;\n    };\n    ZipBufferIterator.prototype.hasCompleted = function () {\n        return this.buffer.length === 0 && this.isComplete;\n    };\n    ZipBufferIterator.prototype.notifyComplete = function () {\n        if (this.buffer.length > 0) {\n            this.isComplete = true;\n            this.parent.notifyInactive();\n        }\n        else {\n            this.destination.complete();\n        }\n    };\n    ZipBufferIterator.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.buffer.push(innerValue);\n        this.parent.checkIterators();\n    };\n    ZipBufferIterator.prototype.subscribe = function (value, index) {\n        return subscribeToResult_1.subscribeToResult(this, this.observable, this, index);\n    };\n    return ZipBufferIterator;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=zip.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar exhaustMap_1 = require('../../operator/exhaustMap');\nObservable_1.Observable.prototype.exhaustMap = exhaustMap_1.exhaustMap;\n//# sourceMappingURL=exhaustMap.js.map","\"use strict\";\nvar Subject_1 = require('../Subject');\nvar multicast_1 = require('./multicast');\n/* tslint:enable:max-line-length */\n/**\n * Returns a ConnectableObservable, which is a variety of Observable that waits until its connect method is called\n * before it begins emitting items to those Observers that have subscribed to it.\n *\n * <img src=\"./img/publish.png\" width=\"100%\">\n *\n * @param {Function} [selector] - Optional selector function which can use the multicasted source sequence as many times\n * as needed, without causing multiple subscriptions to the source sequence.\n * Subscribers to the given source will receive all notifications of the source from the time of the subscription on.\n * @return A ConnectableObservable that upon connection causes the source Observable to emit items to its Observers.\n * @method publish\n * @owner Observable\n */\nfunction publish(selector) {\n    return selector ?\n        multicast_1.multicast(function () { return new Subject_1.Subject(); }, selector) :\n        multicast_1.multicast(new Subject_1.Subject());\n}\nexports.publish = publish;\n//# sourceMappingURL=publish.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when an element was queried at a certain index of an\n * Observable, but no such index or position exists in that sequence.\n *\n * @see {@link elementAt}\n * @see {@link take}\n * @see {@link takeLast}\n *\n * @class ArgumentOutOfRangeError\n */\nvar ArgumentOutOfRangeError = (function (_super) {\n    __extends(ArgumentOutOfRangeError, _super);\n    function ArgumentOutOfRangeError() {\n        var err = _super.call(this, 'argument out of range');\n        this.name = err.name = 'ArgumentOutOfRangeError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return ArgumentOutOfRangeError;\n}(Error));\nexports.ArgumentOutOfRangeError = ArgumentOutOfRangeError;\n//# sourceMappingURL=ArgumentOutOfRangeError.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar IfObservable = (function (_super) {\n    __extends(IfObservable, _super);\n    function IfObservable(condition, thenSource, elseSource) {\n        _super.call(this);\n        this.condition = condition;\n        this.thenSource = thenSource;\n        this.elseSource = elseSource;\n    }\n    IfObservable.create = function (condition, thenSource, elseSource) {\n        return new IfObservable(condition, thenSource, elseSource);\n    };\n    /** @deprecated internal use only */ IfObservable.prototype._subscribe = function (subscriber) {\n        var _a = this, condition = _a.condition, thenSource = _a.thenSource, elseSource = _a.elseSource;\n        return new IfSubscriber(subscriber, condition, thenSource, elseSource);\n    };\n    return IfObservable;\n}(Observable_1.Observable));\nexports.IfObservable = IfObservable;\nvar IfSubscriber = (function (_super) {\n    __extends(IfSubscriber, _super);\n    function IfSubscriber(destination, condition, thenSource, elseSource) {\n        _super.call(this, destination);\n        this.condition = condition;\n        this.thenSource = thenSource;\n        this.elseSource = elseSource;\n        this.tryIf();\n    }\n    IfSubscriber.prototype.tryIf = function () {\n        var _a = this, condition = _a.condition, thenSource = _a.thenSource, elseSource = _a.elseSource;\n        var result;\n        try {\n            result = condition();\n            var source = result ? thenSource : elseSource;\n            if (source) {\n                this.add(subscribeToResult_1.subscribeToResult(this, source));\n            }\n            else {\n                this._complete();\n            }\n        }\n        catch (err) {\n            this._error(err);\n        }\n    };\n    return IfSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=IfObservable.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar forkJoin_1 = require('../../observable/forkJoin');\nObservable_1.Observable.forkJoin = forkJoin_1.forkJoin;\n//# sourceMappingURL=forkJoin.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar tryCatch_1 = require('../util/tryCatch');\nvar errorObject_1 = require('../util/errorObject');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\n/**\n * Applies an accumulator function over the source Observable where the\n * accumulator function itself returns an Observable, then each intermediate\n * Observable returned is merged into the output Observable.\n *\n * <span class=\"informal\">It's like {@link scan}, but the Observables returned\n * by the accumulator are merged into the outer Observable.</span>\n *\n * @example <caption>Count the number of click events</caption>\n * const click$ = Rx.Observable.fromEvent(document, 'click');\n * const one$ = click$.mapTo(1);\n * const seed = 0;\n * const count$ = one$.mergeScan((acc, one) => Rx.Observable.of(acc + one), seed);\n * count$.subscribe(x => console.log(x));\n *\n * // Results:\n * 1\n * 2\n * 3\n * 4\n * // ...and so on for each click\n *\n * @param {function(acc: R, value: T): Observable<R>} accumulator\n * The accumulator function called on each source value.\n * @param seed The initial accumulation value.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of\n * input Observables being subscribed to concurrently.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method mergeScan\n * @owner Observable\n */\nfunction mergeScan(accumulator, seed, concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    return function (source) { return source.lift(new MergeScanOperator(accumulator, seed, concurrent)); };\n}\nexports.mergeScan = mergeScan;\nvar MergeScanOperator = (function () {\n    function MergeScanOperator(accumulator, seed, concurrent) {\n        this.accumulator = accumulator;\n        this.seed = seed;\n        this.concurrent = concurrent;\n    }\n    MergeScanOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MergeScanSubscriber(subscriber, this.accumulator, this.seed, this.concurrent));\n    };\n    return MergeScanOperator;\n}());\nexports.MergeScanOperator = MergeScanOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MergeScanSubscriber = (function (_super) {\n    __extends(MergeScanSubscriber, _super);\n    function MergeScanSubscriber(destination, accumulator, acc, concurrent) {\n        _super.call(this, destination);\n        this.accumulator = accumulator;\n        this.acc = acc;\n        this.concurrent = concurrent;\n        this.hasValue = false;\n        this.hasCompleted = false;\n        this.buffer = [];\n        this.active = 0;\n        this.index = 0;\n    }\n    MergeScanSubscriber.prototype._next = function (value) {\n        if (this.active < this.concurrent) {\n            var index = this.index++;\n            var ish = tryCatch_1.tryCatch(this.accumulator)(this.acc, value);\n            var destination = this.destination;\n            if (ish === errorObject_1.errorObject) {\n                destination.error(errorObject_1.errorObject.e);\n            }\n            else {\n                this.active++;\n                this._innerSub(ish, value, index);\n            }\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    MergeScanSubscriber.prototype._innerSub = function (ish, value, index) {\n        this.add(subscribeToResult_1.subscribeToResult(this, ish, value, index));\n    };\n    MergeScanSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            if (this.hasValue === false) {\n                this.destination.next(this.acc);\n            }\n            this.destination.complete();\n        }\n    };\n    MergeScanSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var destination = this.destination;\n        this.acc = innerValue;\n        this.hasValue = true;\n        destination.next(innerValue);\n    };\n    MergeScanSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            if (this.hasValue === false) {\n                this.destination.next(this.acc);\n            }\n            this.destination.complete();\n        }\n    };\n    return MergeScanSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nexports.MergeScanSubscriber = MergeScanSubscriber;\n//# sourceMappingURL=mergeScan.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar tryCatch_1 = require('../util/tryCatch');\nvar errorObject_1 = require('../util/errorObject');\n/**\n * Compares all values of two observables in sequence using an optional comparor function\n * and returns an observable of a single boolean value representing whether or not the two sequences\n * are equal.\n *\n * <span class=\"informal\">Checks to see of all values emitted by both observables are equal, in order.</span>\n *\n * <img src=\"./img/sequenceEqual.png\" width=\"100%\">\n *\n * `sequenceEqual` subscribes to two observables and buffers incoming values from each observable. Whenever either\n * observable emits a value, the value is buffered and the buffers are shifted and compared from the bottom\n * up; If any value pair doesn't match, the returned observable will emit `false` and complete. If one of the\n * observables completes, the operator will wait for the other observable to complete; If the other\n * observable emits before completing, the returned observable will emit `false` and complete. If one observable never\n * completes or emits after the other complets, the returned observable will never complete.\n *\n * @example <caption>figure out if the Konami code matches</caption>\n * var code = Rx.Observable.from([\n *  \"ArrowUp\",\n *  \"ArrowUp\",\n *  \"ArrowDown\",\n *  \"ArrowDown\",\n *  \"ArrowLeft\",\n *  \"ArrowRight\",\n *  \"ArrowLeft\",\n *  \"ArrowRight\",\n *  \"KeyB\",\n *  \"KeyA\",\n *  \"Enter\" // no start key, clearly.\n * ]);\n *\n * var keys = Rx.Observable.fromEvent(document, 'keyup')\n *  .map(e => e.code);\n * var matches = keys.bufferCount(11, 1)\n *  .mergeMap(\n *    last11 =>\n *      Rx.Observable.from(last11)\n *        .sequenceEqual(code)\n *   );\n * matches.subscribe(matched => console.log('Successful cheat at Contra? ', matched));\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n * @see {@link withLatestFrom}\n *\n * @param {Observable} compareTo The observable sequence to compare the source sequence to.\n * @param {function} [comparor] An optional function to compare each value pair\n * @return {Observable} An Observable of a single boolean value representing whether or not\n * the values emitted by both observables were equal in sequence.\n * @method sequenceEqual\n * @owner Observable\n */\nfunction sequenceEqual(compareTo, comparor) {\n    return function (source) { return source.lift(new SequenceEqualOperator(compareTo, comparor)); };\n}\nexports.sequenceEqual = sequenceEqual;\nvar SequenceEqualOperator = (function () {\n    function SequenceEqualOperator(compareTo, comparor) {\n        this.compareTo = compareTo;\n        this.comparor = comparor;\n    }\n    SequenceEqualOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SequenceEqualSubscriber(subscriber, this.compareTo, this.comparor));\n    };\n    return SequenceEqualOperator;\n}());\nexports.SequenceEqualOperator = SequenceEqualOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SequenceEqualSubscriber = (function (_super) {\n    __extends(SequenceEqualSubscriber, _super);\n    function SequenceEqualSubscriber(destination, compareTo, comparor) {\n        _super.call(this, destination);\n        this.compareTo = compareTo;\n        this.comparor = comparor;\n        this._a = [];\n        this._b = [];\n        this._oneComplete = false;\n        this.add(compareTo.subscribe(new SequenceEqualCompareToSubscriber(destination, this)));\n    }\n    SequenceEqualSubscriber.prototype._next = function (value) {\n        if (this._oneComplete && this._b.length === 0) {\n            this.emit(false);\n        }\n        else {\n            this._a.push(value);\n            this.checkValues();\n        }\n    };\n    SequenceEqualSubscriber.prototype._complete = function () {\n        if (this._oneComplete) {\n            this.emit(this._a.length === 0 && this._b.length === 0);\n        }\n        else {\n            this._oneComplete = true;\n        }\n    };\n    SequenceEqualSubscriber.prototype.checkValues = function () {\n        var _c = this, _a = _c._a, _b = _c._b, comparor = _c.comparor;\n        while (_a.length > 0 && _b.length > 0) {\n            var a = _a.shift();\n            var b = _b.shift();\n            var areEqual = false;\n            if (comparor) {\n                areEqual = tryCatch_1.tryCatch(comparor)(a, b);\n                if (areEqual === errorObject_1.errorObject) {\n                    this.destination.error(errorObject_1.errorObject.e);\n                }\n            }\n            else {\n                areEqual = a === b;\n            }\n            if (!areEqual) {\n                this.emit(false);\n            }\n        }\n    };\n    SequenceEqualSubscriber.prototype.emit = function (value) {\n        var destination = this.destination;\n        destination.next(value);\n        destination.complete();\n    };\n    SequenceEqualSubscriber.prototype.nextB = function (value) {\n        if (this._oneComplete && this._a.length === 0) {\n            this.emit(false);\n        }\n        else {\n            this._b.push(value);\n            this.checkValues();\n        }\n    };\n    return SequenceEqualSubscriber;\n}(Subscriber_1.Subscriber));\nexports.SequenceEqualSubscriber = SequenceEqualSubscriber;\nvar SequenceEqualCompareToSubscriber = (function (_super) {\n    __extends(SequenceEqualCompareToSubscriber, _super);\n    function SequenceEqualCompareToSubscriber(destination, parent) {\n        _super.call(this, destination);\n        this.parent = parent;\n    }\n    SequenceEqualCompareToSubscriber.prototype._next = function (value) {\n        this.parent.nextB(value);\n    };\n    SequenceEqualCompareToSubscriber.prototype._error = function (err) {\n        this.parent.error(err);\n    };\n    SequenceEqualCompareToSubscriber.prototype._complete = function () {\n        this.parent._complete();\n    };\n    return SequenceEqualCompareToSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=sequenceEqual.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar distinct_1 = require('../../operator/distinct');\nObservable_1.Observable.prototype.distinct = distinct_1.distinct;\n//# sourceMappingURL=distinct.js.map","var has = require('../internals/has');\nvar ownKeys = require('../internals/own-keys');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar definePropertyModule = require('../internals/object-define-property');\n\nmodule.exports = function (target, source) {\n  var keys = ownKeys(source);\n  var defineProperty = definePropertyModule.f;\n  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    if (!has(target, key)) defineProperty(target, key, getOwnPropertyDescriptor(source, key));\n  }\n};\n","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar takeUntil_1 = require('../../operator/takeUntil');\nObservable_1.Observable.prototype.takeUntil = takeUntil_1.takeUntil;\n//# sourceMappingURL=takeUntil.js.map","\"use strict\";\nvar zip_1 = require('../operators/zip');\n/* tslint:enable:max-line-length */\n/**\n * @param observables\n * @return {Observable<R>}\n * @method zip\n * @owner Observable\n */\nfunction zipProto() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    return zip_1.zip.apply(void 0, observables)(this);\n}\nexports.zipProto = zipProto;\n//# sourceMappingURL=zip.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar retry_1 = require('../../operator/retry');\nObservable_1.Observable.prototype.retry = retry_1.retry;\n//# sourceMappingURL=retry.js.map","\"use strict\";\nvar SubscriptionLog_1 = require('./SubscriptionLog');\nvar SubscriptionLoggable = (function () {\n    function SubscriptionLoggable() {\n        this.subscriptions = [];\n    }\n    SubscriptionLoggable.prototype.logSubscribedFrame = function () {\n        this.subscriptions.push(new SubscriptionLog_1.SubscriptionLog(this.scheduler.now()));\n        return this.subscriptions.length - 1;\n    };\n    SubscriptionLoggable.prototype.logUnsubscribedFrame = function (index) {\n        var subscriptionLogs = this.subscriptions;\n        var oldSubscriptionLog = subscriptionLogs[index];\n        subscriptionLogs[index] = new SubscriptionLog_1.SubscriptionLog(oldSubscriptionLog.subscribedFrame, this.scheduler.now());\n    };\n    return SubscriptionLoggable;\n}());\nexports.SubscriptionLoggable = SubscriptionLoggable;\n//# sourceMappingURL=SubscriptionLoggable.js.map","\"use strict\";\nvar AsyncSubject_1 = require('../AsyncSubject');\nvar multicast_1 = require('./multicast');\nfunction publishLast() {\n    return function (source) { return multicast_1.multicast(new AsyncSubject_1.AsyncSubject())(source); };\n}\nexports.publishLast = publishLast;\n//# sourceMappingURL=publishLast.js.map","\"use strict\";\nvar buffer_1 = require('../operators/buffer');\n/**\n * Buffers the source Observable values until `closingNotifier` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when another Observable emits.</span>\n *\n * <img src=\"./img/buffer.png\" width=\"100%\">\n *\n * Buffers the incoming Observable values until the given `closingNotifier`\n * Observable emits a value, at which point it emits the buffer on the output\n * Observable and starts a new buffer internally, awaiting the next time\n * `closingNotifier` emits.\n *\n * @example <caption>On every click, emit array of most recent interval events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var interval = Rx.Observable.interval(1000);\n * var buffered = interval.buffer(clicks);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link window}\n *\n * @param {Observable<any>} closingNotifier An Observable that signals the\n * buffer to be emitted on the output Observable.\n * @return {Observable<T[]>} An Observable of buffers, which are arrays of\n * values.\n * @method buffer\n * @owner Observable\n */\nfunction buffer(closingNotifier) {\n    return buffer_1.buffer(closingNotifier)(this);\n}\nexports.buffer = buffer;\n//# sourceMappingURL=buffer.js.map","\"use strict\";\nvar TimerObservable_1 = require('./TimerObservable');\nexports.timer = TimerObservable_1.TimerObservable.create;\n//# sourceMappingURL=timer.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar from_1 = require('../../observable/from');\nObservable_1.Observable.from = from_1.from;\n//# sourceMappingURL=from.js.map","\"use strict\";\nvar root_1 = require('../util/root');\nfunction getSymbolObservable(context) {\n    var $$observable;\n    var Symbol = context.Symbol;\n    if (typeof Symbol === 'function') {\n        if (Symbol.observable) {\n            $$observable = Symbol.observable;\n        }\n        else {\n            $$observable = Symbol('observable');\n            Symbol.observable = $$observable;\n        }\n    }\n    else {\n        $$observable = '@@observable';\n    }\n    return $$observable;\n}\nexports.getSymbolObservable = getSymbolObservable;\nexports.observable = getSymbolObservable(root_1.root);\n/**\n * @deprecated use observable instead\n */\nexports.$$observable = exports.observable;\n//# sourceMappingURL=observable.js.map","\"use strict\";\nvar switchMapTo_1 = require('../operators/switchMapTo');\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to the same Observable which is flattened multiple\n * times with {@link switch} in the output Observable.\n *\n * <span class=\"informal\">It's like {@link switchMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * <img src=\"./img/switchMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. The output Observables\n * emits values only from the most recently emitted instance of\n * `innerObservable`.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMapTo(Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMapTo}\n * @see {@link switch}\n * @see {@link switchMap}\n * @see {@link mergeMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable` (and optionally transformed through `resultSelector`) every\n * time a value is emitted on the source Observable, and taking only the values\n * from the most recently projected inner Observable.\n * @method switchMapTo\n * @owner Observable\n */\nfunction switchMapTo(innerObservable, resultSelector) {\n    return switchMapTo_1.switchMapTo(innerObservable, resultSelector)(this);\n}\nexports.switchMapTo = switchMapTo;\n//# sourceMappingURL=switchMapTo.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar windowWhen_1 = require('../../operator/windowWhen');\nObservable_1.Observable.prototype.windowWhen = windowWhen_1.windowWhen;\n//# sourceMappingURL=windowWhen.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscription_1 = require('./Subscription');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SubjectSubscription = (function (_super) {\n    __extends(SubjectSubscription, _super);\n    function SubjectSubscription(subject, subscriber) {\n        _super.call(this);\n        this.subject = subject;\n        this.subscriber = subscriber;\n        this.closed = false;\n    }\n    SubjectSubscription.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.closed = true;\n        var subject = this.subject;\n        var observers = subject.observers;\n        this.subject = null;\n        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n            return;\n        }\n        var subscriberIndex = observers.indexOf(this.subscriber);\n        if (subscriberIndex !== -1) {\n            observers.splice(subscriberIndex, 1);\n        }\n    };\n    return SubjectSubscription;\n}(Subscription_1.Subscription));\nexports.SubjectSubscription = SubjectSubscription;\n//# sourceMappingURL=SubjectSubscription.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('./Observable');\nvar Subscriber_1 = require('./Subscriber');\nvar Subscription_1 = require('./Subscription');\nvar ObjectUnsubscribedError_1 = require('./util/ObjectUnsubscribedError');\nvar SubjectSubscription_1 = require('./SubjectSubscription');\nvar rxSubscriber_1 = require('./symbol/rxSubscriber');\n/**\n * @class SubjectSubscriber<T>\n */\nvar SubjectSubscriber = (function (_super) {\n    __extends(SubjectSubscriber, _super);\n    function SubjectSubscriber(destination) {\n        _super.call(this, destination);\n        this.destination = destination;\n    }\n    return SubjectSubscriber;\n}(Subscriber_1.Subscriber));\nexports.SubjectSubscriber = SubjectSubscriber;\n/**\n * @class Subject<T>\n */\nvar Subject = (function (_super) {\n    __extends(Subject, _super);\n    function Subject() {\n        _super.call(this);\n        this.observers = [];\n        this.closed = false;\n        this.isStopped = false;\n        this.hasError = false;\n        this.thrownError = null;\n    }\n    Subject.prototype[rxSubscriber_1.rxSubscriber] = function () {\n        return new SubjectSubscriber(this);\n    };\n    Subject.prototype.lift = function (operator) {\n        var subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    };\n    Subject.prototype.next = function (value) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        if (!this.isStopped) {\n            var observers = this.observers;\n            var len = observers.length;\n            var copy = observers.slice();\n            for (var i = 0; i < len; i++) {\n                copy[i].next(value);\n            }\n        }\n    };\n    Subject.prototype.error = function (err) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        this.hasError = true;\n        this.thrownError = err;\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].error(err);\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.complete = function () {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].complete();\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.unsubscribe = function () {\n        this.isStopped = true;\n        this.closed = true;\n        this.observers = null;\n    };\n    Subject.prototype._trySubscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else {\n            return _super.prototype._trySubscribe.call(this, subscriber);\n        }\n    };\n    /** @deprecated internal use only */ Subject.prototype._subscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            return new SubjectSubscription_1.SubjectSubscription(this, subscriber);\n        }\n    };\n    Subject.prototype.asObservable = function () {\n        var observable = new Observable_1.Observable();\n        observable.source = this;\n        return observable;\n    };\n    Subject.create = function (destination, source) {\n        return new AnonymousSubject(destination, source);\n    };\n    return Subject;\n}(Observable_1.Observable));\nexports.Subject = Subject;\n/**\n * @class AnonymousSubject<T>\n */\nvar AnonymousSubject = (function (_super) {\n    __extends(AnonymousSubject, _super);\n    function AnonymousSubject(destination, source) {\n        _super.call(this);\n        this.destination = destination;\n        this.source = source;\n    }\n    AnonymousSubject.prototype.next = function (value) {\n        var destination = this.destination;\n        if (destination && destination.next) {\n            destination.next(value);\n        }\n    };\n    AnonymousSubject.prototype.error = function (err) {\n        var destination = this.destination;\n        if (destination && destination.error) {\n            this.destination.error(err);\n        }\n    };\n    AnonymousSubject.prototype.complete = function () {\n        var destination = this.destination;\n        if (destination && destination.complete) {\n            this.destination.complete();\n        }\n    };\n    /** @deprecated internal use only */ AnonymousSubject.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        if (source) {\n            return this.source.subscribe(subscriber);\n        }\n        else {\n            return Subscription_1.Subscription.EMPTY;\n        }\n    };\n    return AnonymousSubject;\n}(Subject));\nexports.AnonymousSubject = AnonymousSubject;\n//# sourceMappingURL=Subject.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Emits a value from the source Observable only after a particular time span\n * determined by another Observable has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link debounceTime}, but the time span of\n * emission silence is determined by a second Observable.</span>\n *\n * <img src=\"./img/debounce.png\" width=\"100%\">\n *\n * `debounce` delays values emitted by the source Observable, but drops previous\n * pending delayed emissions if a new value arrives on the source Observable.\n * This operator keeps track of the most recent value from the source\n * Observable, and spawns a duration Observable by calling the\n * `durationSelector` function. The value is emitted only when the duration\n * Observable emits a value or completes, and if no other value was emitted on\n * the source Observable since the duration Observable was spawned. If a new\n * value appears before the duration Observable emits, the previous value will\n * be dropped and will not be emitted on the output Observable.\n *\n * Like {@link debounceTime}, this is a rate-limiting operator, and also a\n * delay-like operator since output emissions do not necessarily occur at the\n * same time as they did on the source Observable.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounce(() => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n * @see {@link throttle}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the timeout\n * duration for each source value, returned as an Observable or a Promise.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified duration Observable returned by\n * `durationSelector`, and may drop some values if they occur too frequently.\n * @method debounce\n * @owner Observable\n */\nfunction debounce(durationSelector) {\n    return function (source) { return source.lift(new DebounceOperator(durationSelector)); };\n}\nexports.debounce = debounce;\nvar DebounceOperator = (function () {\n    function DebounceOperator(durationSelector) {\n        this.durationSelector = durationSelector;\n    }\n    DebounceOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DebounceSubscriber(subscriber, this.durationSelector));\n    };\n    return DebounceOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DebounceSubscriber = (function (_super) {\n    __extends(DebounceSubscriber, _super);\n    function DebounceSubscriber(destination, durationSelector) {\n        _super.call(this, destination);\n        this.durationSelector = durationSelector;\n        this.hasValue = false;\n        this.durationSubscription = null;\n    }\n    DebounceSubscriber.prototype._next = function (value) {\n        try {\n            var result = this.durationSelector.call(this, value);\n            if (result) {\n                this._tryNext(value, result);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    DebounceSubscriber.prototype._complete = function () {\n        this.emitValue();\n        this.destination.complete();\n    };\n    DebounceSubscriber.prototype._tryNext = function (value, duration) {\n        var subscription = this.durationSubscription;\n        this.value = value;\n        this.hasValue = true;\n        if (subscription) {\n            subscription.unsubscribe();\n            this.remove(subscription);\n        }\n        subscription = subscribeToResult_1.subscribeToResult(this, duration);\n        if (!subscription.closed) {\n            this.add(this.durationSubscription = subscription);\n        }\n    };\n    DebounceSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.emitValue();\n    };\n    DebounceSubscriber.prototype.notifyComplete = function () {\n        this.emitValue();\n    };\n    DebounceSubscriber.prototype.emitValue = function () {\n        if (this.hasValue) {\n            var value = this.value;\n            var subscription = this.durationSubscription;\n            if (subscription) {\n                this.durationSubscription = null;\n                subscription.unsubscribe();\n                this.remove(subscription);\n            }\n            this.value = null;\n            this.hasValue = false;\n            _super.prototype._next.call(this, value);\n        }\n    };\n    return DebounceSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=debounce.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar EmptyError_1 = require('../util/EmptyError');\n/**\n * Emits only the first value (or the first value that meets some condition)\n * emitted by the source Observable.\n *\n * <span class=\"informal\">Emits only the first value. Or emits only the first\n * value that passes some test.</span>\n *\n * <img src=\"./img/first.png\" width=\"100%\">\n *\n * If called with no arguments, `first` emits the first value of the source\n * Observable, then completes. If called with a `predicate` function, `first`\n * emits the first value of the source that matches the specified condition. It\n * may also take a `resultSelector` function to produce the output value from\n * the input value, and a `defaultValue` to emit in case the source completes\n * before it is able to emit a valid value. Throws an error if `defaultValue`\n * was not provided and a matching element is not found.\n *\n * @example <caption>Emit only the first click that happens on the DOM</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first();\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Emits the first click that happens on a DIV</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link take}\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} [predicate]\n * An optional function called with each item to test for condition matching.\n * @param {function(value: T, index: number): R} [resultSelector] A function to\n * produce the value on the output Observable based on the values\n * and the indices of the source Observable. The arguments passed to this\n * function are:\n * - `value`: the value that was emitted on the source.\n * - `index`: the \"index\" of the value from the source.\n * @param {R} [defaultValue] The default value emitted in case no valid value\n * was found on the source.\n * @return {Observable<T|R>} An Observable of the first item that matches the\n * condition.\n * @method first\n * @owner Observable\n */\nfunction first(predicate, resultSelector, defaultValue) {\n    return function (source) { return source.lift(new FirstOperator(predicate, resultSelector, defaultValue, source)); };\n}\nexports.first = first;\nvar FirstOperator = (function () {\n    function FirstOperator(predicate, resultSelector, defaultValue, source) {\n        this.predicate = predicate;\n        this.resultSelector = resultSelector;\n        this.defaultValue = defaultValue;\n        this.source = source;\n    }\n    FirstOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new FirstSubscriber(observer, this.predicate, this.resultSelector, this.defaultValue, this.source));\n    };\n    return FirstOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar FirstSubscriber = (function (_super) {\n    __extends(FirstSubscriber, _super);\n    function FirstSubscriber(destination, predicate, resultSelector, defaultValue, source) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.resultSelector = resultSelector;\n        this.defaultValue = defaultValue;\n        this.source = source;\n        this.index = 0;\n        this.hasCompleted = false;\n        this._emitted = false;\n    }\n    FirstSubscriber.prototype._next = function (value) {\n        var index = this.index++;\n        if (this.predicate) {\n            this._tryPredicate(value, index);\n        }\n        else {\n            this._emit(value, index);\n        }\n    };\n    FirstSubscriber.prototype._tryPredicate = function (value, index) {\n        var result;\n        try {\n            result = this.predicate(value, index, this.source);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this._emit(value, index);\n        }\n    };\n    FirstSubscriber.prototype._emit = function (value, index) {\n        if (this.resultSelector) {\n            this._tryResultSelector(value, index);\n            return;\n        }\n        this._emitFinal(value);\n    };\n    FirstSubscriber.prototype._tryResultSelector = function (value, index) {\n        var result;\n        try {\n            result = this.resultSelector(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this._emitFinal(result);\n    };\n    FirstSubscriber.prototype._emitFinal = function (value) {\n        var destination = this.destination;\n        if (!this._emitted) {\n            this._emitted = true;\n            destination.next(value);\n            destination.complete();\n            this.hasCompleted = true;\n        }\n    };\n    FirstSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        if (!this.hasCompleted && typeof this.defaultValue !== 'undefined') {\n            destination.next(this.defaultValue);\n            destination.complete();\n        }\n        else if (!this.hasCompleted) {\n            destination.error(new EmptyError_1.EmptyError);\n        }\n    };\n    return FirstSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=first.js.map","\"use strict\";\nvar AsyncAction_1 = require('./AsyncAction');\nvar AsyncScheduler_1 = require('./AsyncScheduler');\n/**\n *\n * Async Scheduler\n *\n * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\n *\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\n * in intervals.\n *\n * If you just want to \"defer\" task, that is to perform it right after currently\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\n * better choice will be the {@link asap} scheduler.\n *\n * @example <caption>Use async scheduler to delay task</caption>\n * const task = () => console.log('it works!');\n *\n * Rx.Scheduler.async.schedule(task, 2000);\n *\n * // After 2 seconds logs:\n * // \"it works!\"\n *\n *\n * @example <caption>Use async scheduler to repeat task in intervals</caption>\n * function task(state) {\n *   console.log(state);\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\n *                                   // which we reschedule with new state and delay\n * }\n *\n * Rx.Scheduler.async.schedule(task, 3000, 0);\n *\n * // Logs:\n * // 0 after 3s\n * // 1 after 4s\n * // 2 after 5s\n * // 3 after 6s\n *\n * @static true\n * @name async\n * @owner Scheduler\n */\nexports.async = new AsyncScheduler_1.AsyncScheduler(AsyncAction_1.AsyncAction);\n//# sourceMappingURL=async.js.map","\"use strict\";\nvar skip_1 = require('../operators/skip');\n/**\n * Returns an Observable that skips the first `count` items emitted by the source Observable.\n *\n * <img src=\"./img/skip.png\" width=\"100%\">\n *\n * @param {Number} count - The number of times, items emitted by source Observable should be skipped.\n * @return {Observable} An Observable that skips values emitted by the source Observable.\n *\n * @method skip\n * @owner Observable\n */\nfunction skip(count) {\n    return skip_1.skip(count)(this);\n}\nexports.skip = skip;\n//# sourceMappingURL=skip.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar groupBy_1 = require('../../operator/groupBy');\nObservable_1.Observable.prototype.groupBy = groupBy_1.groupBy;\n//# sourceMappingURL=groupBy.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AsyncScheduler_1 = require('./AsyncScheduler');\nvar QueueScheduler = (function (_super) {\n    __extends(QueueScheduler, _super);\n    function QueueScheduler() {\n        _super.apply(this, arguments);\n    }\n    return QueueScheduler;\n}(AsyncScheduler_1.AsyncScheduler));\nexports.QueueScheduler = QueueScheduler;\n//# sourceMappingURL=QueueScheduler.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar do_1 = require('../../operator/do');\nObservable_1.Observable.prototype.do = do_1._do;\nObservable_1.Observable.prototype._do = do_1._do;\n//# sourceMappingURL=do.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar withLatestFrom_1 = require('../../operator/withLatestFrom');\nObservable_1.Observable.prototype.withLatestFrom = withLatestFrom_1.withLatestFrom;\n//# sourceMappingURL=withLatestFrom.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\nvar asap_1 = require('../scheduler/asap');\nvar isNumeric_1 = require('../util/isNumeric');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar SubscribeOnObservable = (function (_super) {\n    __extends(SubscribeOnObservable, _super);\n    function SubscribeOnObservable(source, delayTime, scheduler) {\n        if (delayTime === void 0) { delayTime = 0; }\n        if (scheduler === void 0) { scheduler = asap_1.asap; }\n        _super.call(this);\n        this.source = source;\n        this.delayTime = delayTime;\n        this.scheduler = scheduler;\n        if (!isNumeric_1.isNumeric(delayTime) || delayTime < 0) {\n            this.delayTime = 0;\n        }\n        if (!scheduler || typeof scheduler.schedule !== 'function') {\n            this.scheduler = asap_1.asap;\n        }\n    }\n    SubscribeOnObservable.create = function (source, delay, scheduler) {\n        if (delay === void 0) { delay = 0; }\n        if (scheduler === void 0) { scheduler = asap_1.asap; }\n        return new SubscribeOnObservable(source, delay, scheduler);\n    };\n    SubscribeOnObservable.dispatch = function (arg) {\n        var source = arg.source, subscriber = arg.subscriber;\n        return this.add(source.subscribe(subscriber));\n    };\n    /** @deprecated internal use only */ SubscribeOnObservable.prototype._subscribe = function (subscriber) {\n        var delay = this.delayTime;\n        var source = this.source;\n        var scheduler = this.scheduler;\n        return scheduler.schedule(SubscribeOnObservable.dispatch, delay, {\n            source: source, subscriber: subscriber\n        });\n    };\n    return SubscribeOnObservable;\n}(Observable_1.Observable));\nexports.SubscribeOnObservable = SubscribeOnObservable;\n//# sourceMappingURL=SubscribeOnObservable.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar distinctUntilChanged_1 = require('../../operator/distinctUntilChanged');\nObservable_1.Observable.prototype.distinctUntilChanged = distinctUntilChanged_1.distinctUntilChanged;\n//# sourceMappingURL=distinctUntilChanged.js.map","\"use strict\";\nvar groupBy_1 = require('../operators/groupBy');\nexports.GroupedObservable = groupBy_1.GroupedObservable;\n/* tslint:enable:max-line-length */\n/**\n * Groups the items emitted by an Observable according to a specified criterion,\n * and emits these grouped items as `GroupedObservables`, one\n * {@link GroupedObservable} per group.\n *\n * <img src=\"./img/groupBy.png\" width=\"100%\">\n *\n * @example <caption>Group objects by id and return as array</caption>\n * Observable.of<Obj>({id: 1, name: 'aze1'},\n *                    {id: 2, name: 'sf2'},\n *                    {id: 2, name: 'dg2'},\n *                    {id: 1, name: 'erg1'},\n *                    {id: 1, name: 'df1'},\n *                    {id: 2, name: 'sfqfb2'},\n *                    {id: 3, name: 'qfs3'},\n *                    {id: 2, name: 'qsgqsfg2'}\n *     )\n *     .groupBy(p => p.id)\n *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], []))\n *     .subscribe(p => console.log(p));\n *\n * // displays:\n * // [ { id: 1, name: 'aze1' },\n * //   { id: 1, name: 'erg1' },\n * //   { id: 1, name: 'df1' } ]\n * //\n * // [ { id: 2, name: 'sf2' },\n * //   { id: 2, name: 'dg2' },\n * //   { id: 2, name: 'sfqfb2' },\n * //   { id: 2, name: 'qsgqsfg2' } ]\n * //\n * // [ { id: 3, name: 'qfs3' } ]\n *\n * @example <caption>Pivot data on the id field</caption>\n * Observable.of<Obj>({id: 1, name: 'aze1'},\n *                    {id: 2, name: 'sf2'},\n *                    {id: 2, name: 'dg2'},\n *                    {id: 1, name: 'erg1'},\n *                    {id: 1, name: 'df1'},\n *                    {id: 2, name: 'sfqfb2'},\n *                    {id: 3, name: 'qfs1'},\n *                    {id: 2, name: 'qsgqsfg2'}\n *                   )\n *     .groupBy(p => p.id, p => p.name)\n *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], [\"\" + group$.key]))\n *     .map(arr => ({'id': parseInt(arr[0]), 'values': arr.slice(1)}))\n *     .subscribe(p => console.log(p));\n *\n * // displays:\n * // { id: 1, values: [ 'aze1', 'erg1', 'df1' ] }\n * // { id: 2, values: [ 'sf2', 'dg2', 'sfqfb2', 'qsgqsfg2' ] }\n * // { id: 3, values: [ 'qfs1' ] }\n *\n * @param {function(value: T): K} keySelector A function that extracts the key\n * for each item.\n * @param {function(value: T): R} [elementSelector] A function that extracts the\n * return element for each item.\n * @param {function(grouped: GroupedObservable<K,R>): Observable<any>} [durationSelector]\n * A function that returns an Observable to determine how long each group should\n * exist.\n * @return {Observable<GroupedObservable<K,R>>} An Observable that emits\n * GroupedObservables, each of which corresponds to a unique key value and each\n * of which emits those items from the source Observable that share that key\n * value.\n * @method groupBy\n * @owner Observable\n */\nfunction groupBy(keySelector, elementSelector, durationSelector, subjectSelector) {\n    return groupBy_1.groupBy(keySelector, elementSelector, durationSelector, subjectSelector)(this);\n}\nexports.groupBy = groupBy;\n//# sourceMappingURL=groupBy.js.map","\"use strict\";\nvar ArrayObservable_1 = require('../observable/ArrayObservable');\nvar ScalarObservable_1 = require('../observable/ScalarObservable');\nvar EmptyObservable_1 = require('../observable/EmptyObservable');\nvar concat_1 = require('../observable/concat');\nvar isScheduler_1 = require('../util/isScheduler');\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits the items you specify as arguments before it begins to emit\n * items emitted by the source Observable.\n *\n * <img src=\"./img/startWith.png\" width=\"100%\">\n *\n * @param {...T} values - Items you want the modified Observable to emit first.\n * @param {Scheduler} [scheduler] - A {@link IScheduler} to use for scheduling\n * the emissions of the `next` notifications.\n * @return {Observable} An Observable that emits the items in the specified Iterable and then emits the items\n * emitted by the source Observable.\n * @method startWith\n * @owner Observable\n */\nfunction startWith() {\n    var array = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        array[_i - 0] = arguments[_i];\n    }\n    return function (source) {\n        var scheduler = array[array.length - 1];\n        if (isScheduler_1.isScheduler(scheduler)) {\n            array.pop();\n        }\n        else {\n            scheduler = null;\n        }\n        var len = array.length;\n        if (len === 1) {\n            return concat_1.concat(new ScalarObservable_1.ScalarObservable(array[0], scheduler), source);\n        }\n        else if (len > 1) {\n            return concat_1.concat(new ArrayObservable_1.ArrayObservable(array, scheduler), source);\n        }\n        else {\n            return concat_1.concat(new EmptyObservable_1.EmptyObservable(scheduler), source);\n        }\n    };\n}\nexports.startWith = startWith;\n//# sourceMappingURL=startWith.js.map","\"use strict\";\nvar map_1 = require('../operators/map');\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * <img src=\"./img/map.png\" width=\"100%\">\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * @example <caption>Map every click to the clientX position of that click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks.map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nfunction map(project, thisArg) {\n    return map_1.map(project, thisArg)(this);\n}\nexports.map = map;\n//# sourceMappingURL=map.js.map","\"use strict\";\nvar zip_1 = require('./zip');\nfunction zipAll(project) {\n    return function (source) { return source.lift(new zip_1.ZipOperator(project)); };\n}\nexports.zipAll = zipAll;\n//# sourceMappingURL=zipAll.js.map","\"use strict\";\nvar tap_1 = require('../operators/tap');\n/* tslint:enable:max-line-length */\n/**\n * Perform a side effect for every emission on the source Observable, but return\n * an Observable that is identical to the source.\n *\n * <span class=\"informal\">Intercepts each emission on the source and runs a\n * function, but returns an output which is identical to the source as long as errors don't occur.</span>\n *\n * <img src=\"./img/do.png\" width=\"100%\">\n *\n * Returns a mirrored Observable of the source Observable, but modified so that\n * the provided Observer is called to perform a side effect for every value,\n * error, and completion emitted by the source. Any errors that are thrown in\n * the aforementioned Observer or handlers are safely sent down the error path\n * of the output Observable.\n *\n * This operator is useful for debugging your Observables for the correct values\n * or performing other side effects.\n *\n * Note: this is different to a `subscribe` on the Observable. If the Observable\n * returned by `do` is not subscribed, the side effects specified by the\n * Observer will never happen. `do` therefore simply spies on existing\n * execution, it does not trigger an execution to happen like `subscribe` does.\n *\n * @example <caption>Map every click to the clientX position of that click, while also logging the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks\n *   .do(ev => console.log(ev))\n *   .map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link map}\n * @see {@link subscribe}\n *\n * @param {Observer|function} [nextOrObserver] A normal Observer object or a\n * callback for `next`.\n * @param {function} [error] Callback for errors in the source.\n * @param {function} [complete] Callback for the completion of the source.\n * @return {Observable} An Observable identical to the source, but runs the\n * specified Observer or callback(s) for each item.\n * @method do\n * @name do\n * @owner Observable\n */\nfunction _do(nextOrObserver, error, complete) {\n    return tap_1.tap(nextOrObserver, error, complete)(this);\n}\nexports._do = _do;\n//# sourceMappingURL=do.js.map","\"use strict\";\nvar SubscriptionLog = (function () {\n    function SubscriptionLog(subscribedFrame, unsubscribedFrame) {\n        if (unsubscribedFrame === void 0) { unsubscribedFrame = Number.POSITIVE_INFINITY; }\n        this.subscribedFrame = subscribedFrame;\n        this.unsubscribedFrame = unsubscribedFrame;\n    }\n    return SubscriptionLog;\n}());\nexports.SubscriptionLog = SubscriptionLog;\n//# sourceMappingURL=SubscriptionLog.js.map","\"use strict\";\nvar combineLatest_1 = require('../operators/combineLatest');\nfunction combineAll(project) {\n    return function (source) { return source.lift(new combineLatest_1.CombineLatestOperator(project)); };\n}\nexports.combineAll = combineAll;\n//# sourceMappingURL=combineAll.js.map","// toObject with fallback for non-array-like ES3 strings\nvar IndexedObject = require('../internals/indexed-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nmodule.exports = function (it) {\n  return IndexedObject(requireObjectCoercible(it));\n};\n","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/* tslint:enable:max-line-length */\n/**\n * Perform a side effect for every emission on the source Observable, but return\n * an Observable that is identical to the source.\n *\n * <span class=\"informal\">Intercepts each emission on the source and runs a\n * function, but returns an output which is identical to the source as long as errors don't occur.</span>\n *\n * <img src=\"./img/do.png\" width=\"100%\">\n *\n * Returns a mirrored Observable of the source Observable, but modified so that\n * the provided Observer is called to perform a side effect for every value,\n * error, and completion emitted by the source. Any errors that are thrown in\n * the aforementioned Observer or handlers are safely sent down the error path\n * of the output Observable.\n *\n * This operator is useful for debugging your Observables for the correct values\n * or performing other side effects.\n *\n * Note: this is different to a `subscribe` on the Observable. If the Observable\n * returned by `do` is not subscribed, the side effects specified by the\n * Observer will never happen. `do` therefore simply spies on existing\n * execution, it does not trigger an execution to happen like `subscribe` does.\n *\n * @example <caption>Map every click to the clientX position of that click, while also logging the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks\n *   .do(ev => console.log(ev))\n *   .map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link map}\n * @see {@link subscribe}\n *\n * @param {Observer|function} [nextOrObserver] A normal Observer object or a\n * callback for `next`.\n * @param {function} [error] Callback for errors in the source.\n * @param {function} [complete] Callback for the completion of the source.\n * @return {Observable} An Observable identical to the source, but runs the\n * specified Observer or callback(s) for each item.\n * @name tap\n */\nfunction tap(nextOrObserver, error, complete) {\n    return function tapOperatorFunction(source) {\n        return source.lift(new DoOperator(nextOrObserver, error, complete));\n    };\n}\nexports.tap = tap;\nvar DoOperator = (function () {\n    function DoOperator(nextOrObserver, error, complete) {\n        this.nextOrObserver = nextOrObserver;\n        this.error = error;\n        this.complete = complete;\n    }\n    DoOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DoSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));\n    };\n    return DoOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DoSubscriber = (function (_super) {\n    __extends(DoSubscriber, _super);\n    function DoSubscriber(destination, nextOrObserver, error, complete) {\n        _super.call(this, destination);\n        var safeSubscriber = new Subscriber_1.Subscriber(nextOrObserver, error, complete);\n        safeSubscriber.syncErrorThrowable = true;\n        this.add(safeSubscriber);\n        this.safeSubscriber = safeSubscriber;\n    }\n    DoSubscriber.prototype._next = function (value) {\n        var safeSubscriber = this.safeSubscriber;\n        safeSubscriber.next(value);\n        if (safeSubscriber.syncErrorThrown) {\n            this.destination.error(safeSubscriber.syncErrorValue);\n        }\n        else {\n            this.destination.next(value);\n        }\n    };\n    DoSubscriber.prototype._error = function (err) {\n        var safeSubscriber = this.safeSubscriber;\n        safeSubscriber.error(err);\n        if (safeSubscriber.syncErrorThrown) {\n            this.destination.error(safeSubscriber.syncErrorValue);\n        }\n        else {\n            this.destination.error(err);\n        }\n    };\n    DoSubscriber.prototype._complete = function () {\n        var safeSubscriber = this.safeSubscriber;\n        safeSubscriber.complete();\n        if (safeSubscriber.syncErrorThrown) {\n            this.destination.error(safeSubscriber.syncErrorValue);\n        }\n        else {\n            this.destination.complete();\n        }\n    };\n    return DoSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=tap.js.map","\"use strict\";\nfunction isPromise(value) {\n    return value && typeof value.subscribe !== 'function' && typeof value.then === 'function';\n}\nexports.isPromise = isPromise;\n//# sourceMappingURL=isPromise.js.map","\"use strict\";\nvar count_1 = require('../operators/count');\n/**\n * Counts the number of emissions on the source and emits that number when the\n * source completes.\n *\n * <span class=\"informal\">Tells how many values were emitted, when the source\n * completes.</span>\n *\n * <img src=\"./img/count.png\" width=\"100%\">\n *\n * `count` transforms an Observable that emits values into an Observable that\n * emits a single value that represents the number of values emitted by the\n * source Observable. If the source Observable terminates with an error, `count`\n * will pass this error notification along without emitting a value first. If\n * the source Observable does not terminate at all, `count` will neither emit\n * a value nor terminate. This operator takes an optional `predicate` function\n * as argument, in which case the output emission will represent the number of\n * source values that matched `true` with the `predicate`.\n *\n * @example <caption>Counts how many seconds have passed before the first click happened</caption>\n * var seconds = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var secondsBeforeClick = seconds.takeUntil(clicks);\n * var result = secondsBeforeClick.count();\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Counts how many odd numbers are there between 1 and 7</caption>\n * var numbers = Rx.Observable.range(1, 7);\n * var result = numbers.count(i => i % 2 === 1);\n * result.subscribe(x => console.log(x));\n *\n * // Results in:\n * // 4\n *\n * @see {@link max}\n * @see {@link min}\n * @see {@link reduce}\n *\n * @param {function(value: T, i: number, source: Observable<T>): boolean} [predicate] A\n * boolean function to select what values are to be counted. It is provided with\n * arguments of:\n * - `value`: the value from the source Observable.\n * - `index`: the (zero-based) \"index\" of the value from the source Observable.\n * - `source`: the source Observable instance itself.\n * @return {Observable} An Observable of one number that represents the count as\n * described above.\n * @method count\n * @owner Observable\n */\nfunction count(predicate) {\n    return count_1.count(predicate)(this);\n}\nexports.count = count;\n//# sourceMappingURL=count.js.map","\"use strict\";\nvar distinctUntilChanged_1 = require('./distinctUntilChanged');\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item,\n * using a property accessed by using the key provided to check if the two items are distinct.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * @example <caption>An example comparing the name of persons</caption>\n *\n *  interface Person {\n *     age: number,\n *     name: string\n *  }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'},\n *     { age: 6, name: 'Foo'})\n *     .distinctUntilKeyChanged('name')\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n *\n * @example <caption>An example comparing the first letters of the name</caption>\n *\n * interface Person {\n *     age: number,\n *     name: string\n *  }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo1'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo2'},\n *     { age: 6, name: 'Foo3'})\n *     .distinctUntilKeyChanged('name', (x: string, y: string) => x.substring(0, 3) === y.substring(0, 3))\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo1' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo2' }\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n *\n * @param {string} key String key for object property lookup on each item.\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values based on the key specified.\n * @method distinctUntilKeyChanged\n * @owner Observable\n */\nfunction distinctUntilKeyChanged(key, compare) {\n    return distinctUntilChanged_1.distinctUntilChanged(function (x, y) { return compare ? compare(x[key], y[key]) : x[key] === y[key]; });\n}\nexports.distinctUntilKeyChanged = distinctUntilKeyChanged;\n//# sourceMappingURL=distinctUntilKeyChanged.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar async_1 = require('../scheduler/async');\nfunction timeInterval(scheduler) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    return function (source) { return source.lift(new TimeIntervalOperator(scheduler)); };\n}\nexports.timeInterval = timeInterval;\nvar TimeInterval = (function () {\n    function TimeInterval(value, interval) {\n        this.value = value;\n        this.interval = interval;\n    }\n    return TimeInterval;\n}());\nexports.TimeInterval = TimeInterval;\n;\nvar TimeIntervalOperator = (function () {\n    function TimeIntervalOperator(scheduler) {\n        this.scheduler = scheduler;\n    }\n    TimeIntervalOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new TimeIntervalSubscriber(observer, this.scheduler));\n    };\n    return TimeIntervalOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TimeIntervalSubscriber = (function (_super) {\n    __extends(TimeIntervalSubscriber, _super);\n    function TimeIntervalSubscriber(destination, scheduler) {\n        _super.call(this, destination);\n        this.scheduler = scheduler;\n        this.lastTime = 0;\n        this.lastTime = scheduler.now();\n    }\n    TimeIntervalSubscriber.prototype._next = function (value) {\n        var now = this.scheduler.now();\n        var span = now - this.lastTime;\n        this.lastTime = now;\n        this.destination.next(new TimeInterval(value, span));\n    };\n    return TimeIntervalSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=timeInterval.js.map","\"use strict\";\nvar audit_1 = require('./operators/audit');\nexports.audit = audit_1.audit;\nvar auditTime_1 = require('./operators/auditTime');\nexports.auditTime = auditTime_1.auditTime;\nvar buffer_1 = require('./operators/buffer');\nexports.buffer = buffer_1.buffer;\nvar bufferCount_1 = require('./operators/bufferCount');\nexports.bufferCount = bufferCount_1.bufferCount;\nvar bufferTime_1 = require('./operators/bufferTime');\nexports.bufferTime = bufferTime_1.bufferTime;\nvar bufferToggle_1 = require('./operators/bufferToggle');\nexports.bufferToggle = bufferToggle_1.bufferToggle;\nvar bufferWhen_1 = require('./operators/bufferWhen');\nexports.bufferWhen = bufferWhen_1.bufferWhen;\nvar catchError_1 = require('./operators/catchError');\nexports.catchError = catchError_1.catchError;\nvar combineAll_1 = require('./operators/combineAll');\nexports.combineAll = combineAll_1.combineAll;\nvar combineLatest_1 = require('./operators/combineLatest');\nexports.combineLatest = combineLatest_1.combineLatest;\nvar concat_1 = require('./operators/concat');\nexports.concat = concat_1.concat;\nvar concatAll_1 = require('./operators/concatAll');\nexports.concatAll = concatAll_1.concatAll;\nvar concatMap_1 = require('./operators/concatMap');\nexports.concatMap = concatMap_1.concatMap;\nvar concatMapTo_1 = require('./operators/concatMapTo');\nexports.concatMapTo = concatMapTo_1.concatMapTo;\nvar count_1 = require('./operators/count');\nexports.count = count_1.count;\nvar debounce_1 = require('./operators/debounce');\nexports.debounce = debounce_1.debounce;\nvar debounceTime_1 = require('./operators/debounceTime');\nexports.debounceTime = debounceTime_1.debounceTime;\nvar defaultIfEmpty_1 = require('./operators/defaultIfEmpty');\nexports.defaultIfEmpty = defaultIfEmpty_1.defaultIfEmpty;\nvar delay_1 = require('./operators/delay');\nexports.delay = delay_1.delay;\nvar delayWhen_1 = require('./operators/delayWhen');\nexports.delayWhen = delayWhen_1.delayWhen;\nvar dematerialize_1 = require('./operators/dematerialize');\nexports.dematerialize = dematerialize_1.dematerialize;\nvar distinct_1 = require('./operators/distinct');\nexports.distinct = distinct_1.distinct;\nvar distinctUntilChanged_1 = require('./operators/distinctUntilChanged');\nexports.distinctUntilChanged = distinctUntilChanged_1.distinctUntilChanged;\nvar distinctUntilKeyChanged_1 = require('./operators/distinctUntilKeyChanged');\nexports.distinctUntilKeyChanged = distinctUntilKeyChanged_1.distinctUntilKeyChanged;\nvar elementAt_1 = require('./operators/elementAt');\nexports.elementAt = elementAt_1.elementAt;\nvar every_1 = require('./operators/every');\nexports.every = every_1.every;\nvar exhaust_1 = require('./operators/exhaust');\nexports.exhaust = exhaust_1.exhaust;\nvar exhaustMap_1 = require('./operators/exhaustMap');\nexports.exhaustMap = exhaustMap_1.exhaustMap;\nvar expand_1 = require('./operators/expand');\nexports.expand = expand_1.expand;\nvar filter_1 = require('./operators/filter');\nexports.filter = filter_1.filter;\nvar finalize_1 = require('./operators/finalize');\nexports.finalize = finalize_1.finalize;\nvar find_1 = require('./operators/find');\nexports.find = find_1.find;\nvar findIndex_1 = require('./operators/findIndex');\nexports.findIndex = findIndex_1.findIndex;\nvar first_1 = require('./operators/first');\nexports.first = first_1.first;\nvar groupBy_1 = require('./operators/groupBy');\nexports.groupBy = groupBy_1.groupBy;\nvar ignoreElements_1 = require('./operators/ignoreElements');\nexports.ignoreElements = ignoreElements_1.ignoreElements;\nvar isEmpty_1 = require('./operators/isEmpty');\nexports.isEmpty = isEmpty_1.isEmpty;\nvar last_1 = require('./operators/last');\nexports.last = last_1.last;\nvar map_1 = require('./operators/map');\nexports.map = map_1.map;\nvar mapTo_1 = require('./operators/mapTo');\nexports.mapTo = mapTo_1.mapTo;\nvar materialize_1 = require('./operators/materialize');\nexports.materialize = materialize_1.materialize;\nvar max_1 = require('./operators/max');\nexports.max = max_1.max;\nvar merge_1 = require('./operators/merge');\nexports.merge = merge_1.merge;\nvar mergeAll_1 = require('./operators/mergeAll');\nexports.mergeAll = mergeAll_1.mergeAll;\nvar mergeMap_1 = require('./operators/mergeMap');\nexports.mergeMap = mergeMap_1.mergeMap;\nvar mergeMap_2 = require('./operators/mergeMap');\nexports.flatMap = mergeMap_2.mergeMap;\nvar mergeMapTo_1 = require('./operators/mergeMapTo');\nexports.mergeMapTo = mergeMapTo_1.mergeMapTo;\nvar mergeScan_1 = require('./operators/mergeScan');\nexports.mergeScan = mergeScan_1.mergeScan;\nvar min_1 = require('./operators/min');\nexports.min = min_1.min;\nvar multicast_1 = require('./operators/multicast');\nexports.multicast = multicast_1.multicast;\nvar observeOn_1 = require('./operators/observeOn');\nexports.observeOn = observeOn_1.observeOn;\nvar onErrorResumeNext_1 = require('./operators/onErrorResumeNext');\nexports.onErrorResumeNext = onErrorResumeNext_1.onErrorResumeNext;\nvar pairwise_1 = require('./operators/pairwise');\nexports.pairwise = pairwise_1.pairwise;\nvar partition_1 = require('./operators/partition');\nexports.partition = partition_1.partition;\nvar pluck_1 = require('./operators/pluck');\nexports.pluck = pluck_1.pluck;\nvar publish_1 = require('./operators/publish');\nexports.publish = publish_1.publish;\nvar publishBehavior_1 = require('./operators/publishBehavior');\nexports.publishBehavior = publishBehavior_1.publishBehavior;\nvar publishLast_1 = require('./operators/publishLast');\nexports.publishLast = publishLast_1.publishLast;\nvar publishReplay_1 = require('./operators/publishReplay');\nexports.publishReplay = publishReplay_1.publishReplay;\nvar race_1 = require('./operators/race');\nexports.race = race_1.race;\nvar reduce_1 = require('./operators/reduce');\nexports.reduce = reduce_1.reduce;\nvar repeat_1 = require('./operators/repeat');\nexports.repeat = repeat_1.repeat;\nvar repeatWhen_1 = require('./operators/repeatWhen');\nexports.repeatWhen = repeatWhen_1.repeatWhen;\nvar retry_1 = require('./operators/retry');\nexports.retry = retry_1.retry;\nvar retryWhen_1 = require('./operators/retryWhen');\nexports.retryWhen = retryWhen_1.retryWhen;\nvar refCount_1 = require('./operators/refCount');\nexports.refCount = refCount_1.refCount;\nvar sample_1 = require('./operators/sample');\nexports.sample = sample_1.sample;\nvar sampleTime_1 = require('./operators/sampleTime');\nexports.sampleTime = sampleTime_1.sampleTime;\nvar scan_1 = require('./operators/scan');\nexports.scan = scan_1.scan;\nvar sequenceEqual_1 = require('./operators/sequenceEqual');\nexports.sequenceEqual = sequenceEqual_1.sequenceEqual;\nvar share_1 = require('./operators/share');\nexports.share = share_1.share;\nvar shareReplay_1 = require('./operators/shareReplay');\nexports.shareReplay = shareReplay_1.shareReplay;\nvar single_1 = require('./operators/single');\nexports.single = single_1.single;\nvar skip_1 = require('./operators/skip');\nexports.skip = skip_1.skip;\nvar skipLast_1 = require('./operators/skipLast');\nexports.skipLast = skipLast_1.skipLast;\nvar skipUntil_1 = require('./operators/skipUntil');\nexports.skipUntil = skipUntil_1.skipUntil;\nvar skipWhile_1 = require('./operators/skipWhile');\nexports.skipWhile = skipWhile_1.skipWhile;\nvar startWith_1 = require('./operators/startWith');\nexports.startWith = startWith_1.startWith;\n/**\n * TODO(https://github.com/ReactiveX/rxjs/issues/2900): Add back subscribeOn once it can be\n * treeshaken. Currently if this export is added back, it\n * forces apps to bring in asap scheduler along with\n * Immediate, root, and other supporting code.\n */\n// export { subscribeOn } from './operators/subscribeOn';\nvar switchAll_1 = require('./operators/switchAll');\nexports.switchAll = switchAll_1.switchAll;\nvar switchMap_1 = require('./operators/switchMap');\nexports.switchMap = switchMap_1.switchMap;\nvar switchMapTo_1 = require('./operators/switchMapTo');\nexports.switchMapTo = switchMapTo_1.switchMapTo;\nvar take_1 = require('./operators/take');\nexports.take = take_1.take;\nvar takeLast_1 = require('./operators/takeLast');\nexports.takeLast = takeLast_1.takeLast;\nvar takeUntil_1 = require('./operators/takeUntil');\nexports.takeUntil = takeUntil_1.takeUntil;\nvar takeWhile_1 = require('./operators/takeWhile');\nexports.takeWhile = takeWhile_1.takeWhile;\nvar tap_1 = require('./operators/tap');\nexports.tap = tap_1.tap;\nvar throttle_1 = require('./operators/throttle');\nexports.throttle = throttle_1.throttle;\nvar throttleTime_1 = require('./operators/throttleTime');\nexports.throttleTime = throttleTime_1.throttleTime;\nvar timeInterval_1 = require('./operators/timeInterval');\nexports.timeInterval = timeInterval_1.timeInterval;\nvar timeout_1 = require('./operators/timeout');\nexports.timeout = timeout_1.timeout;\nvar timeoutWith_1 = require('./operators/timeoutWith');\nexports.timeoutWith = timeoutWith_1.timeoutWith;\nvar timestamp_1 = require('./operators/timestamp');\nexports.timestamp = timestamp_1.timestamp;\nvar toArray_1 = require('./operators/toArray');\nexports.toArray = toArray_1.toArray;\nvar window_1 = require('./operators/window');\nexports.window = window_1.window;\nvar windowCount_1 = require('./operators/windowCount');\nexports.windowCount = windowCount_1.windowCount;\nvar windowTime_1 = require('./operators/windowTime');\nexports.windowTime = windowTime_1.windowTime;\nvar windowToggle_1 = require('./operators/windowToggle');\nexports.windowToggle = windowToggle_1.windowToggle;\nvar windowWhen_1 = require('./operators/windowWhen');\nexports.windowWhen = windowWhen_1.windowWhen;\nvar withLatestFrom_1 = require('./operators/withLatestFrom');\nexports.withLatestFrom = withLatestFrom_1.withLatestFrom;\nvar zip_1 = require('./operators/zip');\nexports.zip = zip_1.zip;\nvar zipAll_1 = require('./operators/zipAll');\nexports.zipAll = zipAll_1.zipAll;\n//# sourceMappingURL=operators.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar never_1 = require('../../observable/never');\nObservable_1.Observable.never = never_1.never;\n//# sourceMappingURL=never.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\nvar EmptyObservable_1 = require('./EmptyObservable');\nvar isArray_1 = require('../util/isArray');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ForkJoinObservable = (function (_super) {\n    __extends(ForkJoinObservable, _super);\n    function ForkJoinObservable(sources, resultSelector) {\n        _super.call(this);\n        this.sources = sources;\n        this.resultSelector = resultSelector;\n    }\n    /* tslint:enable:max-line-length */\n    /**\n     * Joins last values emitted by passed Observables.\n     *\n     * <span class=\"informal\">Wait for Observables to complete and then combine last values they emitted.</span>\n     *\n     * <img src=\"./img/forkJoin.png\" width=\"100%\">\n     *\n     * `forkJoin` is an operator that takes any number of Observables which can be passed either as an array\n     * or directly as arguments. If no input Observables are provided, resulting stream will complete\n     * immediately.\n     *\n     * `forkJoin` will wait for all passed Observables to complete and then it will emit an array with last\n     * values from corresponding Observables. So if you pass `n` Observables to the operator, resulting\n     * array will have `n` values, where first value is the last thing emitted by the first Observable,\n     * second value is the last thing emitted by the second Observable and so on. That means `forkJoin` will\n     * not emit more than once and it will complete after that. If you need to emit combined values not only\n     * at the end of lifecycle of passed Observables, but also throughout it, try out {@link combineLatest}\n     * or {@link zip} instead.\n     *\n     * In order for resulting array to have the same length as the number of input Observables, whenever any of\n     * that Observables completes without emitting any value, `forkJoin` will complete at that moment as well\n     * and it will not emit anything either, even if it already has some last values from other Observables.\n     * Conversely, if there is an Observable that never completes, `forkJoin` will never complete as well,\n     * unless at any point some other Observable completes without emitting value, which brings us back to\n     * the previous case. Overall, in order for `forkJoin` to emit a value, all Observables passed as arguments\n     * have to emit something at least once and complete.\n     *\n     * If any input Observable errors at some point, `forkJoin` will error as well and all other Observables\n     * will be immediately unsubscribed.\n     *\n     * Optionally `forkJoin` accepts project function, that will be called with values which normally\n     * would land in emitted array. Whatever is returned by project function, will appear in output\n     * Observable instead. This means that default project can be thought of as a function that takes\n     * all its arguments and puts them into an array. Note that project function will be called only\n     * when output Observable is supposed to emit a result.\n     *\n     * @example <caption>Use forkJoin with operator emitting immediately</caption>\n     * const observable = Rx.Observable.forkJoin(\n     *   Rx.Observable.of(1, 2, 3, 4),\n     *   Rx.Observable.of(5, 6, 7, 8)\n     * );\n     * observable.subscribe(\n     *   value => console.log(value),\n     *   err => {},\n     *   () => console.log('This is how it ends!')\n     * );\n     *\n     * // Logs:\n     * // [4, 8]\n     * // \"This is how it ends!\"\n     *\n     *\n     * @example <caption>Use forkJoin with operator emitting after some time</caption>\n     * const observable = Rx.Observable.forkJoin(\n     *   Rx.Observable.interval(1000).take(3), // emit 0, 1, 2 every second and complete\n     *   Rx.Observable.interval(500).take(4) // emit 0, 1, 2, 3 every half a second and complete\n     * );\n     * observable.subscribe(\n     *   value => console.log(value),\n     *   err => {},\n     *   () => console.log('This is how it ends!')\n     * );\n     *\n     * // Logs:\n     * // [2, 3] after 3 seconds\n     * // \"This is how it ends!\" immediately after\n     *\n     *\n     * @example <caption>Use forkJoin with project function</caption>\n     * const observable = Rx.Observable.forkJoin(\n     *   Rx.Observable.interval(1000).take(3), // emit 0, 1, 2 every second and complete\n     *   Rx.Observable.interval(500).take(4), // emit 0, 1, 2, 3 every half a second and complete\n     *   (n, m) => n + m\n     * );\n     * observable.subscribe(\n     *   value => console.log(value),\n     *   err => {},\n     *   () => console.log('This is how it ends!')\n     * );\n     *\n     * // Logs:\n     * // 5 after 3 seconds\n     * // \"This is how it ends!\" immediately after\n     *\n     * @see {@link combineLatest}\n     * @see {@link zip}\n     *\n     * @param {...SubscribableOrPromise} sources Any number of Observables provided either as an array or as an arguments\n     * passed directly to the operator.\n     * @param {function} [project] Function that takes values emitted by input Observables and returns value\n     * that will appear in resulting Observable instead of default array.\n     * @return {Observable} Observable emitting either an array of last values emitted by passed Observables\n     * or value from project function.\n     * @static true\n     * @name forkJoin\n     * @owner Observable\n     */\n    ForkJoinObservable.create = function () {\n        var sources = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sources[_i - 0] = arguments[_i];\n        }\n        if (sources === null || arguments.length === 0) {\n            return new EmptyObservable_1.EmptyObservable();\n        }\n        var resultSelector = null;\n        if (typeof sources[sources.length - 1] === 'function') {\n            resultSelector = sources.pop();\n        }\n        // if the first and only other argument besides the resultSelector is an array\n        // assume it's been called with `forkJoin([obs1, obs2, obs3], resultSelector)`\n        if (sources.length === 1 && isArray_1.isArray(sources[0])) {\n            sources = sources[0];\n        }\n        if (sources.length === 0) {\n            return new EmptyObservable_1.EmptyObservable();\n        }\n        return new ForkJoinObservable(sources, resultSelector);\n    };\n    /** @deprecated internal use only */ ForkJoinObservable.prototype._subscribe = function (subscriber) {\n        return new ForkJoinSubscriber(subscriber, this.sources, this.resultSelector);\n    };\n    return ForkJoinObservable;\n}(Observable_1.Observable));\nexports.ForkJoinObservable = ForkJoinObservable;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ForkJoinSubscriber = (function (_super) {\n    __extends(ForkJoinSubscriber, _super);\n    function ForkJoinSubscriber(destination, sources, resultSelector) {\n        _super.call(this, destination);\n        this.sources = sources;\n        this.resultSelector = resultSelector;\n        this.completed = 0;\n        this.haveValues = 0;\n        var len = sources.length;\n        this.total = len;\n        this.values = new Array(len);\n        for (var i = 0; i < len; i++) {\n            var source = sources[i];\n            var innerSubscription = subscribeToResult_1.subscribeToResult(this, source, null, i);\n            if (innerSubscription) {\n                innerSubscription.outerIndex = i;\n                this.add(innerSubscription);\n            }\n        }\n    }\n    ForkJoinSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.values[outerIndex] = innerValue;\n        if (!innerSub._hasValue) {\n            innerSub._hasValue = true;\n            this.haveValues++;\n        }\n    };\n    ForkJoinSubscriber.prototype.notifyComplete = function (innerSub) {\n        var destination = this.destination;\n        var _a = this, haveValues = _a.haveValues, resultSelector = _a.resultSelector, values = _a.values;\n        var len = values.length;\n        if (!innerSub._hasValue) {\n            destination.complete();\n            return;\n        }\n        this.completed++;\n        if (this.completed !== len) {\n            return;\n        }\n        if (haveValues === len) {\n            var value = resultSelector ? resultSelector.apply(this, values) : values;\n            destination.next(value);\n        }\n        destination.complete();\n    };\n    return ForkJoinSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=ForkJoinObservable.js.map"],"sourceRoot":""}