{"version":3,"sources":["webpack:///./node_modules/@ionic/core/dist/esm-es5/framework-delegate-d1eb6504.js","webpack:///./node_modules/@ionic/core/dist/esm-es5/ion-nav_2.entry.js"],"names":["attachComponent","delegate","container","component","cssClasses","componentProps","el","this","_a","label","attachViewToDom","HTMLElement","Error","ownerDocument","createElement","forEach","c","classList","add","Object","assign","appendChild","componentOnReady","sent","detachComponent","element","parentElement","removeViewFromDom","remove","Promise","resolve","VIEW_STATE_NEW","VIEW_STATE_ATTACHED","VIEW_STATE_DESTROYED","ViewController","params","state","prototype","init","_b","_destroy","nav","undefined","matches","view","id","currentParams","keysA","keys","keysB","length","_i","keysA_1","key","convertToView","page","convertToViews","pages","map","filter","v","navCss","Nav","class_1","hostRef","ionNavWillLoad","ionNavWillChange","ionNavDidChange","transInstr","animationEnabled","useRouter","isTransitioning","destroyed","views","animated","swipeGestureChanged","gesture","enable","swipeGesture","rootChanged","root","setRoot","rootParams","componentWillLoad","document","querySelector","closest","mode","getBoolean","emit","componentDidLoad","createSwipeBackGesture","canStart","bind","onStart","onMove","onEnd","disconnectedCallback","destroy","push","opts","done","queueTrns","insertStart","insertViews","insert","insertIndex","insertPages","insertComponents","pop","removeStart","removeCount","popTo","indexOrViewCtrl","tiConfig","removeView","popToRoot","removeIndex","startIndex","setPages","setRouteId","direction","animation","_this","active","getActiveSync","changed","finish","promise","r","commonOpts","updateURL","viewIsReady","enteringEl","mark","p","markVisible","viewController","find","animationBuilder","getRouteId","tagName","getActive","getByIndex","index","canGoBack","canGoBackSync","getPrevious","getPreviousSync","getLength","indexOf","ti","router","canTransition","skipIfBusy","reject","nextTrns","success","result","fireError","hasCompleted","requiresTransition","enteringView","leavingView","navChanged","failed","rejectReason","shift","runTransition","isBackDirection","rejectReason_1","trys","prepareTI","getEnteringView","postViewInit","enteringRequiresTransition","leavingRequiresTransition","transition","viewsLength","viewControllers","viewControllers_1","removeEnd","i","destroyQueue","finalBalance","console","warn","insertViews_1","insertViewAt","destroyQueue_1","destroyQueue_2","destroyView","progressCallback","leavingEl","animationOpts","progressAnimation","ani","sbAni","showGoBack","baseEl","get","transitionFinish","cleanupView","cleanup","existingIndex","splice","activeView","activeViewIndex","stepValue","progressStep","shouldComplete","dur","onFinish","oneTimeCallback","newStepValue","easing","progressEnd","render","defineProperty","enumerable","configurable","style","navLink","routerDirection","routerAnimation","NavLink","onClick"],"mappings":"gHAAA,oFACIA,EAAkB,SAAUC,EAAUC,EAAWC,EAAWC,EAAYC,GAAkB,OAAO,oBAAU,OAAQ,OAAQ,GAAQ,WACnI,IAAIC,EACJ,OAAO,eAAYC,MAAM,SAAUC,GAC/B,OAAQA,EAAGC,OACP,KAAK,EACD,GAAIR,EACA,MAAO,CAAC,EAAcA,EAASS,gBAAgBR,EAAWC,EAAWE,EAAgBD,IAEzF,GAAyB,kBAAdD,KAA4BA,aAAqBQ,aACxD,MAAM,IAAIC,MAAM,iCAYpB,OAVAN,EAA2B,kBAAdH,EACPD,EAAUW,eAAiBX,EAAUW,cAAcC,cAAcX,GACjEA,EACFC,GACAA,EAAWW,SAAQ,SAAUC,GAAK,OAAOV,EAAGW,UAAUC,IAAIF,MAE1DX,GACAc,OAAOC,OAAOd,EAAID,GAEtBH,EAAUmB,YAAYf,GACjBA,EAAGgB,iBACD,CAAC,EAAahB,EAAGgB,oBADS,CAAC,EAAa,GAEnD,KAAK,EACDd,EAAGe,OACHf,EAAGC,MAAQ,EACf,KAAK,EAAG,MAAO,CAAC,EAAcH,WAItCkB,EAAkB,SAAUvB,EAAUwB,GACtC,GAAIA,EAAS,CACT,GAAIxB,EAAU,CACV,IAAIC,EAAYuB,EAAQC,cACxB,OAAOzB,EAAS0B,kBAAkBzB,EAAWuB,GAEjDA,EAAQG,SAEZ,OAAOC,QAAQC,Y,kCCvCnB,oLAOIC,EAAiB,EACjBC,EAAsB,EACtBC,EAAuB,EACvBC,EAAgC,WAChC,SAASA,EAAe/B,EAAWgC,GAC/B5B,KAAKJ,UAAYA,EACjBI,KAAK4B,OAASA,EACd5B,KAAK6B,MAAQL,EAsCjB,OApCAG,EAAeG,UAAUC,KAAO,SAAUpC,GACtC,OAAO,eAAUK,UAAM,OAAQ,GAAQ,WACnC,IAAIJ,EAAWK,EACf,OAAO,eAAYD,MAAM,SAAUgC,GAC/B,OAAQA,EAAG9B,OACP,KAAK,EAED,OADAF,KAAK6B,MAAQJ,EACPzB,KAAKkB,QAAgB,CAAC,EAAa,IACzCtB,EAAYI,KAAKJ,UACjBK,EAAKD,KACE,CAAC,EAAa,eAAgBA,KAAKN,SAAUC,EAAWC,EAAW,CAAC,WAAY,sBAAuBI,KAAK4B,UACvH,KAAK,EACD3B,EAAGiB,QAAUc,EAAGhB,OAChBgB,EAAG9B,MAAQ,EACf,KAAK,EAAG,MAAO,CAAC,WAQhCyB,EAAeG,UAAUG,SAAW,WAChC,eAAOjC,KAAK6B,QAAUH,EAAsB,+BAC5C,IAAIR,EAAUlB,KAAKkB,QACfA,IACIlB,KAAKN,SACLM,KAAKN,SAAS0B,kBAAkBF,EAAQC,cAAeD,GAGvDA,EAAQG,UAGhBrB,KAAKkC,SAAMC,EACXnC,KAAK6B,MAAQH,GAEVC,EA1CwB,GA4C/BS,EAAU,SAAUC,EAAMC,EAAIV,GAC9B,IAAKS,EACD,OAAO,EAEX,GAAIA,EAAKzC,YAAc0C,EACnB,OAAO,EAEX,IAAIC,EAAgBF,EAAKT,OACzB,GAAIW,IAAkBX,EAClB,OAAO,EAEX,IAAKW,IAAkBX,EACnB,OAAO,EAEX,IAAKW,IAAkBX,EACnB,OAAO,EAEX,IAAIY,EAAQ5B,OAAO6B,KAAKF,GACpBG,EAAQ9B,OAAO6B,KAAKb,GACxB,GAAIY,EAAMG,SAAWD,EAAMC,OACvB,OAAO,EAGX,IAAK,IAAIC,EAAK,EAAGC,EAAUL,EAAOI,EAAKC,EAAQF,OAAQC,IAAM,CACzD,IAAIE,EAAMD,EAAQD,GAClB,GAAIL,EAAcO,KAASlB,EAAOkB,GAC9B,OAAO,EAGf,OAAO,GAEPC,EAAgB,SAAUC,EAAMpB,GAChC,OAAKoB,EAGDA,aAAgBrB,EACTqB,EAEJ,IAAIrB,EAAeqB,EAAMpB,GALrB,MAOXqB,EAAiB,SAAUC,GAC3B,OAAOA,EAAMC,KAAI,SAAUH,GACvB,OAAIA,aAAgBrB,EACTqB,EAEP,cAAeA,EAQRD,EAAcC,EAAKpD,UAAoC,OAAxBoD,EAAKlD,oBAA2BqC,EAAYa,EAAKlD,gBAEpFiD,EAAcC,OAAMb,MAC5BiB,QAAO,SAAUC,GAAK,OAAa,OAANA,MAEhCC,EAAS,6GACTC,EAAqB,WACrB,SAASC,EAAQC,GACb,eAAiBzD,KAAMyD,GACvBzD,KAAK0D,eAAiB,eAAY1D,KAAM,iBAAkB,GAC1DA,KAAK2D,iBAAmB,eAAY3D,KAAM,mBAAoB,GAC9DA,KAAK4D,gBAAkB,eAAY5D,KAAM,kBAAmB,GAC5DA,KAAK6D,WAAa,GAClB7D,KAAK8D,kBAAmB,EACxB9D,KAAK+D,WAAY,EACjB/D,KAAKgE,iBAAkB,EACvBhE,KAAKiE,WAAY,EACjBjE,KAAKkE,MAAQ,GAIblE,KAAKmE,UAAW,EA6yBpB,OA3yBAX,EAAQ1B,UAAUsC,oBAAsB,WAChCpE,KAAKqE,SACLrE,KAAKqE,QAAQC,QAA6B,IAAtBtE,KAAKuE,eAGjCf,EAAQ1B,UAAU0C,YAAc,gBACVrC,IAAdnC,KAAKyE,OACAzE,KAAK+D,WACN/D,KAAK0E,QAAQ1E,KAAKyE,KAAMzE,KAAK2E,cAIzCnB,EAAQ1B,UAAU8C,kBAAoB,WAIlC,GAHA5E,KAAK+D,YACCc,SAASC,cAAc,gBACpB9E,KAAKD,GAAGgF,QAAQ,oBACC5C,IAAtBnC,KAAKuE,aAA4B,CACjC,IAAIS,EAAO,eAAWhF,MACtBA,KAAKuE,aAAe,OAAOU,WAAW,mBAA6B,QAATD,GAE9DhF,KAAK0D,eAAewB,QAExB1B,EAAQ1B,UAAUqD,iBAAmB,WACjC,OAAO,eAAUnF,UAAM,OAAQ,GAAQ,WACnC,IAAIC,EACJ,OAAO,eAAYD,MAAM,SAAUgC,GAC/B,OAAQA,EAAG9B,OACP,KAAK,EAGD,OAFAF,KAAKwE,cACLvE,EAAKD,KACE,CAAC,EAAa,iDACzB,KAAK,EAGD,OAFAC,EAAGoE,QAAWrC,EAAGhB,OAAQoE,uBAAuBpF,KAAKD,GAAIC,KAAKqF,SAASC,KAAKtF,MAAOA,KAAKuF,QAAQD,KAAKtF,MAAOA,KAAKwF,OAAOF,KAAKtF,MAAOA,KAAKyF,MAAMH,KAAKtF,OACpJA,KAAKoE,sBACE,CAAC,WAK5BZ,EAAQ1B,UAAU4D,qBAAuB,WACrC,IAAK,IAAI9C,EAAK,EAAG3C,EAAKD,KAAKkE,MAAOtB,EAAK3C,EAAG0C,OAAQC,IAAM,CACpD,IAAIP,EAAOpC,EAAG2C,GACd,eAAUP,EAAKnB,QAAS,QACxBmB,EAAKJ,WAELjC,KAAKqE,UACLrE,KAAKqE,QAAQsB,UACb3F,KAAKqE,aAAUlC,GAGnBnC,KAAK6D,WAAWlB,OAAS3C,KAAKkE,MAAMvB,OAAS,EAC7C3C,KAAKiE,WAAY,GAYrBT,EAAQ1B,UAAU8D,KAAO,SAAUhG,EAAWE,EAAgB+F,EAAMC,GAChE,OAAO9F,KAAK+F,UAAU,CAClBC,aAAc,EACdC,YAAa,CAAC,CAAErG,UAAWA,EAAWE,eAAgBA,IACtD+F,KAAMA,GACPC,IAYPtC,EAAQ1B,UAAUoE,OAAS,SAAUC,EAAavG,EAAWE,EAAgB+F,EAAMC,GAC/E,OAAO9F,KAAK+F,UAAU,CAClBC,YAAaG,EACbF,YAAa,CAAC,CAAErG,UAAWA,EAAWE,eAAgBA,IACtD+F,KAAMA,GACPC,IAYPtC,EAAQ1B,UAAUsE,YAAc,SAAUD,EAAaE,EAAkBR,EAAMC,GAC3E,OAAO9F,KAAK+F,UAAU,CAClBC,YAAaG,EACbF,YAAaI,EACbR,KAAMA,GACPC,IASPtC,EAAQ1B,UAAUwE,IAAM,SAAUT,EAAMC,GACpC,OAAO9F,KAAK+F,UAAU,CAClBQ,aAAc,EACdC,YAAa,EACbX,KAAMA,GACPC,IASPtC,EAAQ1B,UAAU2E,MAAQ,SAAUC,EAAiBb,EAAMC,GACvD,IAAIa,EAAW,CACXJ,aAAc,EACdC,aAAc,EACdX,KAAMA,GASV,MAP+B,kBAApBa,GAAgCA,EAAgB9G,WACvD+G,EAASC,WAAaF,EACtBC,EAASJ,YAAc,GAES,kBAApBG,IACZC,EAASJ,YAAcG,EAAkB,GAEtC1G,KAAK+F,UAAUY,EAAUb,IAQpCtC,EAAQ1B,UAAU+E,UAAY,SAAUhB,EAAMC,GAC1C,OAAO9F,KAAK+F,UAAU,CAClBQ,YAAa,EACbC,aAAc,EACdX,KAAMA,GACPC,IAUPtC,EAAQ1B,UAAUgF,YAAc,SAAUC,EAAYP,EAAaX,EAAMC,GAErE,YADoB,IAAhBU,IAA0BA,EAAc,GACrCxG,KAAK+F,UAAU,CAClBQ,YAAaQ,EACbP,YAAaA,EACbX,KAAMA,GACPC,IAUPtC,EAAQ1B,UAAU4C,QAAU,SAAU9E,EAAWE,EAAgB+F,EAAMC,GACnE,OAAO9F,KAAKgH,SAAS,CAAC,CAAEpH,UAAWA,EAAWE,eAAgBA,IAAmB+F,EAAMC,IAY3FtC,EAAQ1B,UAAUkF,SAAW,SAAU9C,EAAO2B,EAAMC,GAQhD,OAPY,MAARD,IACAA,EAAO,KAGW,IAAlBA,EAAK1B,WACL0B,EAAK1B,UAAW,GAEbnE,KAAK+F,UAAU,CAClBC,YAAa,EACbC,YAAa/B,EACbqC,YAAa,EACbC,aAAc,EACdX,KAAMA,GACPC,IAGPtC,EAAQ1B,UAAUmF,WAAa,SAAU3E,EAAIV,EAAQsF,EAAWC,GAC5D,IAQI5F,EARA6F,EAAQpH,KACRqH,EAASrH,KAAKsH,gBAClB,GAAIlF,EAAQiF,EAAQ/E,EAAIV,GACpB,OAAON,QAAQC,QAAQ,CACnBgG,SAAS,EACTrG,QAASmG,EAAOnG,UAIxB,IACIsG,EADAC,EAAU,IAAInG,SAAQ,SAAUoG,GAAK,OAAQnG,EAAUmG,KAEvDC,EAAa,CACbC,WAAW,EACXC,YAAa,SAAUC,GACnB,IAAIC,EACAC,EAAI,IAAI1G,SAAQ,SAAUoG,GAAK,OAAQK,EAAOL,KAiBlD,OAhBAnG,EAAQ,CACJgG,SAAS,EACTrG,QAAS4G,EACTG,YAAa,WAAc,OAAO,eAAUb,OAAO,OAAQ,GAAQ,WAC/D,OAAO,eAAYpH,MAAM,SAAUC,GAC/B,OAAQA,EAAGC,OACP,KAAK,EAED,OADA6H,IACO,CAAC,EAAaP,GACzB,KAAK,EAED,OADAvH,EAAGe,OACI,CAAC,aAKrBgH,IAGf,GAAkB,SAAdd,EACAM,EAASxH,KAAK0E,QAAQpC,EAAIV,EAAQ+F,OAEjC,CACD,IAAIO,EAAiBlI,KAAKkE,MAAMiE,MAAK,SAAU9E,GAAK,OAAOjB,EAAQiB,EAAGf,EAAIV,MACtEsG,EACAV,EAASxH,KAAKyG,MAAMyB,EAAgBtH,OAAOC,OAAOD,OAAOC,OAAO,GAAI8G,GAAa,CAAET,UAAW,OAAQkB,iBAAkBjB,KAErG,YAAdD,EACLM,EAASxH,KAAK4F,KAAKtD,EAAIV,EAAQhB,OAAOC,OAAOD,OAAOC,OAAO,GAAI8G,GAAa,CAAES,iBAAkBjB,KAE7E,SAAdD,IACLM,EAASxH,KAAK0E,QAAQpC,EAAIV,EAAQhB,OAAOC,OAAOD,OAAOC,OAAO,GAAI8G,GAAa,CAAET,UAAW,OAAQ/C,UAAU,EAAMiE,iBAAkBjB,MAG9I,OAAOM,GAGXjE,EAAQ1B,UAAUuG,WAAa,WAC3B,OAAO,eAAUrI,UAAM,OAAQ,GAAQ,WACnC,IAAIqH,EACJ,OAAO,eAAYrH,MAAM,SAAUC,GAE/B,OADAoH,EAASrH,KAAKsH,gBACP,CAAC,EAAcD,EACZ,CACE/E,GAAI+E,EAAOnG,QAAQoH,QACnB1G,OAAQyF,EAAOzF,OACfV,QAASmG,EAAOnG,cAElBiB,UAOtBqB,EAAQ1B,UAAUyG,UAAY,WAC1B,OAAOjH,QAAQC,QAAQvB,KAAKsH,kBAOhC9D,EAAQ1B,UAAU0G,WAAa,SAAUC,GACrC,OAAOnH,QAAQC,QAAQvB,KAAKkE,MAAMuE,KAOtCjF,EAAQ1B,UAAU4G,UAAY,SAAUrG,GACpC,OAAOf,QAAQC,QAAQvB,KAAK2I,cAActG,KAO9CmB,EAAQ1B,UAAU8G,YAAc,SAAUvG,GACtC,OAAOf,QAAQC,QAAQvB,KAAK6I,gBAAgBxG,KAEhDmB,EAAQ1B,UAAUgH,UAAY,WAC1B,OAAO9I,KAAKkE,MAAMvB,QAEtBa,EAAQ1B,UAAUwF,cAAgB,WAC9B,OAAOtH,KAAKkE,MAAMlE,KAAKkE,MAAMvB,OAAS,IAE1Ca,EAAQ1B,UAAU6G,cAAgB,SAAUtG,GAExC,YADa,IAATA,IAAmBA,EAAOrC,KAAKsH,oBACzBjF,IAAQrC,KAAK6I,gBAAgBxG,KAE3CmB,EAAQ1B,UAAU+G,gBAAkB,SAAUxG,GAE1C,QADa,IAATA,IAAmBA,EAAOrC,KAAKsH,iBAC9BjF,EAAL,CAGA,IAAI6B,EAAQlE,KAAKkE,MACbuE,EAAQvE,EAAM6E,QAAQ1G,GAC1B,OAAOoG,EAAQ,EAAIvE,EAAMuE,EAAQ,QAAKtG,IAY1CqB,EAAQ1B,UAAUiE,UAAY,SAAUiD,EAAIlD,GACxC,OAAO,eAAU9F,UAAM,OAAQ,GAAQ,WACnC,IAAIyH,EAASwB,EAAQC,EACrB,OAAO,eAAYlJ,MAAM,SAAUC,GAC/B,OAAQA,EAAGC,OACP,KAAK,EACD,OAAIF,KAAKgE,iBAA8B,MAAXgF,EAAGnD,MAAgBmD,EAAGnD,KAAKsD,WAC5C,CAAC,EAAc7H,QAAQC,SAAQ,KAE1CkG,EAAU,IAAInG,SAAQ,SAAUC,EAAS6H,GACrCJ,EAAGzH,QAAUA,EACbyH,EAAGI,OAASA,KAEhBJ,EAAGlD,KAAOA,EACJkD,EAAGnD,OAA8B,IAAtBmD,EAAGnD,KAAK+B,WAAuB5H,KAAK+D,WACrDkF,EAASpE,SAASC,cAAc,cAC3BmE,EACE,CAAC,EAAaA,EAAOC,iBADR,CAAC,EAAa,IAFsC,CAAC,EAAa,IAI1F,KAAK,EAED,GADAA,EAAgBjJ,EAAGe,QACG,IAAlBkI,EACA,MAAO,CAAC,EAAc5H,QAAQC,SAAQ,IAErC,GAA6B,kBAAlB2H,EAEZ,OADAD,EAAOrD,KAAKsD,EAAeF,EAAGnD,KAAKqB,WAAa,QACzC,CAAC,EAAc5F,QAAQC,SAAQ,IAE1CtB,EAAGC,MAAQ,EACf,KAAK,EAUD,OARI8I,EAAG/C,aAAyC,IAA1B+C,EAAG/C,YAAYtD,SACjCqG,EAAG/C,iBAAc9D,GAGrBnC,KAAK6D,WAAW+B,KAAKoD,GAGrBhJ,KAAKqJ,WACE,CAAC,EAAc5B,WAK1CjE,EAAQ1B,UAAUwH,QAAU,SAAUC,EAAQP,GAC1C,GAAIhJ,KAAKiE,UACLjE,KAAKwJ,UAAU,+BAAgCR,QAOnD,GAJIA,EAAGlD,MACHkD,EAAGlD,KAAKyD,EAAOE,aAAcF,EAAOG,mBAAoBH,EAAOI,aAAcJ,EAAOK,YAAaL,EAAOrC,WAE5G8B,EAAGzH,QAAQgI,EAAOE,eACQ,IAAtBT,EAAGnD,KAAK+B,WAAuB5H,KAAK+D,UAAW,CAC/C,IAAIkF,EAASpE,SAASC,cAAc,cACpC,GAAImE,EAAQ,CACR,IAAI/B,EAAiC,SAArBqC,EAAOrC,UAAuB,OAAS,UACvD+B,EAAOY,WAAW3C,MAI9B1D,EAAQ1B,UAAUgI,OAAS,SAAUC,EAAcf,GAC3ChJ,KAAKiE,UACLjE,KAAKwJ,UAAU,+BAAgCR,IAGnDhJ,KAAK6D,WAAWlB,OAAS,EACzB3C,KAAKwJ,UAAUO,EAAcf,KAEjCxF,EAAQ1B,UAAU0H,UAAY,SAAUO,EAAcf,GAC9CA,EAAGlD,MACHkD,EAAGlD,MAAK,GAAO,EAAOiE,GAEtBf,EAAGI,SAAWpJ,KAAKiE,UACnB+E,EAAGI,OAAOW,GAGVf,EAAGzH,SAAQ,IAGnBiC,EAAQ1B,UAAUuH,SAAW,WAGzB,GAAIrJ,KAAKgE,gBACL,OAAO,EAIX,IAAIgF,EAAKhJ,KAAK6D,WAAWmG,QACzB,QAAKhB,IAGLhJ,KAAKiK,cAAcjB,IACZ,IAEXxF,EAAQ1B,UAAUmI,cAAgB,SAAUjB,GACxC,OAAO,eAAUhJ,UAAM,OAAQ,GAAQ,WACnC,IAAI4J,EAAaD,EAAcD,EAAoBQ,EAAiBX,EAAQtJ,EAAIkK,EAChF,OAAO,eAAYnK,MAAM,SAAUgC,GAC/B,OAAQA,EAAG9B,OACP,KAAK,EAQD,GAPA8B,EAAGoI,KAAKxE,KAAK,CAAC,EAAG,EAAG,CAAE,IAEtB5F,KAAK2D,iBAAiBuB,OACtBlF,KAAKgE,iBAAkB,EACvBhE,KAAKqK,UAAUrB,GACfY,EAAc5J,KAAKsH,gBACnBqC,EAAe3J,KAAKsK,gBAAgBtB,EAAIY,IACnCA,IAAgBD,EACjB,MAAM,IAAItJ,MAAM,uCAEpB,OAAMsJ,GAAgBA,EAAa9H,QAAUL,EACtC,CAAC,EAAamI,EAAa5H,KAAK/B,KAAKD,KADyB,CAAC,EAAa,GAEvF,KAAK,EACDiC,EAAGhB,OACHgB,EAAG9B,MAAQ,EACf,KAAK,EAeD,OAdAF,KAAKuK,aAAaZ,EAAcC,EAAaZ,GAC7CU,GAAsBV,EAAGwB,4BAA8BxB,EAAGyB,4BACtDd,IAAiBC,EACjBF,GAAsBV,EAAGnD,MAAQ+D,IACjCM,EAAwC,SAAtBlB,EAAGnD,KAAKqB,UAKtBgD,IACAlB,EAAGnD,KAAKuC,iBAAmBY,EAAGnD,KAAKuC,kBAAqBuB,GAAgBA,EAAavB,kBAEzFwB,EAAYxB,iBAAmBY,EAAGnD,KAAKuC,kBAEtCsB,EACE,CAAC,EAAa1J,KAAK0K,WAAWf,EAAcC,EAAaZ,IADhC,CAAC,EAAa,GAElD,KAAK,EAED,OADA/I,EAAK+B,EAAGhB,OACD,CAAC,EAAa,GACzB,KAAK,EACDf,EAAK,CAKDwJ,cAAc,EACdC,oBAAoB,GAExB1H,EAAG9B,MAAQ,EACf,KAAK,EAID,OAHAqJ,EAAStJ,EACTD,KAAKsJ,QAAQC,EAAQP,GACrBhJ,KAAK4D,gBAAgBsB,OACd,CAAC,EAAa,GACzB,KAAK,EAGD,OAFAiF,EAAiBnI,EAAGhB,OACpBhB,KAAK8J,OAAOK,EAAgBnB,GACrB,CAAC,EAAa,GACzB,KAAK,EAGD,OAFAhJ,KAAKgE,iBAAkB,EACvBhE,KAAKqJ,WACE,CAAC,WAK5B7F,EAAQ1B,UAAUuI,UAAY,SAAUrB,GACpC,IAAI2B,EAAc3K,KAAKkE,MAAMvB,OAK7B,GAJAqG,EAAGnD,KAAOmD,EAAGnD,MAAQ,QACI1D,IAArB6G,EAAGnD,KAAKnG,WACRsJ,EAAGnD,KAAKnG,SAAWM,KAAKN,eAENyC,IAAlB6G,EAAGpC,WAA0B,CAC7B,oBAA0BzE,IAAnB6G,EAAGzC,YAA2B,gCACrC,oBAA0BpE,IAAnB6G,EAAGxC,YAA2B,gCACrC,IAAIiC,EAAQzI,KAAKkE,MAAM6E,QAAQC,EAAGpC,YAClC,GAAI6B,EAAQ,EACR,MAAM,IAAIpI,MAAM,4BAEpB2I,EAAGzC,aAAekC,OAECtG,IAAnB6G,EAAGzC,cACCyC,EAAGzC,YAAc,IACjByC,EAAGzC,YAAcoE,EAAc,GAE/B3B,EAAGxC,YAAc,IACjBwC,EAAGxC,YAAcmE,EAAc3B,EAAGzC,aAEtCyC,EAAGyB,0BACCzB,EAAGxC,YAAc,GAAKwC,EAAGzC,YAAcyC,EAAGxC,cAAgBmE,GAE9D3B,EAAG/C,eAGC+C,EAAGhD,YAAc,GAAKgD,EAAGhD,YAAc2E,KACvC3B,EAAGhD,YAAc2E,GAErB3B,EAAGwB,2BAA6BxB,EAAGhD,cAAgB2E,GAEvD,IAAI1E,EAAc+C,EAAG/C,YACrB,GAAKA,EAAL,CAGA,eAAOA,EAAYtD,OAAS,EAAG,0BAC/B,IAAIiI,EAAkB3H,EAAegD,GACrC,GAA+B,IAA3B2E,EAAgBjI,OAChB,MAAM,IAAItC,MAAM,2BAGpB,IAAK,IAAIuC,EAAK,EAAGiI,EAAoBD,EAAiBhI,EAAKiI,EAAkBlI,OAAQC,IAAM,CACvF,IAAIP,EAAOwI,EAAkBjI,GAC7BP,EAAK3C,SAAWsJ,EAAGnD,KAAKnG,SACxB,IAAIwC,EAAMG,EAAKH,IACf,GAAIA,GAAOA,IAAQlC,KACf,MAAM,IAAIK,MAAM,sCAEpB,GAAIgC,EAAKR,QAAUH,EACf,MAAM,IAAIrB,MAAM,uCAGxB2I,EAAG/C,YAAc2E,IAErBpH,EAAQ1B,UAAUwI,gBAAkB,SAAUtB,EAAIY,GAC9C,IAAI3D,EAAc+C,EAAG/C,YACrB,QAAoB9D,IAAhB8D,EAGA,OAAOA,EAAYA,EAAYtD,OAAS,GAE5C,IAAI4D,EAAcyC,EAAGzC,YACrB,QAAoBpE,IAAhBoE,EAGA,IAFA,IAAIrC,EAAQlE,KAAKkE,MACb4G,EAAYvE,EAAcyC,EAAGxC,YACxBuE,EAAI7G,EAAMvB,OAAS,EAAGoI,GAAK,EAAGA,IAAK,CACxC,IAAI1I,EAAO6B,EAAM6G,GACjB,IAAKA,EAAIxE,GAAewE,GAAKD,IAAczI,IAASuH,EAChD,OAAOvH,IAMvBmB,EAAQ1B,UAAUyI,aAAe,SAAUZ,EAAcC,EAAaZ,GAClE,eAAOY,GAAeD,EAAc,8CACpC,eAAOX,EAAGzH,QAAS,yBACnB,eAAOyH,EAAGI,OAAQ,wBAClB,IAII4B,EAJAnF,EAAOmD,EAAGnD,KACVI,EAAc+C,EAAG/C,YACjBM,EAAcyC,EAAGzC,YACjBC,EAAcwC,EAAGxC,YAGrB,QAAoBrE,IAAhBoE,QAA6CpE,IAAhBqE,EAA2B,CACxD,eAAOD,GAAe,EAAG,mCACzB,eAAOC,GAAe,EAAG,mCACzBwE,EAAe,GACf,IAAK,IAAID,EAAI,EAAGA,EAAIvE,EAAauE,IAAK,CAClC,IAAI1I,EAAOrC,KAAKkE,MAAM6G,EAAIxE,GACtBlE,GAAQA,IAASsH,GAAgBtH,IAASuH,GAC1CoB,EAAapF,KAAKvD,GAI1BwD,EAAKqB,UAAYrB,EAAKqB,WAAa,OAEvC,IAAI+D,EAAejL,KAAKkE,MAAMvB,aACTR,IAAhB8D,EAA4BA,EAAYtD,OAAS,SACjCR,IAAhBqE,EAA4BA,EAAc,GAE/C,GADA,eAAOyE,GAAgB,EAAG,qCACL,IAAjBA,EAEA,MADAC,QAAQC,KAAK,uGAAwGnL,KAAMA,KAAKD,IAC1H,IAAIM,MAAM,iDAIpB,GAAI4F,EAAa,CAGb,IADA,IAAIE,EAAc6C,EAAGhD,YACZpD,EAAK,EAAGwI,EAAgBnF,EAAarD,EAAKwI,EAAczI,OAAQC,IAAM,CACvEP,EAAO+I,EAAcxI,GACzB5C,KAAKqL,aAAahJ,EAAM8D,GACxBA,IAEA6C,EAAGwB,6BAEH3E,EAAKqB,UAAYrB,EAAKqB,WAAa,WAQ3C,GAAI8D,GAAgBA,EAAarI,OAAS,EAAG,CACzC,IAAK,IAAI1C,EAAK,EAAGqL,EAAiBN,EAAc/K,EAAKqL,EAAe3I,OAAQ1C,IAAM,CAC1EoC,EAAOiJ,EAAerL,GAC1B,eAAUoC,EAAKnB,QAAS,QACxB,eAAUmB,EAAKnB,QAAS,QACxB,eAAUmB,EAAKnB,QAAS,QAG5B,IAAK,IAAIc,EAAK,EAAGuJ,EAAiBP,EAAchJ,EAAKuJ,EAAe5I,OAAQX,IAAM,CAC1EK,EAAOkJ,EAAevJ,GAC1BhC,KAAKwL,YAAYnJ,MAI7BmB,EAAQ1B,UAAU4I,WAAa,SAAUf,EAAcC,EAAaZ,GAChE,OAAO,eAAUhJ,UAAM,OAAQ,GAAQ,WACnC,IAAI6F,EAAM4F,EAAkBzG,EAAM8C,EAAY4D,EAAWC,EAAelC,EACpErC,EAAQpH,KACZ,OAAO,eAAYA,MAAM,SAAUC,GAC/B,OAAQA,EAAGC,OACP,KAAK,EAUD,OATA2F,EAAOmD,EAAGnD,KACV4F,EAAmB5F,EAAK+F,kBAClB,SAAUC,GAAO,OAAOzE,EAAM0E,MAAQD,QACtC1J,EACN6C,EAAO,eAAWhF,MAClB8H,EAAa6B,EAAazI,QAC1BwK,EAAY9B,GAAeA,EAAY1I,QACvCyK,EAAgB/K,OAAOC,OAAO,CAAEmE,KAAMA,EAAM+G,WAAY/L,KAAK2I,cAAcgB,GAAeqC,OAAQhM,KAAKD,GAAIqI,iBAAkBpI,KAAKmH,WAAatB,EAAKuC,kBAAoB,OAAO6D,IAAI,gBAAiBR,iBAAkBA,EAAkBtH,SAAUnE,KAAKmE,UAAY,OAAOc,WAAW,YAAY,GAAO6C,WAAYA,EAChT4D,UAAWA,GAAa7F,GACrB,CAAC,EAAa,eAAW8F,IACpC,KAAK,EAED,OADAlC,EAAgBxJ,EAAGe,OAAQyI,aACpB,CAAC,EAAczJ,KAAKkM,iBAAiBzC,EAAcE,EAAcC,EAAa/D,YAKzGrC,EAAQ1B,UAAUoK,iBAAmB,SAAUzC,EAAcE,EAAcC,EAAa/D,GACpF,IAAIsG,EAAc1C,EAAeE,EAAeC,EAIhD,OAHIuC,GACAnM,KAAKoM,QAAQD,GAEV,CACH1C,aAAcA,EACdC,oBAAoB,EACpBC,aAAcA,EACdC,YAAaA,EACb1C,UAAWrB,EAAKqB,YAGxB1D,EAAQ1B,UAAUuJ,aAAe,SAAUhJ,EAAMoG,GAC7C,IAAIvE,EAAQlE,KAAKkE,MACbmI,EAAgBnI,EAAM6E,QAAQ1G,GAC9BgK,GAAiB,GAGjB,eAAOhK,EAAKH,MAAQlC,KAAM,+BAC1BkE,EAAMoI,OAAO7D,EAAO,EAAGvE,EAAMoI,OAAOD,EAAe,GAAG,MAGtD,gBAAQhK,EAAKH,IAAK,eAGlBG,EAAKH,IAAMlC,KAEXkE,EAAMoI,OAAO7D,EAAO,EAAGpG,KAG/BmB,EAAQ1B,UAAU8E,WAAa,SAAUvE,GACrC,eAAOA,EAAKR,QAAUJ,GAAuBY,EAAKR,QAAUH,EAAsB,4CAClF,IAAIwC,EAAQlE,KAAKkE,MACbuE,EAAQvE,EAAM6E,QAAQ1G,GAC1B,eAAOoG,GAAS,EAAG,kCACfA,GAAS,GACTvE,EAAMoI,OAAO7D,EAAO,IAG5BjF,EAAQ1B,UAAU0J,YAAc,SAAUnJ,GACtCA,EAAKJ,WACLjC,KAAK4G,WAAWvE,IAKpBmB,EAAQ1B,UAAUsK,QAAU,SAAUG,GAIlC,IAAIvM,KAAKiE,UAKT,IAFA,IAAIC,EAAQlE,KAAKkE,MACbsI,EAAkBtI,EAAM6E,QAAQwD,GAC3BxB,EAAI7G,EAAMvB,OAAS,EAAGoI,GAAK,EAAGA,IAAK,CACxC,IAAI1I,EAAO6B,EAAM6G,GASb7J,EAAUmB,EAAKnB,QACfA,IACI6J,EAAIyB,GAGJ,eAAUtL,EAAS,QACnBlB,KAAKwL,YAAYnJ,IAEZ0I,EAAIyB,GAGT,eAActL,GAAS,MAKvCsC,EAAQ1B,UAAUuD,SAAW,WACzB,QAAUrF,KAAKuE,eACVvE,KAAKgE,iBACqB,IAA3BhE,KAAK6D,WAAWlB,QAChB3C,KAAK8D,kBACL9D,KAAK2I,iBAEbnF,EAAQ1B,UAAUyD,QAAU,WACxBvF,KAAK+F,UAAU,CACXQ,aAAc,EACdC,YAAa,EACbX,KAAM,CACFqB,UAAW,OACX0E,mBAAmB,SAExBzJ,IAEPqB,EAAQ1B,UAAU0D,OAAS,SAAUiH,GAC7BzM,KAAK8L,OACL9L,KAAK8L,MAAMY,aAAaD,IAGhCjJ,EAAQ1B,UAAU2D,MAAQ,SAAUkH,EAAgBF,EAAWG,GAC3D,IAAIxF,EAAQpH,KACZ,GAAIA,KAAK8L,MAAO,CACZ9L,KAAK8D,kBAAmB,EACxB9D,KAAK8L,MAAMe,UAAS,WAChBzF,EAAMtD,kBAAmB,IAC1B,CAAEgJ,iBAAiB,IAEtB,IAAIC,EAAe,GAAoB,KAAQ,KAS1CJ,EAKDI,GAAgB,eAAwB,CAAC,EAAG,GAAI,CAAC,IAAM,KAAO,CAAC,EAAG,GAAI,CAAC,EAAG,GAAIN,GAAW,IAJzFzM,KAAK8L,MAAMkB,OAAO,kCAClBD,GAAgB,eAAwB,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,IAAM,KAAO,CAAC,EAAG,GAAIN,GAAW,IAK7FzM,KAAK8L,MAAMmB,YAAYN,EAAiB,EAAI,EAAGI,EAAcH,KAGrEpJ,EAAQ1B,UAAUoL,OAAS,WACvB,OAAQ,cAAD,CAAG,OAAQ,OAEtBtM,OAAOuM,eAAe3J,EAAQ1B,UAAW,KAAM,CAC3CmK,IAAK,WAAc,OAAO,eAAWjM,OACrCoN,YAAY,EACZC,cAAc,IAElBzM,OAAOuM,eAAe3J,EAAS,WAAY,CACvCyI,IAAK,WACD,MAAO,CACH,aAAgB,CAAC,uBACjB,KAAQ,CAAC,iBAGjBmB,YAAY,EACZC,cAAc,IAEX7J,EA5zBa,GA8zBxBD,EAAI+J,MAAQhK,EACZ,IAAIiK,EAAU,SAAUxN,EAAIyN,EAAiB5N,EAAWE,EAAgB2N,GACpE,IAAIvL,EAAMnC,EAAGgF,QAAQ,WACrB,GAAI7C,EACA,GAAwB,YAApBsL,GACA,QAAkBrL,IAAdvC,EACA,OAAOsC,EAAI0D,KAAKhG,EAAWE,EAAgB,CAAEqJ,YAAY,EAAMf,iBAAkBqF,SAGpF,GAAwB,SAApBD,GACL,QAAkBrL,IAAdvC,EACA,OAAOsC,EAAIwC,QAAQ9E,EAAWE,EAAgB,CAAEqJ,YAAY,EAAMf,iBAAkBqF,SAGvF,GAAwB,SAApBD,EACL,OAAOtL,EAAIoE,IAAI,CAAE6C,YAAY,EAAMf,iBAAkBqF,IAG7D,OAAOnM,QAAQC,SAAQ,IAEvBmM,EAAyB,WACzB,SAASA,EAAQjK,GACb,IAAI2D,EAAQpH,KACZ,eAAiBA,KAAMyD,GAIvBzD,KAAKwN,gBAAkB,UACvBxN,KAAK2N,QAAU,WACX,OAAOJ,EAAQnG,EAAMrH,GAAIqH,EAAMoG,gBAAiBpG,EAAMxH,UAAWwH,EAAMtH,eAAgBsH,EAAMqG,kBAWrG,OARAC,EAAQ5L,UAAUoL,OAAS,WACvB,OAAQ,cAAD,CAAG,OAAM,CAAES,QAAS3N,KAAK2N,WAEpC/M,OAAOuM,eAAeO,EAAQ5L,UAAW,KAAM,CAC3CmK,IAAK,WAAc,OAAO,eAAWjM,OACrCoN,YAAY,EACZC,cAAc,IAEXK,EApBiB","file":"js/chunk-5e134154.00504ac7.js","sourcesContent":["import { __awaiter, __generator } from \"tslib\";\nvar attachComponent = function (delegate, container, component, cssClasses, componentProps) { return __awaiter(void 0, void 0, void 0, function () {\n    var el;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (delegate) {\n                    return [2 /*return*/, delegate.attachViewToDom(container, component, componentProps, cssClasses)];\n                }\n                if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n                    throw new Error('framework delegate is missing');\n                }\n                el = (typeof component === 'string')\n                    ? container.ownerDocument && container.ownerDocument.createElement(component)\n                    : component;\n                if (cssClasses) {\n                    cssClasses.forEach(function (c) { return el.classList.add(c); });\n                }\n                if (componentProps) {\n                    Object.assign(el, componentProps);\n                }\n                container.appendChild(el);\n                if (!el.componentOnReady) return [3 /*break*/, 2];\n                return [4 /*yield*/, el.componentOnReady()];\n            case 1:\n                _a.sent();\n                _a.label = 2;\n            case 2: return [2 /*return*/, el];\n        }\n    });\n}); };\nvar detachComponent = function (delegate, element) {\n    if (element) {\n        if (delegate) {\n            var container = element.parentElement;\n            return delegate.removeViewFromDom(container, element);\n        }\n        element.remove();\n    }\n    return Promise.resolve();\n};\nexport { attachComponent as a, detachComponent as d };\n","import { __awaiter, __generator } from \"tslib\";\nimport { r as registerInstance, e as createEvent, h, i as getElement, H as Host } from './index-92848855.js';\nimport { b as getIonMode, c as config } from './ionic-global-23e7365a.js';\nimport { h as assert } from './helpers-47d562d2.js';\nimport { l as lifecycle, t as transition, s as setPageHidden, d as LIFECYCLE_WILL_UNLOAD, b as LIFECYCLE_WILL_LEAVE, c as LIFECYCLE_DID_LEAVE } from './index-96111fa9.js';\nimport { g as getTimeGivenProgression } from './cubic-bezier-685f606a.js';\nimport { a as attachComponent } from './framework-delegate-d1eb6504.js';\nvar VIEW_STATE_NEW = 1;\nvar VIEW_STATE_ATTACHED = 2;\nvar VIEW_STATE_DESTROYED = 3;\nvar ViewController = /** @class */ (function () {\n    function ViewController(component, params) {\n        this.component = component;\n        this.params = params;\n        this.state = VIEW_STATE_NEW;\n    }\n    ViewController.prototype.init = function (container) {\n        return __awaiter(this, void 0, void 0, function () {\n            var component, _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        this.state = VIEW_STATE_ATTACHED;\n                        if (!!this.element) return [3 /*break*/, 2];\n                        component = this.component;\n                        _a = this;\n                        return [4 /*yield*/, attachComponent(this.delegate, container, component, ['ion-page', 'ion-page-invisible'], this.params)];\n                    case 1:\n                        _a.element = _b.sent();\n                        _b.label = 2;\n                    case 2: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * DOM WRITE\n     */\n    ViewController.prototype._destroy = function () {\n        assert(this.state !== VIEW_STATE_DESTROYED, 'view state must be ATTACHED');\n        var element = this.element;\n        if (element) {\n            if (this.delegate) {\n                this.delegate.removeViewFromDom(element.parentElement, element);\n            }\n            else {\n                element.remove();\n            }\n        }\n        this.nav = undefined;\n        this.state = VIEW_STATE_DESTROYED;\n    };\n    return ViewController;\n}());\nvar matches = function (view, id, params) {\n    if (!view) {\n        return false;\n    }\n    if (view.component !== id) {\n        return false;\n    }\n    var currentParams = view.params;\n    if (currentParams === params) {\n        return true;\n    }\n    if (!currentParams && !params) {\n        return true;\n    }\n    if (!currentParams || !params) {\n        return false;\n    }\n    var keysA = Object.keys(currentParams);\n    var keysB = Object.keys(params);\n    if (keysA.length !== keysB.length) {\n        return false;\n    }\n    // Test for A's keys different from B.\n    for (var _i = 0, keysA_1 = keysA; _i < keysA_1.length; _i++) {\n        var key = keysA_1[_i];\n        if (currentParams[key] !== params[key]) {\n            return false;\n        }\n    }\n    return true;\n};\nvar convertToView = function (page, params) {\n    if (!page) {\n        return null;\n    }\n    if (page instanceof ViewController) {\n        return page;\n    }\n    return new ViewController(page, params);\n};\nvar convertToViews = function (pages) {\n    return pages.map(function (page) {\n        if (page instanceof ViewController) {\n            return page;\n        }\n        if ('component' in page) {\n            /**\n             * TODO Ionic 6:\n             * Consider switching to just using `undefined` here\n             * as well as on the public interfaces and on\n             * `NavComponentWithProps`. Previously `pages` was\n             * of type `any[]` so TypeScript did not catch this.\n             */\n            return convertToView(page.component, (page.componentProps === null) ? undefined : page.componentProps);\n        }\n        return convertToView(page, undefined);\n    }).filter(function (v) { return v !== null; });\n};\nvar navCss = \":host{left:0;right:0;top:0;bottom:0;position:absolute;contain:layout size style;overflow:hidden;z-index:0}\";\nvar Nav = /** @class */ (function () {\n    function class_1(hostRef) {\n        registerInstance(this, hostRef);\n        this.ionNavWillLoad = createEvent(this, \"ionNavWillLoad\", 7);\n        this.ionNavWillChange = createEvent(this, \"ionNavWillChange\", 3);\n        this.ionNavDidChange = createEvent(this, \"ionNavDidChange\", 3);\n        this.transInstr = [];\n        this.animationEnabled = true;\n        this.useRouter = false;\n        this.isTransitioning = false;\n        this.destroyed = false;\n        this.views = [];\n        /**\n         * If `true`, the nav should animate the transition of components.\n         */\n        this.animated = true;\n    }\n    class_1.prototype.swipeGestureChanged = function () {\n        if (this.gesture) {\n            this.gesture.enable(this.swipeGesture === true);\n        }\n    };\n    class_1.prototype.rootChanged = function () {\n        if (this.root !== undefined) {\n            if (!this.useRouter) {\n                this.setRoot(this.root, this.rootParams);\n            }\n        }\n    };\n    class_1.prototype.componentWillLoad = function () {\n        this.useRouter =\n            !!document.querySelector('ion-router') &&\n                !this.el.closest('[no-router]');\n        if (this.swipeGesture === undefined) {\n            var mode = getIonMode(this);\n            this.swipeGesture = config.getBoolean('swipeBackEnabled', mode === 'ios');\n        }\n        this.ionNavWillLoad.emit();\n    };\n    class_1.prototype.componentDidLoad = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        this.rootChanged();\n                        _a = this;\n                        return [4 /*yield*/, import('./swipe-back-2c765762.js')];\n                    case 1:\n                        _a.gesture = (_b.sent()).createSwipeBackGesture(this.el, this.canStart.bind(this), this.onStart.bind(this), this.onMove.bind(this), this.onEnd.bind(this));\n                        this.swipeGestureChanged();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    class_1.prototype.disconnectedCallback = function () {\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var view = _a[_i];\n            lifecycle(view.element, LIFECYCLE_WILL_UNLOAD);\n            view._destroy();\n        }\n        if (this.gesture) {\n            this.gesture.destroy();\n            this.gesture = undefined;\n        }\n        // release swipe back gesture and transition\n        this.transInstr.length = this.views.length = 0;\n        this.destroyed = true;\n    };\n    /**\n     * Push a new component onto the current navigation stack. Pass any additional\n     * information along as an object. This additional information is accessible\n     * through NavParams.\n     *\n     * @param component The component to push onto the navigation stack.\n     * @param componentProps Any properties of the component.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    class_1.prototype.push = function (component, componentProps, opts, done) {\n        return this.queueTrns({\n            insertStart: -1,\n            insertViews: [{ component: component, componentProps: componentProps }],\n            opts: opts\n        }, done);\n    };\n    /**\n     * Inserts a component into the navigation stack at the specified index.\n     * This is useful to add a component at any point in the navigation stack.\n     *\n     * @param insertIndex The index to insert the component at in the stack.\n     * @param component The component to insert into the navigation stack.\n     * @param componentProps Any properties of the component.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    class_1.prototype.insert = function (insertIndex, component, componentProps, opts, done) {\n        return this.queueTrns({\n            insertStart: insertIndex,\n            insertViews: [{ component: component, componentProps: componentProps }],\n            opts: opts\n        }, done);\n    };\n    /**\n     * Inserts an array of components into the navigation stack at the specified index.\n     * The last component in the array will become instantiated as a view, and animate\n     * in to become the active view.\n     *\n     * @param insertIndex The index to insert the components at in the stack.\n     * @param insertComponents The components to insert into the navigation stack.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    class_1.prototype.insertPages = function (insertIndex, insertComponents, opts, done) {\n        return this.queueTrns({\n            insertStart: insertIndex,\n            insertViews: insertComponents,\n            opts: opts\n        }, done);\n    };\n    /**\n     * Pop a component off of the navigation stack. Navigates back from the current\n     * component.\n     *\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    class_1.prototype.pop = function (opts, done) {\n        return this.queueTrns({\n            removeStart: -1,\n            removeCount: 1,\n            opts: opts\n        }, done);\n    };\n    /**\n     * Pop to a specific index in the navigation stack.\n     *\n     * @param indexOrViewCtrl The index or view controller to pop to.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    class_1.prototype.popTo = function (indexOrViewCtrl, opts, done) {\n        var tiConfig = {\n            removeStart: -1,\n            removeCount: -1,\n            opts: opts\n        };\n        if (typeof indexOrViewCtrl === 'object' && indexOrViewCtrl.component) {\n            tiConfig.removeView = indexOrViewCtrl;\n            tiConfig.removeStart = 1;\n        }\n        else if (typeof indexOrViewCtrl === 'number') {\n            tiConfig.removeStart = indexOrViewCtrl + 1;\n        }\n        return this.queueTrns(tiConfig, done);\n    };\n    /**\n     * Navigate back to the root of the stack, no matter how far back that is.\n     *\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    class_1.prototype.popToRoot = function (opts, done) {\n        return this.queueTrns({\n            removeStart: 1,\n            removeCount: -1,\n            opts: opts\n        }, done);\n    };\n    /**\n     * Removes a component from the navigation stack at the specified index.\n     *\n     * @param startIndex The number to begin removal at.\n     * @param removeCount The number of components to remove.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    class_1.prototype.removeIndex = function (startIndex, removeCount, opts, done) {\n        if (removeCount === void 0) { removeCount = 1; }\n        return this.queueTrns({\n            removeStart: startIndex,\n            removeCount: removeCount,\n            opts: opts\n        }, done);\n    };\n    /**\n     * Set the root for the current navigation stack to a component.\n     *\n     * @param component The component to set as the root of the navigation stack.\n     * @param componentProps Any properties of the component.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    class_1.prototype.setRoot = function (component, componentProps, opts, done) {\n        return this.setPages([{ component: component, componentProps: componentProps }], opts, done);\n    };\n    /**\n     * Set the views of the current navigation stack and navigate to the last view.\n     * By default animations are disabled, but they can be enabled by passing options\n     * to the navigation controller. Navigation parameters can also be passed to the\n     * individual pages in the array.\n     *\n     * @param views The list of views to set as the navigation stack.\n     * @param opts The navigation options.\n     * @param done The transition complete function.\n     */\n    class_1.prototype.setPages = function (views, opts, done) {\n        if (opts == null) {\n            opts = {};\n        }\n        // if animation wasn't set to true then default it to NOT animate\n        if (opts.animated !== true) {\n            opts.animated = false;\n        }\n        return this.queueTrns({\n            insertStart: 0,\n            insertViews: views,\n            removeStart: 0,\n            removeCount: -1,\n            opts: opts\n        }, done);\n    };\n    /** @internal */\n    class_1.prototype.setRouteId = function (id, params, direction, animation) {\n        var _this = this;\n        var active = this.getActiveSync();\n        if (matches(active, id, params)) {\n            return Promise.resolve({\n                changed: false,\n                element: active.element\n            });\n        }\n        var resolve;\n        var promise = new Promise(function (r) { return (resolve = r); });\n        var finish;\n        var commonOpts = {\n            updateURL: false,\n            viewIsReady: function (enteringEl) {\n                var mark;\n                var p = new Promise(function (r) { return (mark = r); });\n                resolve({\n                    changed: true,\n                    element: enteringEl,\n                    markVisible: function () { return __awaiter(_this, void 0, void 0, function () {\n                        return __generator(this, function (_a) {\n                            switch (_a.label) {\n                                case 0:\n                                    mark();\n                                    return [4 /*yield*/, finish];\n                                case 1:\n                                    _a.sent();\n                                    return [2 /*return*/];\n                            }\n                        });\n                    }); }\n                });\n                return p;\n            }\n        };\n        if (direction === 'root') {\n            finish = this.setRoot(id, params, commonOpts);\n        }\n        else {\n            var viewController = this.views.find(function (v) { return matches(v, id, params); });\n            if (viewController) {\n                finish = this.popTo(viewController, Object.assign(Object.assign({}, commonOpts), { direction: 'back', animationBuilder: animation }));\n            }\n            else if (direction === 'forward') {\n                finish = this.push(id, params, Object.assign(Object.assign({}, commonOpts), { animationBuilder: animation }));\n            }\n            else if (direction === 'back') {\n                finish = this.setRoot(id, params, Object.assign(Object.assign({}, commonOpts), { direction: 'back', animated: true, animationBuilder: animation }));\n            }\n        }\n        return promise;\n    };\n    /** @internal */\n    class_1.prototype.getRouteId = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var active;\n            return __generator(this, function (_a) {\n                active = this.getActiveSync();\n                return [2 /*return*/, active\n                        ? {\n                            id: active.element.tagName,\n                            params: active.params,\n                            element: active.element\n                        }\n                        : undefined];\n            });\n        });\n    };\n    /**\n     * Get the active view.\n     */\n    class_1.prototype.getActive = function () {\n        return Promise.resolve(this.getActiveSync());\n    };\n    /**\n     * Get the view at the specified index.\n     *\n     * @param index The index of the view.\n     */\n    class_1.prototype.getByIndex = function (index) {\n        return Promise.resolve(this.views[index]);\n    };\n    /**\n     * Returns `true` if the current view can go back.\n     *\n     * @param view The view to check.\n     */\n    class_1.prototype.canGoBack = function (view) {\n        return Promise.resolve(this.canGoBackSync(view));\n    };\n    /**\n     * Get the previous view.\n     *\n     * @param view The view to get.\n     */\n    class_1.prototype.getPrevious = function (view) {\n        return Promise.resolve(this.getPreviousSync(view));\n    };\n    class_1.prototype.getLength = function () {\n        return this.views.length;\n    };\n    class_1.prototype.getActiveSync = function () {\n        return this.views[this.views.length - 1];\n    };\n    class_1.prototype.canGoBackSync = function (view) {\n        if (view === void 0) { view = this.getActiveSync(); }\n        return !!(view && this.getPreviousSync(view));\n    };\n    class_1.prototype.getPreviousSync = function (view) {\n        if (view === void 0) { view = this.getActiveSync(); }\n        if (!view) {\n            return undefined;\n        }\n        var views = this.views;\n        var index = views.indexOf(view);\n        return index > 0 ? views[index - 1] : undefined;\n    };\n    // _queueTrns() adds a navigation stack change to the queue and schedules it to run:\n    // 1. _nextTrns(): consumes the next transition in the queue\n    // 2. _viewInit(): initializes enteringView if required\n    // 3. _viewTest(): ensures canLeave/canEnter Returns `true`, so the operation can continue\n    // 4. _postViewInit(): add/remove the views from the navigation stack\n    // 5. _transitionInit(): initializes the visual transition if required and schedules it to run\n    // 6. _viewAttachToDOM(): attaches the enteringView to the DOM\n    // 7. _transitionStart(): called once the transition actually starts, it initializes the Animation underneath.\n    // 8. _transitionFinish(): called once the transition finishes\n    // 9. _cleanup(): syncs the navigation internal state with the DOM. For example it removes the pages from the DOM or hides/show them.\n    class_1.prototype.queueTrns = function (ti, done) {\n        return __awaiter(this, void 0, void 0, function () {\n            var promise, router, canTransition;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this.isTransitioning && ti.opts != null && ti.opts.skipIfBusy) {\n                            return [2 /*return*/, Promise.resolve(false)];\n                        }\n                        promise = new Promise(function (resolve, reject) {\n                            ti.resolve = resolve;\n                            ti.reject = reject;\n                        });\n                        ti.done = done;\n                        if (!(ti.opts && ti.opts.updateURL !== false && this.useRouter)) return [3 /*break*/, 2];\n                        router = document.querySelector('ion-router');\n                        if (!router) return [3 /*break*/, 2];\n                        return [4 /*yield*/, router.canTransition()];\n                    case 1:\n                        canTransition = _a.sent();\n                        if (canTransition === false) {\n                            return [2 /*return*/, Promise.resolve(false)];\n                        }\n                        else if (typeof canTransition === 'string') {\n                            router.push(canTransition, ti.opts.direction || 'back');\n                            return [2 /*return*/, Promise.resolve(false)];\n                        }\n                        _a.label = 2;\n                    case 2:\n                        // Normalize empty\n                        if (ti.insertViews && ti.insertViews.length === 0) {\n                            ti.insertViews = undefined;\n                        }\n                        // Enqueue transition instruction\n                        this.transInstr.push(ti);\n                        // if there isn't a transition already happening\n                        // then this will kick off this transition\n                        this.nextTrns();\n                        return [2 /*return*/, promise];\n                }\n            });\n        });\n    };\n    class_1.prototype.success = function (result, ti) {\n        if (this.destroyed) {\n            this.fireError('nav controller was destroyed', ti);\n            return;\n        }\n        if (ti.done) {\n            ti.done(result.hasCompleted, result.requiresTransition, result.enteringView, result.leavingView, result.direction);\n        }\n        ti.resolve(result.hasCompleted);\n        if (ti.opts.updateURL !== false && this.useRouter) {\n            var router = document.querySelector('ion-router');\n            if (router) {\n                var direction = result.direction === 'back' ? 'back' : 'forward';\n                router.navChanged(direction);\n            }\n        }\n    };\n    class_1.prototype.failed = function (rejectReason, ti) {\n        if (this.destroyed) {\n            this.fireError('nav controller was destroyed', ti);\n            return;\n        }\n        this.transInstr.length = 0;\n        this.fireError(rejectReason, ti);\n    };\n    class_1.prototype.fireError = function (rejectReason, ti) {\n        if (ti.done) {\n            ti.done(false, false, rejectReason);\n        }\n        if (ti.reject && !this.destroyed) {\n            ti.reject(rejectReason);\n        }\n        else {\n            ti.resolve(false);\n        }\n    };\n    class_1.prototype.nextTrns = function () {\n        // this is the framework's bread 'n butta function\n        // only one transition is allowed at any given time\n        if (this.isTransitioning) {\n            return false;\n        }\n        // there is no transition happening right now\n        // get the next instruction\n        var ti = this.transInstr.shift();\n        if (!ti) {\n            return false;\n        }\n        this.runTransition(ti);\n        return true;\n    };\n    class_1.prototype.runTransition = function (ti) {\n        return __awaiter(this, void 0, void 0, function () {\n            var leavingView, enteringView, requiresTransition, isBackDirection, result, _a, rejectReason_1;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _b.trys.push([0, 6, , 7]);\n                        // set that this nav is actively transitioning\n                        this.ionNavWillChange.emit();\n                        this.isTransitioning = true;\n                        this.prepareTI(ti);\n                        leavingView = this.getActiveSync();\n                        enteringView = this.getEnteringView(ti, leavingView);\n                        if (!leavingView && !enteringView) {\n                            throw new Error('no views in the stack to be removed');\n                        }\n                        if (!(enteringView && enteringView.state === VIEW_STATE_NEW)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, enteringView.init(this.el)];\n                    case 1:\n                        _b.sent();\n                        _b.label = 2;\n                    case 2:\n                        this.postViewInit(enteringView, leavingView, ti);\n                        requiresTransition = (ti.enteringRequiresTransition || ti.leavingRequiresTransition) &&\n                            enteringView !== leavingView;\n                        if (requiresTransition && ti.opts && leavingView) {\n                            isBackDirection = ti.opts.direction === 'back';\n                            /**\n                             * If heading back, use the entering page's animation\n                             * unless otherwise specified by the developer.\n                             */\n                            if (isBackDirection) {\n                                ti.opts.animationBuilder = ti.opts.animationBuilder || (enteringView && enteringView.animationBuilder);\n                            }\n                            leavingView.animationBuilder = ti.opts.animationBuilder;\n                        }\n                        if (!requiresTransition) return [3 /*break*/, 4];\n                        return [4 /*yield*/, this.transition(enteringView, leavingView, ti)];\n                    case 3:\n                        _a = _b.sent();\n                        return [3 /*break*/, 5];\n                    case 4:\n                        _a = {\n                            // transition is not required, so we are already done!\n                            // they're inserting/removing the views somewhere in the middle or\n                            // beginning, so visually nothing needs to animate/transition\n                            // resolve immediately because there's no animation that's happening\n                            hasCompleted: true,\n                            requiresTransition: false\n                        };\n                        _b.label = 5;\n                    case 5:\n                        result = _a;\n                        this.success(result, ti);\n                        this.ionNavDidChange.emit();\n                        return [3 /*break*/, 7];\n                    case 6:\n                        rejectReason_1 = _b.sent();\n                        this.failed(rejectReason_1, ti);\n                        return [3 /*break*/, 7];\n                    case 7:\n                        this.isTransitioning = false;\n                        this.nextTrns();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    class_1.prototype.prepareTI = function (ti) {\n        var viewsLength = this.views.length;\n        ti.opts = ti.opts || {};\n        if (ti.opts.delegate === undefined) {\n            ti.opts.delegate = this.delegate;\n        }\n        if (ti.removeView !== undefined) {\n            assert(ti.removeStart !== undefined, 'removeView needs removeStart');\n            assert(ti.removeCount !== undefined, 'removeView needs removeCount');\n            var index = this.views.indexOf(ti.removeView);\n            if (index < 0) {\n                throw new Error('removeView was not found');\n            }\n            ti.removeStart += index;\n        }\n        if (ti.removeStart !== undefined) {\n            if (ti.removeStart < 0) {\n                ti.removeStart = viewsLength - 1;\n            }\n            if (ti.removeCount < 0) {\n                ti.removeCount = viewsLength - ti.removeStart;\n            }\n            ti.leavingRequiresTransition =\n                ti.removeCount > 0 && ti.removeStart + ti.removeCount === viewsLength;\n        }\n        if (ti.insertViews) {\n            // allow -1 to be passed in to auto push it on the end\n            // and clean up the index if it's larger then the size of the stack\n            if (ti.insertStart < 0 || ti.insertStart > viewsLength) {\n                ti.insertStart = viewsLength;\n            }\n            ti.enteringRequiresTransition = ti.insertStart === viewsLength;\n        }\n        var insertViews = ti.insertViews;\n        if (!insertViews) {\n            return;\n        }\n        assert(insertViews.length > 0, 'length can not be zero');\n        var viewControllers = convertToViews(insertViews);\n        if (viewControllers.length === 0) {\n            throw new Error('invalid views to insert');\n        }\n        // Check all the inserted view are correct\n        for (var _i = 0, viewControllers_1 = viewControllers; _i < viewControllers_1.length; _i++) {\n            var view = viewControllers_1[_i];\n            view.delegate = ti.opts.delegate;\n            var nav = view.nav;\n            if (nav && nav !== this) {\n                throw new Error('inserted view was already inserted');\n            }\n            if (view.state === VIEW_STATE_DESTROYED) {\n                throw new Error('inserted view was already destroyed');\n            }\n        }\n        ti.insertViews = viewControllers;\n    };\n    class_1.prototype.getEnteringView = function (ti, leavingView) {\n        var insertViews = ti.insertViews;\n        if (insertViews !== undefined) {\n            // grab the very last view of the views to be inserted\n            // and initialize it as the new entering view\n            return insertViews[insertViews.length - 1];\n        }\n        var removeStart = ti.removeStart;\n        if (removeStart !== undefined) {\n            var views = this.views;\n            var removeEnd = removeStart + ti.removeCount;\n            for (var i = views.length - 1; i >= 0; i--) {\n                var view = views[i];\n                if ((i < removeStart || i >= removeEnd) && view !== leavingView) {\n                    return view;\n                }\n            }\n        }\n        return undefined;\n    };\n    class_1.prototype.postViewInit = function (enteringView, leavingView, ti) {\n        assert(leavingView || enteringView, 'Both leavingView and enteringView are null');\n        assert(ti.resolve, 'resolve must be valid');\n        assert(ti.reject, 'reject must be valid');\n        var opts = ti.opts;\n        var insertViews = ti.insertViews;\n        var removeStart = ti.removeStart;\n        var removeCount = ti.removeCount;\n        var destroyQueue;\n        // there are views to remove\n        if (removeStart !== undefined && removeCount !== undefined) {\n            assert(removeStart >= 0, 'removeStart can not be negative');\n            assert(removeCount >= 0, 'removeCount can not be negative');\n            destroyQueue = [];\n            for (var i = 0; i < removeCount; i++) {\n                var view = this.views[i + removeStart];\n                if (view && view !== enteringView && view !== leavingView) {\n                    destroyQueue.push(view);\n                }\n            }\n            // default the direction to \"back\"\n            opts.direction = opts.direction || 'back';\n        }\n        var finalBalance = this.views.length +\n            (insertViews !== undefined ? insertViews.length : 0) -\n            (removeCount !== undefined ? removeCount : 0);\n        assert(finalBalance >= 0, 'final balance can not be negative');\n        if (finalBalance === 0) {\n            console.warn(\"You can't remove all the pages in the navigation stack. nav.pop() is probably called too many times.\", this, this.el);\n            throw new Error('navigation stack needs at least one root page');\n        }\n        // At this point the transition can not be rejected, any throw should be an error\n        // there are views to insert\n        if (insertViews) {\n            // add the views to the\n            var insertIndex = ti.insertStart;\n            for (var _i = 0, insertViews_1 = insertViews; _i < insertViews_1.length; _i++) {\n                var view = insertViews_1[_i];\n                this.insertViewAt(view, insertIndex);\n                insertIndex++;\n            }\n            if (ti.enteringRequiresTransition) {\n                // default to forward if not already set\n                opts.direction = opts.direction || 'forward';\n            }\n        }\n        // if the views to be removed are in the beginning or middle\n        // and there is not a view that needs to visually transition out\n        // then just destroy them and don't transition anything\n        // batch all of lifecycles together\n        // let's make sure, callbacks are zoned\n        if (destroyQueue && destroyQueue.length > 0) {\n            for (var _a = 0, destroyQueue_1 = destroyQueue; _a < destroyQueue_1.length; _a++) {\n                var view = destroyQueue_1[_a];\n                lifecycle(view.element, LIFECYCLE_WILL_LEAVE);\n                lifecycle(view.element, LIFECYCLE_DID_LEAVE);\n                lifecycle(view.element, LIFECYCLE_WILL_UNLOAD);\n            }\n            // once all lifecycle events has been delivered, we can safely detroy the views\n            for (var _b = 0, destroyQueue_2 = destroyQueue; _b < destroyQueue_2.length; _b++) {\n                var view = destroyQueue_2[_b];\n                this.destroyView(view);\n            }\n        }\n    };\n    class_1.prototype.transition = function (enteringView, leavingView, ti) {\n        return __awaiter(this, void 0, void 0, function () {\n            var opts, progressCallback, mode, enteringEl, leavingEl, animationOpts, hasCompleted;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        opts = ti.opts;\n                        progressCallback = opts.progressAnimation\n                            ? function (ani) { return _this.sbAni = ani; }\n                            : undefined;\n                        mode = getIonMode(this);\n                        enteringEl = enteringView.element;\n                        leavingEl = leavingView && leavingView.element;\n                        animationOpts = Object.assign({ mode: mode, showGoBack: this.canGoBackSync(enteringView), baseEl: this.el, animationBuilder: this.animation || opts.animationBuilder || config.get('navAnimation'), progressCallback: progressCallback, animated: this.animated && config.getBoolean('animated', true), enteringEl: enteringEl,\n                            leavingEl: leavingEl }, opts);\n                        return [4 /*yield*/, transition(animationOpts)];\n                    case 1:\n                        hasCompleted = (_a.sent()).hasCompleted;\n                        return [2 /*return*/, this.transitionFinish(hasCompleted, enteringView, leavingView, opts)];\n                }\n            });\n        });\n    };\n    class_1.prototype.transitionFinish = function (hasCompleted, enteringView, leavingView, opts) {\n        var cleanupView = hasCompleted ? enteringView : leavingView;\n        if (cleanupView) {\n            this.cleanup(cleanupView);\n        }\n        return {\n            hasCompleted: hasCompleted,\n            requiresTransition: true,\n            enteringView: enteringView,\n            leavingView: leavingView,\n            direction: opts.direction\n        };\n    };\n    class_1.prototype.insertViewAt = function (view, index) {\n        var views = this.views;\n        var existingIndex = views.indexOf(view);\n        if (existingIndex > -1) {\n            // this view is already in the stack!!\n            // move it to its new location\n            assert(view.nav === this, 'view is not part of the nav');\n            views.splice(index, 0, views.splice(existingIndex, 1)[0]);\n        }\n        else {\n            assert(!view.nav, 'nav is used');\n            // this is a new view to add to the stack\n            // create the new entering view\n            view.nav = this;\n            // insert the entering view into the correct index in the stack\n            views.splice(index, 0, view);\n        }\n    };\n    class_1.prototype.removeView = function (view) {\n        assert(view.state === VIEW_STATE_ATTACHED || view.state === VIEW_STATE_DESTROYED, 'view state should be loaded or destroyed');\n        var views = this.views;\n        var index = views.indexOf(view);\n        assert(index > -1, 'view must be part of the stack');\n        if (index >= 0) {\n            views.splice(index, 1);\n        }\n    };\n    class_1.prototype.destroyView = function (view) {\n        view._destroy();\n        this.removeView(view);\n    };\n    /**\n     * DOM WRITE\n     */\n    class_1.prototype.cleanup = function (activeView) {\n        // ok, cleanup time!! Destroy all of the views that are\n        // INACTIVE and come after the active view\n        // only do this if the views exist, though\n        if (this.destroyed) {\n            return;\n        }\n        var views = this.views;\n        var activeViewIndex = views.indexOf(activeView);\n        for (var i = views.length - 1; i >= 0; i--) {\n            var view = views[i];\n            /**\n             * When inserting multiple views via insertPages\n             * the last page will be transitioned to, but the\n             * others will not be. As a result, a DOM element\n             * will only be created for the last page inserted.\n             * As a result, it is possible to have views in the\n             * stack that do not have `view.element` yet.\n             */\n            var element = view.element;\n            if (element) {\n                if (i > activeViewIndex) {\n                    // this view comes after the active view\n                    // let's unload it\n                    lifecycle(element, LIFECYCLE_WILL_UNLOAD);\n                    this.destroyView(view);\n                }\n                else if (i < activeViewIndex) {\n                    // this view comes before the active view\n                    // and it is not a portal then ensure it is hidden\n                    setPageHidden(element, true);\n                }\n            }\n        }\n    };\n    class_1.prototype.canStart = function () {\n        return (!!this.swipeGesture &&\n            !this.isTransitioning &&\n            this.transInstr.length === 0 &&\n            this.animationEnabled &&\n            this.canGoBackSync());\n    };\n    class_1.prototype.onStart = function () {\n        this.queueTrns({\n            removeStart: -1,\n            removeCount: 1,\n            opts: {\n                direction: 'back',\n                progressAnimation: true\n            }\n        }, undefined);\n    };\n    class_1.prototype.onMove = function (stepValue) {\n        if (this.sbAni) {\n            this.sbAni.progressStep(stepValue);\n        }\n    };\n    class_1.prototype.onEnd = function (shouldComplete, stepValue, dur) {\n        var _this = this;\n        if (this.sbAni) {\n            this.animationEnabled = false;\n            this.sbAni.onFinish(function () {\n                _this.animationEnabled = true;\n            }, { oneTimeCallback: true });\n            // Account for rounding errors in JS\n            var newStepValue = (shouldComplete) ? -0.001 : 0.001;\n            /**\n             * Animation will be reversed here, so need to\n             * reverse the easing curve as well\n             *\n             * Additionally, we need to account for the time relative\n             * to the new easing curve, as `stepValue` is going to be given\n             * in terms of a linear curve.\n             */\n            if (!shouldComplete) {\n                this.sbAni.easing('cubic-bezier(1, 0, 0.68, 0.28)');\n                newStepValue += getTimeGivenProgression([0, 0], [1, 0], [0.68, 0.28], [1, 1], stepValue)[0];\n            }\n            else {\n                newStepValue += getTimeGivenProgression([0, 0], [0.32, 0.72], [0, 1], [1, 1], stepValue)[0];\n            }\n            this.sbAni.progressEnd(shouldComplete ? 1 : 0, newStepValue, dur);\n        }\n    };\n    class_1.prototype.render = function () {\n        return (h(\"slot\", null));\n    };\n    Object.defineProperty(class_1.prototype, \"el\", {\n        get: function () { return getElement(this); },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(class_1, \"watchers\", {\n        get: function () {\n            return {\n                \"swipeGesture\": [\"swipeGestureChanged\"],\n                \"root\": [\"rootChanged\"]\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return class_1;\n}());\nNav.style = navCss;\nvar navLink = function (el, routerDirection, component, componentProps, routerAnimation) {\n    var nav = el.closest('ion-nav');\n    if (nav) {\n        if (routerDirection === 'forward') {\n            if (component !== undefined) {\n                return nav.push(component, componentProps, { skipIfBusy: true, animationBuilder: routerAnimation });\n            }\n        }\n        else if (routerDirection === 'root') {\n            if (component !== undefined) {\n                return nav.setRoot(component, componentProps, { skipIfBusy: true, animationBuilder: routerAnimation });\n            }\n        }\n        else if (routerDirection === 'back') {\n            return nav.pop({ skipIfBusy: true, animationBuilder: routerAnimation });\n        }\n    }\n    return Promise.resolve(false);\n};\nvar NavLink = /** @class */ (function () {\n    function NavLink(hostRef) {\n        var _this = this;\n        registerInstance(this, hostRef);\n        /**\n         * The transition direction when navigating to another page.\n         */\n        this.routerDirection = 'forward';\n        this.onClick = function () {\n            return navLink(_this.el, _this.routerDirection, _this.component, _this.componentProps, _this.routerAnimation);\n        };\n    }\n    NavLink.prototype.render = function () {\n        return (h(Host, { onClick: this.onClick }));\n    };\n    Object.defineProperty(NavLink.prototype, \"el\", {\n        get: function () { return getElement(this); },\n        enumerable: false,\n        configurable: true\n    });\n    return NavLink;\n}());\nexport { Nav as ion_nav, NavLink as ion_nav_link };\n"],"sourceRoot":""}